[
    {
        "id": "abc138_f",
        "contest_id": "abc138",
        "name": "Coincidence"
    },
    {
        "id": "abc128_f",
        "contest_id": "abc128",
        "name": "Frog Jump"
    },
    {
        "id": "abc134_f",
        "contest_id": "abc134",
        "name": "Permutation Oddness"
    },
    {
        "id": "abc137_f",
        "contest_id": "abc137",
        "name": "Polynomial Construction"
    },
    {
        "id": "agc002_d",
        "contest_id": "agc002",
        "name": "Stamp Rally"
    },
    {
        "id": "agc009_c",
        "contest_id": "agc009",
        "name": "Division into Two"
    },
    {
        "id": "agc013_c",
        "contest_id": "agc013",
        "name": "Ants on a Circle"
    },
    {
        "id": "agc019_c",
        "contest_id": "agc019",
        "name": "Fountain Walk"
    },
    {
        "id": "agc023_c",
        "contest_id": "agc023",
        "name": "Painting Machines"
    },
    {
        "id": "agc028_c",
        "contest_id": "agc028",
        "name": "Min Cost Cycle"
    },
    {
        "id": "agc034_c",
        "contest_id": "agc034",
        "name": "Tests"
    },
    {
        "id": "aising2019_e",
        "contest_id": "aising2019",
        "name": "Attack to a Tree"
    },
    {
        "id": "arc058_c",
        "contest_id": "arc058",
        "name": "Iroha and Haiku"
    },
    {
        "id": "arc059_d",
        "contest_id": "arc059",
        "name": "Unhappy Hacking"
    },
    {
        "id": "arc061_c",
        "contest_id": "arc061",
        "name": "Snuke's Subway Trip"
    },
    {
        "id": "arc073_c",
        "contest_id": "arc073",
        "name": "Ball Coloring"
    },
    {
        "id": "arc074_c",
        "contest_id": "arc074",
        "name": "RGB Sequence"
    },
    {
        "id": "arc075_d",
        "contest_id": "arc075",
        "name": "Mirrored"
    },
    {
        "id": "arc082_d",
        "contest_id": "arc082",
        "name": "Sandglass"
    },
    {
        "id": "arc084_b",
        "contest_id": "abc077",
        "name": "Small Multiple"
    },
    {
        "id": "arc085_c",
        "contest_id": "arc085",
        "name": "MUL"
    },
    {
        "id": "arc087_c",
        "contest_id": "arc087",
        "name": "Prefix-free Game"
    },
    {
        "id": "arc093_c",
        "contest_id": "arc093",
        "name": "Bichrome Spanning Tree"
    },
    {
        "id": "arc095_c",
        "contest_id": "arc095",
        "name": "Symmetric Grid"
    },
    {
        "id": "arc102_c",
        "contest_id": "arc102",
        "name": "Stop. Otherwise..."
    },
    {
        "id": "codefestival_2016_final_f",
        "contest_id": "cf16-final",
        "name": "Road of the King"
    },
    {
        "id": "cf17_final_d",
        "contest_id": "cf17-final",
        "name": "Zabuton"
    },
    {
        "id": "codefestival_2016_qualB_e",
        "contest_id": "code-festival-2016-qualb",
        "name": "Lexicographical disorder"
    },
    {
        "id": "code_festival_2017_quala_d",
        "contest_id": "code-festival-2017-quala",
        "name": "Four Coloring"
    },
    {
        "id": "code_festival_2017_qualb_d",
        "contest_id": "code-festival-2017-qualb",
        "name": "101 to 010"
    },
    {
        "id": "diverta2019_e",
        "contest_id": "diverta2019",
        "name": "XOR Partitioning"
    },
    {
        "id": "diverta2019_2_e",
        "contest_id": "diverta2019-2",
        "name": "Balanced Piles"
    },
    {
        "id": "tenka1_2018_e",
        "contest_id": "tenka1-2018",
        "name": "Equilateral"
    },
    {
        "id": "yahoo_procon2019_qual_e",
        "contest_id": "yahoo-procon2019-qual",
        "name": "Odd Subrectangles"
    },
    {
        "id": "arc005_4",
        "contest_id": "arc005",
        "name": "\u9023\u5c04\u738b\u9ad8\u6a4b\u541b"
    },
    {
        "id": "arc007_4",
        "contest_id": "arc007",
        "name": "\u7834\u308c\u305f\u5bbf\u984c"
    },
    {
        "id": "arc008_4",
        "contest_id": "arc008",
        "name": "\u30bf\u30b3\u30e4\u30ad\u30aa\u30a4\u30b7\u30af\u30ca\u30fc\u30eb"
    },
    {
        "id": "arc010_4",
        "contest_id": "arc010",
        "name": "\u60c5\u5831\u4f1d\u64ad"
    },
    {
        "id": "arc013_4",
        "contest_id": "arc013",
        "name": "\u5207\u308a\u5206\u3051\u3067\u304d\u308b\u304b\u306a\uff1f"
    },
    {
        "id": "arc023_4",
        "contest_id": "arc023",
        "name": "GCD\u533a\u9593"
    },
    {
        "id": "arc024_4",
        "contest_id": "arc024",
        "name": "\u30d0\u30b9\u505c"
    },
    {
        "id": "arc027_4",
        "contest_id": "arc027",
        "name": "\u3074\u3087\u3093\u3074\u3087\u3093\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0"
    },
    {
        "id": "arc029_4",
        "contest_id": "arc029",
        "name": "\u9ad8\u6a4b\u541b\u3068\u6728\u306e\u304a\u3082\u3061\u3083"
    },
    {
        "id": "arc033_4",
        "contest_id": "arc033",
        "name": "\u898b\u305f\u3053\u3068\u306e\u306a\u3044\u591a\u9805\u5f0f"
    },
    {
        "id": "arc034_4",
        "contest_id": "arc034",
        "name": "\u30a4\u30f3\u30d5\u30ec\u30b2\u30fc\u30e0"
    },
    {
        "id": "arc038_c",
        "contest_id": "arc038",
        "name": "\u8336\u7897\u3068\u8c46"
    },
    {
        "id": "arc039_d",
        "contest_id": "arc039",
        "name": "\u65c5\u884c\u4f1a\u793e\u9ad8\u6a4b\u541b"
    },
    {
        "id": "arc043_c",
        "contest_id": "arc043",
        "name": "\u8ee2\u5012\u8ddd\u96e2"
    },
    {
        "id": "arc047_b",
        "contest_id": "arc047",
        "name": "\u540c\u4e00\u5186\u5468\u4e0a"
    },
    {
        "id": "arc050_d",
        "contest_id": "arc050",
        "name": "Suffix Concat"
    },
    {
        "id": "arc052_d",
        "contest_id": "arc052",
        "name": "9"
    },
    {
        "id": "arc057_c",
        "contest_id": "arc057",
        "name": "2\u4e57\u6839"
    },
    {
        "id": "ddcc2020_qual_e",
        "contest_id": "ddcc2020-qual",
        "name": "Majority of Balls"
    },
    {
        "id": "dwacon6th_prelims_d",
        "contest_id": "dwacon6th-prelims",
        "name": "Arrangement"
    },
    {
        "id": "abc157_f",
        "contest_id": "abc157",
        "name": "Yakiniku Optimization Problem"
    },
    {
        "id": "hitachi2020_d",
        "contest_id": "hitachi2020",
        "name": "Manga Market"
    },
    {
        "id": "tenka1_2013_qualA_d",
        "contest_id": "tenka1-2013-quala",
        "name": "\u5929\u4e0b\u4e00\u5c55\u958b"
    },
    {
        "id": "tenka1_2014_qualB_d",
        "contest_id": "tenka1-2014-qualb",
        "name": "\u5929\u4e0b\u4e00\u82b8\u8853"
    },
    {
        "id": "code_formula_2014_final_g",
        "contest_id": "code-formula-2014-final",
        "name": "\u30ce\u30a4\u30cf\u306e\u5854"
    },
    {
        "id": "code_festival_final_h",
        "contest_id": "code-festival-2014-final",
        "name": "\u90e8\u5c4b\u5272\u308a"
    },
    {
        "id": "code_festival_morning_hard_c",
        "contest_id": "code-festival-2014-morning-hard",
        "name": "\u5b9d\u63a2\u3057 2"
    },
    {
        "id": "dwango2015_prelims_4",
        "contest_id": "dwango2015-prelims",
        "name": "\u30bf\u30af\u30b7\u30fc"
    },
    {
        "id": "tenka1_2015_qualA_d",
        "contest_id": "tenka1-2015-quala",
        "name": "\u30cf\u30b7\u30dd\u30f3"
    },
    {
        "id": "cf_2015_morning_hard_b",
        "contest_id": "code-festival-2015-morning-middle",
        "name": "\u7acb\u65b9\u4f53\u3068\u30da\u30f3\u30ad"
    },
    {
        "id": "discovery_2016_qual_c",
        "contest_id": "discovery2016-qual",
        "name": "\u30a2\u30e1\u30fc\u30b8\u30f3\u30b0\u306a\u6587\u5b57\u5217\u306f\u3001\u304d\u307f\u304c\u4f5c\u308b\uff01"
    },
    {
        "id": "mujin_pc_2016_d",
        "contest_id": "mujin-pc-2016",
        "name": "Parenthesis Sequence"
    },
    {
        "id": "abc163_f",
        "contest_id": "abc163",
        "name": "path pass i"
    },
    {
        "id": "abc168_f",
        "contest_id": "abc168",
        "name": ". (Single Dot)"
    },
    {
        "id": "agc047_c",
        "contest_id": "agc047",
        "name": "Product Modulo"
    },
    {
        "id": "abc175_f",
        "contest_id": "abc175",
        "name": "Making Palindrome"
    },
    {
        "id": "abl_f",
        "contest_id": "abl",
        "name": "Heights and Pairs"
    },
    {
        "id": "abc180_f",
        "contest_id": "abc180",
        "name": "Unbranched"
    },
    {
        "id": "agc050_c",
        "contest_id": "agc050",
        "name": "Block Game"
    },
    {
        "id": "arc111_e",
        "contest_id": "arc111",
        "name": "Simple Math 3"
    },
    {
        "id": "keyence2021_e",
        "contest_id": "keyence2021",
        "name": "Greedy Ant"
    },
    {
        "id": "abc193_f",
        "contest_id": "abc193",
        "name": "Zebraness"
    },
    {
        "id": "agc052_b",
        "contest_id": "agc052",
        "name": "Tree Edges XOR"
    },
    {
        "id": "arc114_e",
        "contest_id": "arc114",
        "name": "Paper Cutting 2"
    },
    {
        "id": "jsc2021_g",
        "contest_id": "jsc2021",
        "name": "Spanning Tree"
    },
    {
        "id": "abc200_f",
        "contest_id": "abc200",
        "name": "Minflip Summation"
    },
    {
        "id": "arc118_d",
        "contest_id": "arc118",
        "name": "Hamiltonian Cycle"
    },
    {
        "id": "abc201_f",
        "contest_id": "abc201",
        "name": "Insertion Sort"
    },
    {
        "id": "arc119_e",
        "contest_id": "arc119",
        "name": "Pancakes"
    },
    {
        "id": "arc122_e",
        "contest_id": "arc122",
        "name": "Increasing LCMs"
    },
    {
        "id": "abc219_f",
        "contest_id": "abc219",
        "name": "Cleaning Robot"
    },
    {
        "id": "arc127_d",
        "contest_id": "arc127",
        "name": "Sum of Min of Xor"
    },
    {
        "id": "abc220_g",
        "contest_id": "abc220",
        "name": "Isosceles Trapezium"
    },
    {
        "id": "arc128_d",
        "contest_id": "arc128",
        "name": "Neq Neq"
    },
    {
        "id": "abc225_g",
        "contest_id": "abc225",
        "name": "X"
    },
    {
        "id": "arc130_d",
        "contest_id": "arc130",
        "name": "Zigzag Tree"
    },
    {
        "id": "abc230_g",
        "contest_id": "abc230",
        "name": "GCD Permutation"
    },
    {
        "id": "agc056_c",
        "contest_id": "agc056",
        "name": "01 Balanced"
    },
    {
        "id": "abc232_g",
        "contest_id": "abc232",
        "name": "Modulo Shortest Path"
    },
    {
        "id": "abc233_g",
        "contest_id": "abc233",
        "name": "Strongest Takahashi"
    },
    {
        "id": "abc233_h",
        "contest_id": "abc233",
        "name": "Manhattan Christmas Tree "
    },
    {
        "id": "abc234_h",
        "contest_id": "abc234",
        "name": "Enumerate Pairs"
    },
    {
        "id": "abc235_g",
        "contest_id": "abc235",
        "name": "Gardens"
    },
    {
        "id": "abc236_g",
        "contest_id": "abc236",
        "name": "Good Vertices"
    },
    {
        "id": "abc240_g",
        "contest_id": "abc240",
        "name": "Teleporting Takahashi"
    },
    {
        "id": "abc241_g",
        "contest_id": "abc241",
        "name": "Round Robin"
    },
    {
        "id": "abc248_g",
        "contest_id": "abc248",
        "name": "GCD cost on the tree"
    },
    {
        "id": "arc139_c",
        "contest_id": "arc139",
        "name": "One Three Nine"
    },
    {
        "id": "abc251_g",
        "contest_id": "abc251",
        "name": "Intersection of Polygons"
    },
    {
        "id": "arc140_d",
        "contest_id": "arc140",
        "name": "One to One"
    },
    {
        "id": "abc254_h",
        "contest_id": "abc254",
        "name": "Multiply or Divide by 2"
    },
    {
        "id": "abc255_h",
        "contest_id": "abc255",
        "name": "Range Harvest Query"
    },
    {
        "id": "abc256_h",
        "contest_id": "abc256",
        "name": "I like Query Problem"
    },
    {
        "id": "arc143_e",
        "contest_id": "arc143",
        "name": "Reversi"
    },
    {
        "id": "abc259_g",
        "contest_id": "abc259",
        "name": "Grid Card Game"
    },
    {
        "id": "abc259_h",
        "contest_id": "abc259",
        "name": "Yet Another Path Counting"
    },
    {
        "id": "arc144_d",
        "contest_id": "arc144",
        "name": "AND OR Equation"
    },
    {
        "id": "abc261_h",
        "contest_id": "abc261",
        "name": "Game on Graph"
    },
    {
        "id": "arc146_c",
        "contest_id": "arc146",
        "name": "Even XOR"
    },
    {
        "id": "abc265_g",
        "contest_id": "abc265",
        "name": "012 Inversion"
    },
    {
        "id": "abc267_g",
        "contest_id": "abc267",
        "name": "Increasing K Times"
    },
    {
        "id": "abc267_h",
        "contest_id": "abc267",
        "name": "Odd Sum"
    },
    {
        "id": "arc147_e",
        "contest_id": "arc147",
        "name": "Examination"
    },
    {
        "id": "abc268_h",
        "contest_id": "abc268",
        "name": "Taboo"
    },
    {
        "id": "abc269_g",
        "contest_id": "abc269",
        "name": "Reversible Cards 2"
    },
    {
        "id": "arc150_d",
        "contest_id": "arc150",
        "name": "Removing Gacha"
    },
    {
        "id": "abc273_g",
        "contest_id": "abc273",
        "name": "Row Column Sums 2"
    },
    {
        "id": "abc275_g",
        "contest_id": "abc275",
        "name": "Infinite Knapsack"
    },
    {
        "id": "abc277_f",
        "contest_id": "abc277",
        "name": "Sorting a Matrix"
    },
    {
        "id": "abc277_g",
        "contest_id": "abc277",
        "name": "Random Walk to Millionaire"
    },
    {
        "id": "abc278_g",
        "contest_id": "abc278",
        "name": "Generalized Subtraction Game"
    },
    {
        "id": "abc279_g",
        "contest_id": "abc279",
        "name": "At Most 2 Colors"
    },
    {
        "id": "abc282_g",
        "contest_id": "abc282",
        "name": "Similar Permutation"
    },
    {
        "id": "abc285_g",
        "contest_id": "abc285",
        "name": "Tatami"
    },
    {
        "id": "abc286_h",
        "contest_id": "abc286",
        "name": "Don't Swim"
    },
    {
        "id": "arc156_d",
        "contest_id": "arc156",
        "name": "Xor Sum 5"
    },
    {
        "id": "abc290_g",
        "contest_id": "abc290",
        "name": "Edge Elimination"
    },
    {
        "id": "arc157_d",
        "contest_id": "arc157",
        "name": "YY Garden"
    },
    {
        "id": "abc298_g",
        "contest_id": "abc298",
        "name": "Strawberry War"
    },
    {
        "id": "abc301_f",
        "contest_id": "abc301",
        "name": "Anti-DDoS"
    },
    {
        "id": "arc160_d",
        "contest_id": "arc160",
        "name": "Mahjong"
    },
    {
        "id": "abc302_h",
        "contest_id": "abc302",
        "name": "Ball Collector"
    },
    {
        "id": "agc062_b",
        "contest_id": "agc062",
        "name": "Split and Insert"
    },
    {
        "id": "abc303_h",
        "contest_id": "abc303",
        "name": "Constrained Tree Degree"
    },
    {
        "id": "abc306_g",
        "contest_id": "abc306",
        "name": "Return to 1"
    },
    {
        "id": "arc162_d",
        "contest_id": "arc162",
        "name": "Smallest Vertices"
    },
    {
        "id": "arc163_d",
        "contest_id": "arc163",
        "name": "Sum of SCC"
    },
    {
        "id": "abc312_h",
        "contest_id": "abc312",
        "name": "snukesnuke"
    },
    {
        "id": "agc063_c",
        "contest_id": "agc063",
        "name": "Add Mod Operations"
    },
    {
        "id": "abc313_g",
        "contest_id": "abc313",
        "name": "Redistribution of Piles"
    },
    {
        "id": "abc319_f",
        "contest_id": "abc319",
        "name": "Fighter Takahashi"
    },
    {
        "id": "abc320_g",
        "contest_id": "abc320",
        "name": "Slot Strategy 2 (Hard)"
    },
    {
        "id": "arc165_d",
        "contest_id": "arc165",
        "name": "Substring Comparison"
    },
    {
        "id": "abc321_g",
        "contest_id": "abc321",
        "name": "Electric Circuit"
    },
    {
        "id": "abc324_g",
        "contest_id": "abc324",
        "name": "Generate Arrays"
    },
    {
        "id": "abc326_g",
        "contest_id": "abc326",
        "name": "Unlock Achievement"
    },
    {
        "id": "arc168_d",
        "contest_id": "arc168",
        "name": "Maximize Update"
    },
    {
        "id": "abc333_g",
        "contest_id": "abc333",
        "name": "Nearest Fraction"
    },
    {
        "id": "agc065_c",
        "contest_id": "agc065",
        "name": "Avoid Half Sum"
    },
    {
        "id": "abc338_g",
        "contest_id": "abc338",
        "name": "evall"
    },
    {
        "id": "abc340_g",
        "contest_id": "abc340",
        "name": "Leaf Color"
    },
    {
        "id": "arc173_d",
        "contest_id": "arc173",
        "name": "Bracket Walk"
    },
    {
        "id": "abc348_g",
        "contest_id": "abc348",
        "name": "Max (Sum - Max)"
    }
]