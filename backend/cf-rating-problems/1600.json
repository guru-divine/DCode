[
{
    "contestId": 1946,
    "index": "C",
    "name": "Tree Cutting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1941,
    "index": "E",
    "name": "Rudolf and k Bridges",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 1938,
    "index": "H",
    "name": "Pho Restaurant",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": []
},
{
    "contestId": 1932,
    "index": "E",
    "name": "Final Countdown",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1928,
    "index": "C",
    "name": "Physical Education Lesson",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1921,
    "index": "E",
    "name": "Eat the Chip",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "games",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1920,
    "index": "C",
    "name": "Partitioning the Array",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1917,
    "index": "C",
    "name": "Watering an Array",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1910,
    "index": "C",
    "name": "Poisonous Swamp",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "*special",
        "implementation",
        "implementation"
    ]
},
{
    "contestId": 1910,
    "index": "B",
    "name": "Security Guard",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "greedy"
    ]
},
{
    "contestId": 1907,
    "index": "E",
    "name": "Good Triples",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 1904,
    "index": "D1",
    "name": "Set To Max (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1899,
    "index": "F",
    "name": "Alex's whims",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1886,
    "index": "C",
    "name": "Decreasing String",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1878,
    "index": "D",
    "name": "Reverse Madness",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1875,
    "index": "D",
    "name": "Jellyfish and Mex",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1862,
    "index": "E",
    "name": "Kolya and Movie Theatre",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1861,
    "index": "C",
    "name": "Queries for the Array",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "dfs and similar",
        "implementation",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1857,
    "index": "F",
    "name": "Sum and Product",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "math"
    ]
},
{
    "contestId": 1856,
    "index": "C",
    "name": "To Become Max",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1849,
    "index": "C",
    "name": "Binary String Copying",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1843,
    "index": "E",
    "name": "Tracking Segments",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1840,
    "index": "E",
    "name": "Character Blocking",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 1833,
    "index": "E",
    "name": "Round Dance",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1829,
    "index": "G",
    "name": "Hits Different",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1822,
    "index": "E",
    "name": "Making Anti-Palindromes",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1811,
    "index": "D",
    "name": "Umka and a Long Flight",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1806,
    "index": "C",
    "name": "Sequence Master",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1801,
    "index": "A",
    "name": "The Very Beautiful Blanket",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ]
},
{
    "contestId": 1798,
    "index": "D",
    "name": "Shocking Arrangement",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1797,
    "index": "C",
    "name": "Li Hua and Chess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1796,
    "index": "C",
    "name": "Maximum Set",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 1795,
    "index": "D",
    "name": "Triangle Coloring",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1787,
    "index": "C",
    "name": "Remove the Bracket",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1781,
    "index": "C",
    "name": "Equal Frequencies",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1779,
    "index": "C",
    "name": "Least Prefix Sum",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1778,
    "index": "C",
    "name": "Flexible String",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "strings"
    ]
},
{
    "contestId": 1775,
    "index": "C",
    "name": "Interesting Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "math"
    ]
},
{
    "contestId": 1774,
    "index": "D",
    "name": "Same Count One",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1771,
    "index": "C",
    "name": "Hossam and Trainees",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1766,
    "index": "D",
    "name": "Lucky Chains",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1753,
    "index": "B",
    "name": "Factorial Divisibility",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1748,
    "index": "C",
    "name": "Zero-Sum Prefixes",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1741,
    "index": "E",
    "name": "Sending a Sequence Over the Network",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1730,
    "index": "B",
    "name": "Meeting on the Line",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "geometry",
        "greedy",
        "implementation",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1722,
    "index": "E",
    "name": "Counting Rectangles",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1714,
    "index": "D",
    "name": "Color with Occurrences",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1707,
    "index": "A",
    "name": "Doremy's IQ",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1703,
    "index": "G",
    "name": "Good Key, Bad Key",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1702,
    "index": "E",
    "name": "Split Into Two Sets",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1698,
    "index": "D",
    "name": "Fixed Point Guessing",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1689,
    "index": "C",
    "name": "Infected Tree",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1687,
    "index": "A",
    "name": "The Enchanted Forest",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1680,
    "index": "C",
    "name": "Binary String",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1677,
    "index": "A",
    "name": "Tokitsukaze and Strange Inequality",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1671,
    "index": "D",
    "name": "Insert a Progression",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1665,
    "index": "C",
    "name": "Tree Infection",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1660,
    "index": "E",
    "name": "Matrix and Shifts",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1660,
    "index": "D",
    "name": "Maximum Product Strikes Back",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1658,
    "index": "D1",
    "name": "388535 (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "math"
    ]
},
{
    "contestId": 1633,
    "index": "D",
    "name": "Make Them Equal",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1632,
    "index": "C",
    "name": "Strange Test",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 1623,
    "index": "C",
    "name": "Balanced Stone Heaps",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1622,
    "index": "C",
    "name": "Set or Decrease",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1615,
    "index": "C",
    "name": "Menorah",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1612,
    "index": "D",
    "name": "X-Magic Pair",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1610,
    "index": "C",
    "name": "Keshi Is Throwing a Party",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1609,
    "index": "D",
    "name": "Social Network",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1607,
    "index": "E",
    "name": "Robot on the Board 1",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1603,
    "index": "B",
    "name": "Moderate Modular Mode",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1593,
    "index": "E",
    "name": "Gardener and Tree",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1582,
    "index": "D",
    "name": "Vupsen, Pupsen and 0",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1567,
    "index": "C",
    "name": "Carrying Conundrum",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1566,
    "index": "D2",
    "name": "Seating Arrangements (hard version) ",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1555,
    "index": "D",
    "name": "Say No to Palindromes",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "strings"
    ]
},
{
    "contestId": 1542,
    "index": "C",
    "name": "Strange Function",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1539,
    "index": "D",
    "name": "PriceFixed",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1537,
    "index": "E1",
    "name": "Erase and Extend (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1530,
    "index": "D",
    "name": "Secret Santa",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "flows",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1528,
    "index": "A",
    "name": "Parsa's Humongous Tree",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1527,
    "index": "C",
    "name": "Sequence Pair Weight",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1526,
    "index": "C2",
    "name": "Potions (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1523,
    "index": "C",
    "name": "Compression and Expansion",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1520,
    "index": "F1",
    "name": "Guess the K-th Zero (Easy version)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1519,
    "index": "D",
    "name": "Maximum Sum of Products",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1514,
    "index": "C",
    "name": "Product 1 Modulo N",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 1513,
    "index": "C",
    "name": "Add One",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 1512,
    "index": "E",
    "name": "Permutation by Sum",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1511,
    "index": "D",
    "name": "Min Cost String",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1505,
    "index": "B",
    "name": "DMCA",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 1503,
    "index": "A",
    "name": "Balance the Bits",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1498,
    "index": "C",
    "name": "Planar Reflections",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1497,
    "index": "C2",
    "name": "k-LCM (hard version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1486,
    "index": "C1",
    "name": "Guessing the Greatest (easy version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1482,
    "index": "C",
    "name": "Basic Diplomacy",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1481,
    "index": "C",
    "name": "Fence Painting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1476,
    "index": "C",
    "name": "Longest Simple Cycle",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1475,
    "index": "E",
    "name": "Advertising Agency",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1469,
    "index": "C",
    "name": "Building a Fence",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1468,
    "index": "K",
    "name": "The Robot",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1461,
    "index": "D",
    "name": "Divide and Summarize",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "divide and conquer",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1458,
    "index": "A",
    "name": "Row GCD",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1455,
    "index": "D",
    "name": "Sequence and Swaps",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1452,
    "index": "D",
    "name": "Radio Towers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1437,
    "index": "D",
    "name": "Minimal Height Tree",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1431,
    "index": "C",
    "name": "Black Friday",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 1423,
    "index": "K",
    "name": "Lonely Numbers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1407,
    "index": "C",
    "name": "Chocolate Bunny",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1398,
    "index": "C",
    "name": "Good Subarrays",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "dp",
        "math"
    ]
},
{
    "contestId": 1396,
    "index": "A",
    "name": "Multiples of Length",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 1395,
    "index": "C",
    "name": "Boboniu and Bit Operations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1389,
    "index": "B",
    "name": "Array Walk",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1374,
    "index": "E1",
    "name": "Reading Books (easy version)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1373,
    "index": "D",
    "name": "Maximum Sum on Even Positions",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "divide and conquer",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1371,
    "index": "D",
    "name": "Grid-00100",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1364,
    "index": "C",
    "name": "Ehab and Prefix MEXs",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1363,
    "index": "C",
    "name": "Game On Leaves",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "games",
        "trees"
    ]
},
{
    "contestId": 1358,
    "index": "C",
    "name": "Celex Update",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1353,
    "index": "D",
    "name": "Constructing the Array",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1352,
    "index": "G",
    "name": "Special Permutation",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1349,
    "index": "A",
    "name": "Orac and LCM",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1348,
    "index": "C",
    "name": "Phoenix and Distribution",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1346,
    "index": "D",
    "name": "Constructing the Dungeon",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1346,
    "index": "C",
    "name": "Spring Cleaning",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1344,
    "index": "A",
    "name": "Hilbert's Hotel",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1342,
    "index": "C",
    "name": "Yet Another Counting Problem",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1336,
    "index": "A",
    "name": "Linova and Kingdom",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1334,
    "index": "C",
    "name": "Circle of Monsters",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1327,
    "index": "C",
    "name": "Game with Chips",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1321,
    "index": "C",
    "name": "Remove Adjacent",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1305,
    "index": "C",
    "name": "Kuroni and Impossible Calculation",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1303,
    "index": "C",
    "name": "Perfect Keyboard",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1295,
    "index": "C",
    "name": "Obtain The String",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1294,
    "index": "D",
    "name": "MEX maximizing",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1290,
    "index": "A",
    "name": "Mind Control",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1288,
    "index": "C",
    "name": "Two Arrays",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1284,
    "index": "C",
    "name": "New Year and Permutation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1282,
    "index": "B2",
    "name": "K for the Price of One (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1281,
    "index": "B",
    "name": "Azamon Web Services",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1255,
    "index": "C",
    "name": "League of Leesins",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1252,
    "index": "C",
    "name": "Even Path",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1251,
    "index": "C",
    "name": "Minimize The Integer",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1243,
    "index": "B2",
    "name": "Character Swap (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "strings"
    ]
},
{
    "contestId": 1238,
    "index": "C",
    "name": "Standard Free2play",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1234,
    "index": "D",
    "name": "Distinct Characters Queries",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1227,
    "index": "D1",
    "name": "Optimal Subsequences (Easy Version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1225,
    "index": "C",
    "name": "p-binary",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1223,
    "index": "C",
    "name": "Save the Nature",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1217,
    "index": "B",
    "name": "Zmei Gorynich",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1213,
    "index": "D2",
    "name": "Equalizing by Division (hard version)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1203,
    "index": "D1",
    "name": "Remove the Substring (easy version)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1198,
    "index": "B",
    "name": "Welfare State",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1198,
    "index": "A",
    "name": "MP3",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1196,
    "index": "D2",
    "name": "RGB Substring (hard version)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1188,
    "index": "A1",
    "name": "Add on a Tree",
    "type": "PROGRAMMING",
    "points": 250.0,
    "rating": 1600,
    "tags": [
        "trees"
    ]
},
{
    "contestId": 1184,
    "index": "D1",
    "name": "Parallel Universes (Easy)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1184,
    "index": "C1",
    "name": "Heidi and the Turing Test (Easy)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1175,
    "index": "C",
    "name": "Electrification",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1175,
    "index": "B",
    "name": "Catch Overflow!",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 1165,
    "index": "E",
    "name": "Two Arrays and Sum of Functions",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1165,
    "index": "D",
    "name": "Almost All Divisors",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1163,
    "index": "B2",
    "name": "Cat Party (Hard Edition)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1151,
    "index": "D",
    "name": "Stas and the Queue at the Buffet",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1151,
    "index": "B",
    "name": "Dima and a Bad XOR",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 1148,
    "index": "B",
    "name": "Born This Way",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "two pointers"
    ]
},
{
    "contestId": 1140,
    "index": "C",
    "name": "Playlist",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1137,
    "index": "B",
    "name": "Camp Schedule",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1137,
    "index": "A",
    "name": "Skyscrapers",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1133,
    "index": "F1",
    "name": "Spanning Tree with Maximum Degree",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 1121,
    "index": "C",
    "name": "System Testing",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1115,
    "index": "U2",
    "name": "Chessboard unitary",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1115,
    "index": "G3",
    "name": "Palindrome checker oracle",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1115,
    "index": "G2",
    "name": "OR oracle",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1109,
    "index": "A",
    "name": "Sasha and a Bit of Relax",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1098,
    "index": "A",
    "name": "Sum in the tree",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1096,
    "index": "C",
    "name": "Polygon for the Angle",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 1095,
    "index": "D",
    "name": "Circular Dance",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1085,
    "index": "C",
    "name": "Connect Three",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1082,
    "index": "C",
    "name": "Multi-Subject Competition",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1082,
    "index": "B",
    "name": "Vova and Trophies",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1077,
    "index": "D",
    "name": "Cutting Out",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "sortings"
    ]
},
{
    "contestId": 1065,
    "index": "C",
    "name": "Make It Equal",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1062,
    "index": "C",
    "name": "Banh-mi",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1060,
    "index": "C",
    "name": "Maximum Subrectangle",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1059,
    "index": "C",
    "name": "Sequence Transformation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1056,
    "index": "D",
    "name": "Decorate Apple Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1056,
    "index": "B",
    "name": "Divide Candies",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1045,
    "index": "I",
    "name": "Palindrome Pairs",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1041,
    "index": "C",
    "name": "Coffee Break",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1036,
    "index": "D",
    "name": "Vasya and Arrays",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1036,
    "index": "B",
    "name": "Diagonal Walking v.2",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1033,
    "index": "C",
    "name": "Permutation Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "dp",
        "games"
    ]
},
{
    "contestId": 1031,
    "index": "C",
    "name": "Cram Time",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1029,
    "index": "C",
    "name": "Maximal Intersection",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1028,
    "index": "C",
    "name": "Rectangles",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "geometry",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1027,
    "index": "C",
    "name": "Minimum Value Rectangle",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1025,
    "index": "C",
    "name": "Plasticine zebra",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1025,
    "index": "B",
    "name": "Weakened Common Divisor",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 1017,
    "index": "C",
    "name": "The Phone Number",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1015,
    "index": "D",
    "name": "Walking Between Houses",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1006,
    "index": "E",
    "name": "Military Problem",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1003,
    "index": "D",
    "name": "Coins and Queries",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1002,
    "index": "D3",
    "name": "Oracle for majority function",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": []
},
{
    "contestId": 1002,
    "index": "B3",
    "name": "Distinguish four 2-qubit states",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": []
},
{
    "contestId": 1002,
    "index": "B2",
    "name": "Distinguish GHZ state and W state",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": []
},
{
    "contestId": 1001,
    "index": "E",
    "name": "Distinguish Bell states",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 993,
    "index": "A",
    "name": "Two Squares",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 992,
    "index": "C",
    "name": "Nastya and a Wardrobe",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 992,
    "index": "B",
    "name": "Nastya Studies Informatics",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 986,
    "index": "A",
    "name": "Fair",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "graphs",
        "greedy",
        "number theory",
        "shortest paths"
    ]
},
{
    "contestId": 980,
    "index": "B",
    "name": "Marlin",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 979,
    "index": "C",
    "name": "Kuro and Walking Route",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 962,
    "index": "D",
    "name": "Merge Equals",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 958,
    "index": "E1",
    "name": "Guard Duty (easy)",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry",
        "greedy",
        "math"
    ]
},
{
    "contestId": 954,
    "index": "D",
    "name": "Fight Against Traffic",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 952,
    "index": "C",
    "name": "Ravioli Sort",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 949,
    "index": "A",
    "name": "Zebras",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 940,
    "index": "D",
    "name": "Alena And The Heater",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "implementation"
    ]
},
{
    "contestId": 939,
    "index": "D",
    "name": "Love Rescue",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 939,
    "index": "C",
    "name": "Convenient For Everybody",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 935,
    "index": "C",
    "name": "Fifa and Fafa",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 932,
    "index": "C",
    "name": "Permutation Cycle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 930,
    "index": "B",
    "name": "Game with String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "probabilities",
        "strings"
    ]
},
{
    "contestId": 926,
    "index": "D",
    "name": "Choose Place",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": []
},
{
    "contestId": 925,
    "index": "A",
    "name": "Stairs and Elevators",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 924,
    "index": "B",
    "name": "Three-level Laser",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 923,
    "index": "B",
    "name": "Producing Snow",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 922,
    "index": "C",
    "name": "Cave Painting",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "number theory"
    ]
},
{
    "contestId": 916,
    "index": "C",
    "name": "Jamie and Interesting Graph",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 913,
    "index": "C",
    "name": "Party Lemonade",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 910,
    "index": "B",
    "name": "Door Frames",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 906,
    "index": "A",
    "name": "Shockers",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 898,
    "index": "E",
    "name": "Squares and not squares",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 898,
    "index": "D",
    "name": "Alarm Clock",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 888,
    "index": "D",
    "name": "Almost Identity Permutations",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 878,
    "index": "A",
    "name": "Short Program",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ]
},
{
    "contestId": 877,
    "index": "C",
    "name": "Slava and tanks",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 873,
    "index": "C",
    "name": "Strange Game On Matrix",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 858,
    "index": "D",
    "name": "Polycarp's phone book",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 856,
    "index": "A",
    "name": "Set Theory",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 849,
    "index": "B",
    "name": "Tell Your World",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 848,
    "index": "A",
    "name": "From Y to Y",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 847,
    "index": "H",
    "name": "Load Testing",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 847,
    "index": "B",
    "name": "Preparing for Merge Sort",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 845,
    "index": "B",
    "name": "Luba And The Ticket",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 837,
    "index": "B",
    "name": "Flag of Berland",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 835,
    "index": "C",
    "name": "Star sky",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 832,
    "index": "B",
    "name": "Petya and Exam",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 830,
    "index": "B",
    "name": "Cards Sorting",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 825,
    "index": "C",
    "name": "Multi-judge Solving",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 825,
    "index": "B",
    "name": "Five-In-a-Row",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 822,
    "index": "C",
    "name": "Hacker, pack your bags!",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 818,
    "index": "B",
    "name": "Permutation Game",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 817,
    "index": "C",
    "name": "Really Big Numbers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 814,
    "index": "C",
    "name": "An impassioned circulation of affection",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "dp",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 812,
    "index": "B",
    "name": "Sagheer, the Hausmeister",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 793,
    "index": "B",
    "name": "Igor and his way to work",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 788,
    "index": "A",
    "name": "Functions again",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 785,
    "index": "C",
    "name": "Anton and Fairy Tale",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 780,
    "index": "C",
    "name": "Andryusha and Colored Balloons",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 780,
    "index": "B",
    "name": "The Meeting Place Cannot Be Changed",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 777,
    "index": "C",
    "name": "Alyona and Spreadsheet",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 774,
    "index": "K",
    "name": "Stepan and Vowels",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 768,
    "index": "B",
    "name": "Code For 1",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer"
    ]
},
{
    "contestId": 763,
    "index": "A",
    "name": "Timofey and a tree",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 756,
    "index": "B",
    "name": "Travel Card",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 753,
    "index": "B",
    "name": "Interactive Bulls and Cows (Easy)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 750,
    "index": "C",
    "name": "New Year and Rating",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "math"
    ]
},
{
    "contestId": 746,
    "index": "C",
    "name": "Tram",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 741,
    "index": "B",
    "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu"
    ]
},
{
    "contestId": 741,
    "index": "A",
    "name": "Arpa's loud Owf and Mehrdad's evil plan",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "math"
    ]
},
{
    "contestId": 735,
    "index": "D",
    "name": "Taxes",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 735,
    "index": "C",
    "name": "Tennis Championship",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 734,
    "index": "C",
    "name": "Anton and Making Potions",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 733,
    "index": "D",
    "name": "Kostya the Sculptor",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "hashing"
    ]
},
{
    "contestId": 731,
    "index": "C",
    "name": "Socks",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 730,
    "index": "G",
    "name": "Car Repair Shop",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 727,
    "index": "B",
    "name": "Bill Total Value",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "expression parsing",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 725,
    "index": "C",
    "name": "Hidden Word",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 723,
    "index": "D",
    "name": "Lakes in Berland",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 723,
    "index": "C",
    "name": "Polycarp at the Radio",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 722,
    "index": "C",
    "name": "Destroying Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "dsu"
    ]
},
{
    "contestId": 715,
    "index": "A",
    "name": "Plus and Square Root",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 712,
    "index": "C",
    "name": "Memory and De-Evolution",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 706,
    "index": "C",
    "name": "Hard problem",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 704,
    "index": "A",
    "name": "Thor",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 691,
    "index": "B",
    "name": "s-palindrome",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 689,
    "index": "B",
    "name": "Mike and Shortcuts",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 683,
    "index": "C",
    "name": "Symmetric Difference",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 683,
    "index": "B",
    "name": "The Teacher of Physical Education",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 682,
    "index": "C",
    "name": "Alyona and the Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 681,
    "index": "C",
    "name": "Heap Operations",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 678,
    "index": "C",
    "name": "Joty and Chocolate",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 678,
    "index": "B",
    "name": "The Same Calendar",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 665,
    "index": "A",
    "name": "Buses Between Cities",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 660,
    "index": "C",
    "name": "Hard Process",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 659,
    "index": "E",
    "name": "New Reform",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 649,
    "index": "D",
    "name": "\u0414\u0435\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0430\u043c\u044f\u0442\u0438",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 645,
    "index": "C",
    "name": "Enduring Exodus",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 643,
    "index": "B",
    "name": "Bear and Two Paths",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 639,
    "index": "B",
    "name": "Bear and Forgotten Tree 3",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 637,
    "index": "D",
    "name": "Running with Obstacles",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "*special",
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 630,
    "index": "G",
    "name": "Challenge Pennants",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 626,
    "index": "C",
    "name": "Block Towers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 618,
    "index": "C",
    "name": "Constellation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 617,
    "index": "C",
    "name": "Watering Flowers",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 616,
    "index": "D",
    "name": "Longest k-Good Segment",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 616,
    "index": "C",
    "name": "The Labyrinth",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 615,
    "index": "B",
    "name": "Longtail Hedgehog",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1600,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 607,
    "index": "A",
    "name": "Chain Reaction",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 606,
    "index": "B",
    "name": "Testing Robots",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 605,
    "index": "A",
    "name": "Sorting Railway Cars",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 603,
    "index": "A",
    "name": "Alternative Thinking",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 601,
    "index": "A",
    "name": "The Two Routes",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 600,
    "index": "A",
    "name": "Extract Numbers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 599,
    "index": "C",
    "name": "Day at the Beach",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "sortings"
    ]
},
{
    "contestId": 597,
    "index": "B",
    "name": "Restaurant",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 597,
    "index": "A",
    "name": "Divisibility",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 595,
    "index": "B",
    "name": "Pasha and Phone",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 593,
    "index": "B",
    "name": "Anton and Lines",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 573,
    "index": "B",
    "name": "Bear and Blocks",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "math"
    ]
},
{
    "contestId": 570,
    "index": "C",
    "name": "Replacement",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 568,
    "index": "A",
    "name": "Primes or Palindromes?",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 559,
    "index": "A",
    "name": "Gerald's Hexagon",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry",
        "math"
    ]
},
{
    "contestId": 538,
    "index": "C",
    "name": "Tourist's Notes",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 534,
    "index": "C",
    "name": "Polycarpus' Dice",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 530,
    "index": "D",
    "name": "Set subtraction",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 530,
    "index": "B",
    "name": "String inside out",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 525,
    "index": "C",
    "name": "Ilya and Sticks",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 524,
    "index": "A",
    "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 523,
    "index": "D",
    "name": "Statistics of Recompressing Videos",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "*special",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 518,
    "index": "C",
    "name": "Anya and Smartphone",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 518,
    "index": "A",
    "name": "Vitaly and Strings",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "strings"
    ]
},
{
    "contestId": 510,
    "index": "C",
    "name": "Fox And Names",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 508,
    "index": "C",
    "name": "Anya and Ghosts",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 500,
    "index": "C",
    "name": "New Year Book Reading",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 500,
    "index": "B",
    "name": "New Year Permutation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 495,
    "index": "B",
    "name": "Modular Equations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 493,
    "index": "C",
    "name": "Vasya and Basketball",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 476,
    "index": "C",
    "name": "Dreamoon and Sums",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 453,
    "index": "A",
    "name": "Little Pony and Expected Maximum",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "probabilities"
    ]
},
{
    "contestId": 446,
    "index": "A",
    "name": "DZY Loves Sequences",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 444,
    "index": "A",
    "name": "DZY Loves Physics",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 440,
    "index": "B",
    "name": "Balancer",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 435,
    "index": "C",
    "name": "Cardiogram",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 431,
    "index": "C",
    "name": "k-Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 430,
    "index": "A",
    "name": "Points and Segments (easy)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "sortings"
    ]
},
{
    "contestId": 429,
    "index": "B",
    "name": "Working out",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 424,
    "index": "C",
    "name": "Magic Formulas",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 416,
    "index": "C",
    "name": "Booking System",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 411,
    "index": "B",
    "name": "Multi-core Processor",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 407,
    "index": "B",
    "name": "Long Path",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 407,
    "index": "A",
    "name": "Triangle",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry",
        "implementation",
        "math"
    ]
},
{
    "contestId": 405,
    "index": "C",
    "name": "Unusual Product",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 383,
    "index": "A",
    "name": "Milking cows",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 380,
    "index": "A",
    "name": "Sereja and Prefixes",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force"
    ]
},
{
    "contestId": 377,
    "index": "A",
    "name": "Maze",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 375,
    "index": "B",
    "name": "Maximum Submatrix 2",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 375,
    "index": "A",
    "name": "Divisible by Seven",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 373,
    "index": "B",
    "name": "Making Sequences is Fun",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 372,
    "index": "A",
    "name": "Counting Kangaroos is Fun",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 371,
    "index": "C",
    "name": "Hamburgers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force"
    ]
},
{
    "contestId": 369,
    "index": "C",
    "name": "Valera and Elections",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 364,
    "index": "A",
    "name": "Matrix",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 353,
    "index": "C",
    "name": "Find Maximum",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 350,
    "index": "C",
    "name": "Bombs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 348,
    "index": "A",
    "name": "Mafia",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "math",
        "sortings"
    ]
},
{
    "contestId": 346,
    "index": "A",
    "name": "Alice and Bob",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "games",
        "math",
        "number theory"
    ]
},
{
    "contestId": 343,
    "index": "B",
    "name": "Alternating Current",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 343,
    "index": "A",
    "name": "Rational Resistance",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 340,
    "index": "C",
    "name": "Tourist Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "implementation",
        "math"
    ]
},
{
    "contestId": 337,
    "index": "C",
    "name": "Quiz",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "matrices",
        "number theory"
    ]
},
{
    "contestId": 333,
    "index": "A",
    "name": "Secrets",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 323,
    "index": "A",
    "name": "Black-and-White Cube",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "constructive algorithms"
    ]
},
{
    "contestId": 322,
    "index": "B",
    "name": "Ciel and Flowers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 319,
    "index": "A",
    "name": "Malek Dance Club",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 317,
    "index": "A",
    "name": "Perfect Pair",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 316,
    "index": "B2",
    "name": "EKG",
    "type": "PROGRAMMING",
    "points": 70.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 314,
    "index": "A",
    "name": "Sereja and Contest",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 305,
    "index": "C",
    "name": "Ivan and Powers of Two",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 305,
    "index": "A",
    "name": "Strange Addition",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 297,
    "index": "B",
    "name": "Fish Weight",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 291,
    "index": "D",
    "name": "Parallel Programming",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "*special",
        "greedy"
    ]
},
{
    "contestId": 291,
    "index": "C",
    "name": "Network Mask",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "*special",
        "bitmasks",
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 283,
    "index": "A",
    "name": "Cows and Sequence",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 272,
    "index": "D",
    "name": "Dima and Two Sequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "math",
        "sortings"
    ]
},
{
    "contestId": 269,
    "index": "A",
    "name": "Magical Boxes",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 260,
    "index": "B",
    "name": "Ancient Prophesy",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 253,
    "index": "C",
    "name": "Text Editor",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 250,
    "index": "C",
    "name": "Movie Critics",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 246,
    "index": "D",
    "name": "Colorful Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 246,
    "index": "C",
    "name": "Beauty Pageant",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 244,
    "index": "B",
    "name": "Undoubtedly Lucky Numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar"
    ]
},
{
    "contestId": 243,
    "index": "A",
    "name": "The Brand New Function",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "bitmasks"
    ]
},
{
    "contestId": 237,
    "index": "C",
    "name": "Primes on Interval",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 235,
    "index": "A",
    "name": "LCM Challenge",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 234,
    "index": "G",
    "name": "Practice",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "implementation"
    ]
},
{
    "contestId": 234,
    "index": "E",
    "name": "Champions' League",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 234,
    "index": "D",
    "name": "Cinema",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 232,
    "index": "A",
    "name": "Cycles",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 231,
    "index": "D",
    "name": "Magic Box",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 231,
    "index": "C",
    "name": "To Add or Not to Add",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 225,
    "index": "B",
    "name": "Well-known Numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 219,
    "index": "C",
    "name": "Color Stripe",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 214,
    "index": "B",
    "name": "Hometask",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 209,
    "index": "A",
    "name": "Multicolored Marbles",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 207,
    "index": "D7",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 207,
    "index": "D5",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 207,
    "index": "B1",
    "name": "Military Trainings",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 207,
    "index": "A1",
    "name": "Beaver's Calculator 1.0",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 197,
    "index": "A",
    "name": "Plate Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "games",
        "math"
    ]
},
{
    "contestId": 188,
    "index": "G",
    "name": "Array Sorting",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 178,
    "index": "C1",
    "name": "Smart Beaver and Resolving Collisions",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 178,
    "index": "B2",
    "name": "Greedy Merchants",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 178,
    "index": "B1",
    "name": "Greedy Merchants",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1600,
    "tags": []
},
{
    "contestId": 175,
    "index": "C",
    "name": "Geometry Horse",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 171,
    "index": "G",
    "name": "Mysterious numbers - 2",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 171,
    "index": "F",
    "name": "ucyhf",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "brute force",
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 167,
    "index": "A",
    "name": "Wizards and Trolleybuses",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 165,
    "index": "C",
    "name": "Another Problem on Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "math",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 156,
    "index": "B",
    "name": "Suspects",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 154,
    "index": "B",
    "name": "Colliders",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 154,
    "index": "A",
    "name": "Hometask",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 153,
    "index": "A",
    "name": "A + B",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 150,
    "index": "B",
    "name": "Quantity of Strings",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
    ]
},
{
    "contestId": 149,
    "index": "B",
    "name": "Martian Clock",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 142,
    "index": "A",
    "name": "Help Farmer",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 139,
    "index": "B",
    "name": "Wallpaper",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 138,
    "index": "A",
    "name": "Literature Lesson",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 135,
    "index": "B",
    "name": "Rectangle and Square",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force",
        "geometry",
        "math"
    ]
},
{
    "contestId": 131,
    "index": "D",
    "name": "Subway",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 130,
    "index": "H",
    "name": "Balanced brackets",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 130,
    "index": "F",
    "name": "Prime factorization",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 130,
    "index": "E",
    "name": "Tribonacci numbers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 125,
    "index": "C",
    "name": "Hobbits' Party",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 113,
    "index": "A",
    "name": "Grammar Lessons",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 107,
    "index": "B",
    "name": "Basketball Team",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 100,
    "index": "E",
    "name": "Lamps in a Line",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "math"
    ]
},
{
    "contestId": 95,
    "index": "A",
    "name": "Hockey",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 86,
    "index": "A",
    "name": "Reflection",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 75,
    "index": "C",
    "name": "Modified GCD",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "binary search",
        "number theory"
    ]
},
{
    "contestId": 73,
    "index": "A",
    "name": "The Elder Trolls IV: Oblivon",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 72,
    "index": "H",
    "name": "Reverse It!",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 71,
    "index": "C",
    "name": "Round Table Knights",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 70,
    "index": "B",
    "name": "Text Messaging",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "expression parsing",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 68,
    "index": "B",
    "name": "Energy exchange",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 64,
    "index": "C",
    "name": "Table",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "*special",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 59,
    "index": "C",
    "name": "Title",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1600,
    "tags": [
        "expression parsing"
    ]
},
{
    "contestId": 57,
    "index": "B",
    "name": "Martian Architecture",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 55,
    "index": "B",
    "name": "Smallest number",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 52,
    "index": "B",
    "name": "Right Triangles",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 46,
    "index": "C",
    "name": "Hamsters and Tigers",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "two pointers"
    ]
},
{
    "contestId": 40,
    "index": "B",
    "name": "Repaintings",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 36,
    "index": "B",
    "name": "Fractal",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 34,
    "index": "D",
    "name": "Road Map",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 32,
    "index": "D",
    "name": "Constellation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 28,
    "index": "B",
    "name": "pSort",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 28,
    "index": "A",
    "name": "Bender Problem",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 23,
    "index": "B",
    "name": "Party",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math"
    ]
},
{
    "contestId": 11,
    "index": "B",
    "name": "Jumping Jack",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 7,
    "index": "B",
    "name": "Memory Manager",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1,
    "index": "B",
    "name": "Spreadsheet",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "implementation",
        "math"
    ]
}
]
