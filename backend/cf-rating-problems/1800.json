[
{
    "contestId": 1941,
    "index": "F",
    "name": "Rudolf and Imbalance",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1935,
    "index": "D",
    "name": "Exam in MAC",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "combinatorics",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1935,
    "index": "C",
    "name": "Messenger in MAC",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1930,
    "index": "D1",
    "name": "Sum over all Substrings (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1923,
    "index": "D",
    "name": "Slimes",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1922,
    "index": "E",
    "name": "Increasing Subsequences",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1915,
    "index": "G",
    "name": "Bicycles",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "graphs",
        "greedy",
        "implementation",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1912,
    "index": "K",
    "name": "Kim's Quest",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1910,
    "index": "D",
    "name": "Remove and Add",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "greedy"
    ]
},
{
    "contestId": 1907,
    "index": "F",
    "name": "Shift and Reverse",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1904,
    "index": "D2",
    "name": "Set To Max (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1872,
    "index": "F",
    "name": "Selling a Menagerie",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1870,
    "index": "D",
    "name": "Prefix Purchase",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1867,
    "index": "D",
    "name": "Cyclic Operations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1862,
    "index": "F",
    "name": "Magic Will Save the World",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1861,
    "index": "D",
    "name": "Sorting By Multiplication",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1859,
    "index": "D",
    "name": "Andrey and Escape from Capygrad",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1856,
    "index": "E1",
    "name": "PermuTree (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1852,
    "index": "B",
    "name": "Imbalanced Arrays",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1852,
    "index": "A",
    "name": "Ntarsis' Set",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1851,
    "index": "F",
    "name": "Lisa and the Martians",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "bitmasks",
        "greedy",
        "math",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1848,
    "index": "C",
    "name": "Vika and Price Tags",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1846,
    "index": "F",
    "name": "Rudolph and Mimic",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1846,
    "index": "E2",
    "name": "Rudolf and Snowflakes (hard version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1845,
    "index": "D",
    "name": "Rating System",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1843,
    "index": "F1",
    "name": "Omsk Metro (simple version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "math",
        "trees"
    ]
},
{
    "contestId": 1841,
    "index": "C",
    "name": "Ranom Numbers",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1833,
    "index": "G",
    "name": "Ksyusha and Chinchilla",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1824,
    "index": "B1",
    "name": "LuoTianyi and the Floating Islands (Easy Version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1809,
    "index": "D",
    "name": "Binary String Sorting",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1805,
    "index": "D",
    "name": "A Wide, Wide Graph",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1801,
    "index": "B",
    "name": "Buying gifts",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1793,
    "index": "D",
    "name": "Moscow Gorillas",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1781,
    "index": "D",
    "name": "Many Perfect Squares",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1780,
    "index": "D",
    "name": "Bit Guessing Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1775,
    "index": "D",
    "name": "Friendly Spiders",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory",
        "shortest paths"
    ]
},
{
    "contestId": 1769,
    "index": "D1",
    "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 I",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1768,
    "index": "D",
    "name": "Lucky Permutation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1759,
    "index": "F",
    "name": "All Possible Digits",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1758,
    "index": "D",
    "name": "Range = \u221aSum",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1750,
    "index": "D",
    "name": "Count GCD",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1740,
    "index": "E",
    "name": "Hanging Hearts",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1734,
    "index": "D",
    "name": "Slime Escape",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1732,
    "index": "C1",
    "name": "Sheikh (Easy version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "bitmasks",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1729,
    "index": "E",
    "name": "Guess the Cycle Size",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 1728,
    "index": "D",
    "name": "Letter Picking",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "games",
        "two pointers"
    ]
},
{
    "contestId": 1725,
    "index": "M",
    "name": "Moving Both Hands",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1725,
    "index": "H",
    "name": "Hot Black Hot White",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1721,
    "index": "D",
    "name": "Maximum AND",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "divide and conquer",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1720,
    "index": "D1",
    "name": "Xor-Subsequence (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "strings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1718,
    "index": "A1",
    "name": "Burenka and Traditions (easy version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1713,
    "index": "D",
    "name": "Tournament Countdown",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "interactive",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1709,
    "index": "C",
    "name": "Recover an RBS",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1705,
    "index": "D",
    "name": "Mark and Lightbulbs",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1691,
    "index": "D",
    "name": "Max GEQ Sum",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1678,
    "index": "B2",
    "name": "Tokitsukaze and Good 01-String (hard version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1675,
    "index": "F",
    "name": "Vlad and Unfinished Business",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1674,
    "index": "F",
    "name": "Desktop Rearrangement",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1666,
    "index": "L",
    "name": "Labyrinth",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1666,
    "index": "C",
    "name": "Connect the Points",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "geometry"
    ]
},
{
    "contestId": 1648,
    "index": "B",
    "name": "Integral Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "math"
    ]
},
{
    "contestId": 1637,
    "index": "D",
    "name": "Yet Another Minimization Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1635,
    "index": "D",
    "name": "Infinite Set",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "dp",
        "math",
        "matrices",
        "number theory",
        "strings"
    ]
},
{
    "contestId": 1630,
    "index": "B",
    "name": "Range and Partition",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1620,
    "index": "C",
    "name": "BA-String",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1619,
    "index": "D",
    "name": "New Year's Problem",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1617,
    "index": "D1",
    "name": "Too Many Impostors (easy version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1611,
    "index": "F",
    "name": "ATM and Students",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1583,
    "index": "D",
    "name": "Omkar and the Meaning of Life",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1582,
    "index": "F1",
    "name": "Korney Korneevich and XOR (easy version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1575,
    "index": "D",
    "name": "Divisible by Twenty-Five",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1572,
    "index": "A",
    "name": "Book",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "graphs",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1571,
    "index": "D",
    "name": "Sweepstake",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "brute force",
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1571,
    "index": "C",
    "name": "Rhyme",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 1560,
    "index": "E",
    "name": "Polycarp and String Transformation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1556,
    "index": "D",
    "name": "Take a Guess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1556,
    "index": "C",
    "name": "Compressed Bracket Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1554,
    "index": "D",
    "name": "Diane",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1554,
    "index": "C",
    "name": "Mikasa",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "bitmasks",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1552,
    "index": "D",
    "name": "Array Differentiation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1552,
    "index": "C",
    "name": "Maximize the Intersections",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "geometry",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1548,
    "index": "B",
    "name": "Integers Have Friends",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1535,
    "index": "D",
    "name": "Playoff Tournament",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1534,
    "index": "D",
    "name": "Lost Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1525,
    "index": "D",
    "name": "Armchairs",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "flows",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 1517,
    "index": "D",
    "name": "Explorer Space",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1509,
    "index": "C",
    "name": "The Sports Festival",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1508,
    "index": "B",
    "name": "Almost Sorted",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1505,
    "index": "E",
    "name": "Cakewalk",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "greedy",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1505,
    "index": "D",
    "name": "Xenolith? Hippodrome?",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "number theory"
    ]
},
{
    "contestId": 1500,
    "index": "A",
    "name": "Going Home",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1491,
    "index": "D",
    "name": "Zookeeper and The Infinite Zoo",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1488,
    "index": "B",
    "name": "RBS Deletion",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "greedy"
    ]
},
{
    "contestId": 1477,
    "index": "A",
    "name": "Nezzar and Board",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1475,
    "index": "D",
    "name": "Cleaning the Phone",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "dp",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1468,
    "index": "J",
    "name": "Road Reform",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1466,
    "index": "E",
    "name": "Apollo versus Pan",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1463,
    "index": "C",
    "name": "Busy Robot",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1462,
    "index": "F",
    "name": "The Treasure of The Segments",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1450,
    "index": "D",
    "name": "Rating Compression",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1446,
    "index": "B",
    "name": "Catching Cheaters",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1442,
    "index": "B",
    "name": "Identify the Operations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "data structures",
        "dsu",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1442,
    "index": "A",
    "name": "Extreme Subtraction",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1437,
    "index": "C",
    "name": "Chef Monocarp",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "flows",
        "graph matchings",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1426,
    "index": "E",
    "name": "Rock, Paper, Scissors",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1420,
    "index": "D",
    "name": "Rescue Nibel!",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1409,
    "index": "E",
    "name": "Two Platforms",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "dp",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1402,
    "index": "A",
    "name": "Fancy Fence",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "data structures",
        "dsu",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1401,
    "index": "D",
    "name": "Maximum Distributed Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1398,
    "index": "D",
    "name": "Colored Rectangles",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1396,
    "index": "B",
    "name": "Stoned Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "games",
        "greedy"
    ]
},
{
    "contestId": 1394,
    "index": "A",
    "name": "Boboniu Chats with Du",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1388,
    "index": "C",
    "name": "Uncle Bogdan and Country Happiness",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "greedy",
        "math",
        "trees"
    ]
},
{
    "contestId": 1381,
    "index": "B",
    "name": "Unmerge",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1367,
    "index": "D",
    "name": "Task On The Board",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1355,
    "index": "C",
    "name": "Count Triangles",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1338,
    "index": "B",
    "name": "Edge Weight Assignment",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "math",
        "trees"
    ]
},
{
    "contestId": 1335,
    "index": "E2",
    "name": "Three Blocks Palindrome (hard version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 1334,
    "index": "D",
    "name": "Minimum Euler Cycle",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1329,
    "index": "A",
    "name": "Dreamoon Likes Coloring",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1328,
    "index": "D",
    "name": "Carousel",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1327,
    "index": "E",
    "name": "Count The Blocks",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1326,
    "index": "D2",
    "name": "Prefix-Suffix Palindrome (Hard version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1324,
    "index": "F",
    "name": "Maximum White Subtree",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1316,
    "index": "C",
    "name": "Primitive Primes",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1304,
    "index": "D",
    "name": "Shortest and Longest LIS",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1299,
    "index": "B",
    "name": "Aerodynamic",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 1296,
    "index": "E1",
    "name": "String Coloring (easy version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1295,
    "index": "D",
    "name": "Same GCDs",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1290,
    "index": "B",
    "name": "Irreducible Anagrams",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1286,
    "index": "B",
    "name": "Numbers on Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1286,
    "index": "A",
    "name": "Garland",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1283,
    "index": "E",
    "name": "New Year Parties",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1283,
    "index": "D",
    "name": "Christmas Trees",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1282,
    "index": "C",
    "name": "Petya and Exam",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1280,
    "index": "B",
    "name": "Beingawesomeism",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1267,
    "index": "L",
    "name": "Lexicography",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "strings"
    ]
},
{
    "contestId": 1267,
    "index": "J",
    "name": "Just Arrange the Icons",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1254,
    "index": "B1",
    "name": "Send Boxes to Alice (Easy Version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 1252,
    "index": "H",
    "name": "Twin Buildings",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1250,
    "index": "J",
    "name": "The Parade",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1250,
    "index": "B",
    "name": "The Feast and the Bus",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1249,
    "index": "D2",
    "name": "Too Many Segments (hard version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1249,
    "index": "D1",
    "name": "Too Many Segments (easy version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1244,
    "index": "D",
    "name": "Paint the Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1227,
    "index": "D2",
    "name": "Optimal Subsequences (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1225,
    "index": "D",
    "name": "Power Products",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "hashing",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1221,
    "index": "D",
    "name": "Make The Fence Great Again",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1213,
    "index": "G",
    "name": "Path Queries",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "divide and conquer",
        "dsu",
        "graphs",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1208,
    "index": "C",
    "name": "Magic Grid",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1207,
    "index": "D",
    "name": "Number Of Permutations",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 1196,
    "index": "E",
    "name": "Connected Component on a Chessboard",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1195,
    "index": "D2",
    "name": "Submarine in the Rybinsk Sea (hard edition)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1190,
    "index": "B",
    "name": "Tokitsukaze, CSL and Stone Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1187,
    "index": "C",
    "name": "Vasya And Array",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1186,
    "index": "C",
    "name": "Vus the Cossack and Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1179,
    "index": "B",
    "name": "Tolik and His Uncle",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1177,
    "index": "B",
    "name": "Digits Sequence (Hard Edition)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "divide and conquer",
        "implementation"
    ]
},
{
    "contestId": 1176,
    "index": "D",
    "name": "Recover it!",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1172,
    "index": "A",
    "name": "Nauuo and Cards",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1156,
    "index": "B",
    "name": "Ugly Pairs",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "greedy",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1154,
    "index": "E",
    "name": "Two Teams",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1152,
    "index": "C",
    "name": "Neko does Maths",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1151,
    "index": "C",
    "name": "Problem for Nazar",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1148,
    "index": "D",
    "name": "Dirty Deeds Done Dirt Cheap",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1138,
    "index": "B",
    "name": "Circus",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1136,
    "index": "D",
    "name": "Nastya Is Buying Lunch",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1133,
    "index": "E",
    "name": "K Balanced Teams",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1129,
    "index": "A2",
    "name": "Toy Train",
    "type": "PROGRAMMING",
    "points": 250.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1119,
    "index": "D",
    "name": "Frets On Fire",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "sortings"
    ]
},
{
    "contestId": 1118,
    "index": "F1",
    "name": "Tree Cutting (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1109,
    "index": "B",
    "name": "Sasha and One More Name",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1108,
    "index": "E1",
    "name": "Array and Segments (Easy version)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1107,
    "index": "D",
    "name": "Compression",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1096,
    "index": "D",
    "name": "Easy Problem",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1090,
    "index": "D",
    "name": "Similar Arrays",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1083,
    "index": "A",
    "name": "The Fair Nut and the Best Path",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1082,
    "index": "D",
    "name": "Maximum Diameter Graph",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1081,
    "index": "D",
    "name": "Maximum Distance",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dsu",
        "graphs",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1077,
    "index": "E",
    "name": "Thematic Contests",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1076,
    "index": "D",
    "name": "Edge Deletion",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1073,
    "index": "C",
    "name": "Vasya and Robot",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 1067,
    "index": "B",
    "name": "Multihedgehog",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1066,
    "index": "D",
    "name": "Boxes Packing",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation"
    ]
},
{
    "contestId": 1063,
    "index": "B",
    "name": "Labyrinth",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1062,
    "index": "D",
    "name": "Fun with Integers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1042,
    "index": "D",
    "name": "Petya and Array",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "divide and conquer",
        "two pointers"
    ]
},
{
    "contestId": 1038,
    "index": "D",
    "name": "Slime",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1034,
    "index": "A",
    "name": "Enlarge GCD",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 1030,
    "index": "D",
    "name": "Vasya and Triangle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "geometry",
        "number theory"
    ]
},
{
    "contestId": 1016,
    "index": "D",
    "name": "Vasya And The Matrix",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "flows",
        "math"
    ]
},
{
    "contestId": 1016,
    "index": "C",
    "name": "Vasya And The Mushrooms",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1010,
    "index": "C",
    "name": "Border",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 1010,
    "index": "B",
    "name": "Rocket",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1005,
    "index": "E1",
    "name": "Median on Segments (Permutations Edition)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "sortings"
    ]
},
{
    "contestId": 1002,
    "index": "C2",
    "name": "Distinguish zero state and plus state without errors",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": []
},
{
    "contestId": 991,
    "index": "E",
    "name": "Bus Number",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 989,
    "index": "C",
    "name": "A Mist of Florescence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 988,
    "index": "D",
    "name": "Points and Powers of Two",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 986,
    "index": "B",
    "name": "Petr and Permutations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 983,
    "index": "B",
    "name": "XOR-pyramid",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 979,
    "index": "B",
    "name": "Treasure Hunt",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 963,
    "index": "A",
    "name": "Alternating Sum",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 958,
    "index": "F2",
    "name": "Lightsabers (medium)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 952,
    "index": "D",
    "name": "I'm Feeling Lucky!",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "probabilities"
    ]
},
{
    "contestId": 946,
    "index": "D",
    "name": "Timetable",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 939,
    "index": "E",
    "name": "Maximize!",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 933,
    "index": "A",
    "name": "A Twisty Movement",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 926,
    "index": "B",
    "name": "Add Points",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": []
},
{
    "contestId": 923,
    "index": "C",
    "name": "Perfect Security",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 922,
    "index": "D",
    "name": "Robot Vacuum Cleaner",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 917,
    "index": "A",
    "name": "The Monster",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 914,
    "index": "C",
    "name": "Travelling Salesman and Special Numbers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 913,
    "index": "D",
    "name": "Too Easy Problems",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 911,
    "index": "D",
    "name": "Inversion Counting",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 909,
    "index": "C",
    "name": "Python Indentation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 899,
    "index": "D",
    "name": "Shovel Sale",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 894,
    "index": "B",
    "name": "Ralph And His Magic Field",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 888,
    "index": "E",
    "name": "Maximum Subsequence",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 883,
    "index": "K",
    "name": "Road Widening",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 883,
    "index": "H",
    "name": "Palindromic Cut",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 873,
    "index": "D",
    "name": "Merge Sort",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "divide and conquer"
    ]
},
{
    "contestId": 869,
    "index": "C",
    "name": "The Intriguing Obsession",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 863,
    "index": "D",
    "name": "Yet Another Array Queries Problem",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 863,
    "index": "C",
    "name": "1-2-3",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 853,
    "index": "B",
    "name": "Jury Meeting",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 847,
    "index": "K",
    "name": "Travel Cards",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 847,
    "index": "E",
    "name": "Packmen",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 847,
    "index": "C",
    "name": "Sum of Nestings",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 846,
    "index": "F",
    "name": "Random Query",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "math",
        "probabilities",
        "two pointers"
    ]
},
{
    "contestId": 846,
    "index": "C",
    "name": "Four Segments",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 846,
    "index": "B",
    "name": "Math Show",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 845,
    "index": "D",
    "name": "Driving Test",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 830,
    "index": "A",
    "name": "Office Keys",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 827,
    "index": "B",
    "name": "High Load",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 822,
    "index": "D",
    "name": "My pretty girl Noora",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 813,
    "index": "B",
    "name": "The Golden Age",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 802,
    "index": "B",
    "name": "Heidi and Library (medium)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 802,
    "index": "A",
    "name": "Heidi and Library (easy)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 799,
    "index": "C",
    "name": "Fountains",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 794,
    "index": "C",
    "name": "Naming Company",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1800,
    "tags": [
        "games",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 784,
    "index": "C",
    "name": "INTERCALC",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 778,
    "index": "B",
    "name": "Bitwise Formula",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 777,
    "index": "D",
    "name": "Cloud of Hashtags",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 776,
    "index": "C",
    "name": "Molly's Chemicals",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "implementation",
        "math"
    ]
},
{
    "contestId": 772,
    "index": "B",
    "name": "Volatile Kite",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 772,
    "index": "A",
    "name": "Voltage Keepsake",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 768,
    "index": "C",
    "name": "Jon Snow and his Favourite Number",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 747,
    "index": "D",
    "name": "Winter Is Coming",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 743,
    "index": "D",
    "name": "Chloe and pleasant prizes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 733,
    "index": "C",
    "name": "Epidemic in Monstropolis",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 730,
    "index": "B",
    "name": "Minimum and Maximum",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 730,
    "index": "A",
    "name": "Toda 2",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 727,
    "index": "D",
    "name": "T-shirts Distribution",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "flows",
        "greedy"
    ]
},
{
    "contestId": 725,
    "index": "D",
    "name": "Contest Balloons",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 724,
    "index": "C",
    "name": "Ray Tracing",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 721,
    "index": "C",
    "name": "Journey",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 706,
    "index": "D",
    "name": "Vasiliy's Multiset",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 700,
    "index": "B",
    "name": "Connecting Universities",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 691,
    "index": "C",
    "name": "Exponential notation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 690,
    "index": "E1",
    "name": "Photographs (I)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": []
},
{
    "contestId": 690,
    "index": "D2",
    "name": "The Wall (medium)",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 687,
    "index": "B",
    "name": "Remainders Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
    ]
},
{
    "contestId": 683,
    "index": "F",
    "name": "Reformat the String",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 683,
    "index": "E",
    "name": "Hammer throwing",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 675,
    "index": "D",
    "name": "Tree Construction",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 671,
    "index": "A",
    "name": "Recycling Bottles",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "geometry",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 666,
    "index": "A",
    "name": "Reberland Linguistics",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 665,
    "index": "D",
    "name": "Simple Subset",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 663,
    "index": "A",
    "name": "Rebus",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "expression parsing",
        "greedy",
        "math"
    ]
},
{
    "contestId": 652,
    "index": "D",
    "name": "Nested Segments",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 652,
    "index": "C",
    "name": "Foe Pairs",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "combinatorics",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 645,
    "index": "D",
    "name": "Robot Rapping Results Report",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 641,
    "index": "C",
    "name": "Little Artem and Dance",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 638,
    "index": "D",
    "name": "Three-dimensional Turtle Super Computer ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 638,
    "index": "C",
    "name": "Road Improvement",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "*special",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 630,
    "index": "M",
    "name": "Turn",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "geometry",
        "math"
    ]
},
{
    "contestId": 626,
    "index": "D",
    "name": "Jerry's Protest",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 623,
    "index": "A",
    "name": "Graph and String",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 612,
    "index": "D",
    "name": "The Union of k-Segments",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 610,
    "index": "C",
    "name": "Harmony Analysis",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 603,
    "index": "B",
    "name": "Moodular Arithmetic",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "math",
        "number theory"
    ]
},
{
    "contestId": 600,
    "index": "C",
    "name": "Make Palindrome",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 592,
    "index": "C",
    "name": "The Big Race",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "math"
    ]
},
{
    "contestId": 585,
    "index": "A",
    "name": "Gennady the Dentist",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 584,
    "index": "D",
    "name": "Dima and Lisa",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 580,
    "index": "D",
    "name": "Kefa and Dishes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 575,
    "index": "H",
    "name": "Bots",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 551,
    "index": "B",
    "name": "ZgukistringZ",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 543,
    "index": "A",
    "name": "Writing Code",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 538,
    "index": "D",
    "name": "Weird Chess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 533,
    "index": "E",
    "name": "Correcting Mistakes",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "hashing",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 527,
    "index": "D",
    "name": "Clique Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 519,
    "index": "D",
    "name": "A and B and Interesting Substrings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 513,
    "index": "G1",
    "name": "Inversions problem",
    "type": "PROGRAMMING",
    "points": 3.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 513,
    "index": "B2",
    "name": "Permutations",
    "type": "PROGRAMMING",
    "points": 4.0,
    "rating": 1800,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 492,
    "index": "D",
    "name": "Vanya and Computer Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 487,
    "index": "A",
    "name": "Fight the Monster",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 483,
    "index": "B",
    "name": "Friends and Presents",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 482,
    "index": "B",
    "name": "Interesting Array",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 478,
    "index": "C",
    "name": "Table Decorations",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 471,
    "index": "D",
    "name": "MUH and Cube Walls",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 470,
    "index": "B",
    "name": "Hexakosioihexekontahexaphobia",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 459,
    "index": "D",
    "name": "Pashmak and Parmida's problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "divide and conquer",
        "sortings"
    ]
},
{
    "contestId": 452,
    "index": "B",
    "name": "4-point polyline",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "trees"
    ]
},
{
    "contestId": 448,
    "index": "D",
    "name": "Multiplication Table",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force"
    ]
},
{
    "contestId": 442,
    "index": "B",
    "name": "Andrey and Problem",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 440,
    "index": "C",
    "name": "One-Based Arithmetic",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer"
    ]
},
{
    "contestId": 436,
    "index": "C",
    "name": "Dungeons and Candies",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 433,
    "index": "C",
    "name": "Ryouko's Memory Note",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 432,
    "index": "C",
    "name": "Prime Swaps",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 420,
    "index": "B",
    "name": "Online Meeting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 409,
    "index": "E",
    "name": "Dome",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 404,
    "index": "C",
    "name": "Restore Graph",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 402,
    "index": "D",
    "name": "Upgrading Array",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 371,
    "index": "D",
    "name": "Vessels",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dsu",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 370,
    "index": "C",
    "name": "Mittens",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 363,
    "index": "D",
    "name": "Renting Bikes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 358,
    "index": "D",
    "name": "Dima and Hares",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 351,
    "index": "A",
    "name": "Jeff and Rounding",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 336,
    "index": "C",
    "name": "Vasily the Bear and Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 333,
    "index": "B",
    "name": "Chips",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 328,
    "index": "A",
    "name": "IQ Test",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 325,
    "index": "B",
    "name": "Stadium and Games",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 301,
    "index": "A",
    "name": "Yaroslav and Sequence",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 300,
    "index": "C",
    "name": "Beautiful Numbers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "combinatorics"
    ]
},
{
    "contestId": 280,
    "index": "B",
    "name": "Maximum Xor Secondary",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 274,
    "index": "B",
    "name": "Zero Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 271,
    "index": "D",
    "name": "Good Substrings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 263,
    "index": "D",
    "name": "Cycle in Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 257,
    "index": "C",
    "name": "View Angle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "geometry",
        "math"
    ]
},
{
    "contestId": 255,
    "index": "D",
    "name": "Mr. Bender and Square",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 254,
    "index": "C",
    "name": "Anagram",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "strings"
    ]
},
{
    "contestId": 252,
    "index": "B",
    "name": "Unsorting Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "sortings"
    ]
},
{
    "contestId": 251,
    "index": "B",
    "name": "Playing with Permutations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 245,
    "index": "H",
    "name": "Queries for Number of Palindromes",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 242,
    "index": "C",
    "name": "King's Path",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "hashing",
        "shortest paths"
    ]
},
{
    "contestId": 238,
    "index": "B",
    "name": "Boring Partition",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 234,
    "index": "F",
    "name": "Fence",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 222,
    "index": "C",
    "name": "Reducing Fractions",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 220,
    "index": "B",
    "name": "Little Elephant and Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 216,
    "index": "C",
    "name": "Hiring Staff",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 207,
    "index": "D9",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 1800,
    "tags": []
},
{
    "contestId": 207,
    "index": "D1",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 1800,
    "tags": []
},
{
    "contestId": 207,
    "index": "A2",
    "name": "Beaver's Calculator 1.0",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 201,
    "index": "B",
    "name": "Guess That Car!",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "math",
        "ternary search"
    ]
},
{
    "contestId": 200,
    "index": "D",
    "name": "Programming Language",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "brute force",
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 200,
    "index": "C",
    "name": "Football Championship",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 195,
    "index": "C",
    "name": "Try and Catch",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 190,
    "index": "B",
    "name": "Surrounded",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 188,
    "index": "H",
    "name": "Stack",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 187,
    "index": "B",
    "name": "AlgoRace",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "shortest paths"
    ]
},
{
    "contestId": 185,
    "index": "B",
    "name": "Mushroom Scientists",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "math",
        "ternary search"
    ]
},
{
    "contestId": 182,
    "index": "E",
    "name": "Wooden Fence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 180,
    "index": "E",
    "name": "Cubes",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 180,
    "index": "A",
    "name": "Defragmentation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 178,
    "index": "F1",
    "name": "Representative Sampling",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1800,
    "tags": []
},
{
    "contestId": 178,
    "index": "B3",
    "name": "Greedy Merchants",
    "type": "PROGRAMMING",
    "points": 50.0,
    "rating": 1800,
    "tags": []
},
{
    "contestId": 177,
    "index": "F1",
    "name": "Script Generation",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1800,
    "tags": []
},
{
    "contestId": 174,
    "index": "C",
    "name": "Range Increments",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 173,
    "index": "B",
    "name": "Chamber of Secrets",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "shortest paths"
    ]
},
{
    "contestId": 167,
    "index": "B",
    "name": "Wizards and Huge Prize",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 162,
    "index": "J",
    "name": "Brackets",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "H",
    "name": "Alternating case",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "F",
    "name": "Factorial zeros",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "E",
    "name": "HQ9+",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "C",
    "name": "Prime factorization",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "B",
    "name": "Binary notation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 161,
    "index": "D",
    "name": "Distance in Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 153,
    "index": "B",
    "name": "Binary notation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 148,
    "index": "D",
    "name": "Bag of mice",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "games",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 145,
    "index": "B",
    "name": "Lucky Number 2",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 142,
    "index": "B",
    "name": "Help General",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 141,
    "index": "C",
    "name": "Queue",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 140,
    "index": "D",
    "name": "New Year Contest",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 140,
    "index": "C",
    "name": "New Year Snowmen",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 140,
    "index": "B",
    "name": "New Year Cards",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 132,
    "index": "C",
    "name": "Logo Turtle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 130,
    "index": "J",
    "name": "Date calculation",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 123,
    "index": "B",
    "name": "Squares",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "math"
    ]
},
{
    "contestId": 120,
    "index": "H",
    "name": "Brevity is Soul of Wit",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "graph matchings"
    ]
},
{
    "contestId": 120,
    "index": "G",
    "name": "Boom",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 117,
    "index": "B",
    "name": "Very Interesting Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "number theory"
    ]
},
{
    "contestId": 105,
    "index": "B",
    "name": "Dark Assembly",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "probabilities"
    ]
},
{
    "contestId": 100,
    "index": "G",
    "name": "Name the album",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 100,
    "index": "F",
    "name": "Polynom",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 95,
    "index": "B",
    "name": "Lucky Numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 89,
    "index": "A",
    "name": "Robbery",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 87,
    "index": "B",
    "name": "Vasya and Types",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 85,
    "index": "B",
    "name": "Embassy Queue",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 83,
    "index": "B",
    "name": "Doctor",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "math",
        "sortings"
    ]
},
{
    "contestId": 79,
    "index": "C",
    "name": "Beaver",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "hashing",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 77,
    "index": "B",
    "name": "Falling Anvils",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 73,
    "index": "C",
    "name": "LionAge II",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 72,
    "index": "E",
    "name": "Ali goes shopping",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "brute force",
        "strings"
    ]
},
{
    "contestId": 72,
    "index": "A",
    "name": "Goshtasp, Vishtasp and Eidi",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "greedy",
        "math"
    ]
},
{
    "contestId": 69,
    "index": "E",
    "name": "Subsegments",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 67,
    "index": "B",
    "name": "Restoration of the Permutation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 67,
    "index": "A",
    "name": "Partial Teacher",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 66,
    "index": "C",
    "name": "Petya and File System",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 65,
    "index": "A",
    "name": "Harry Potter and Three Spells",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1800,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 64,
    "index": "E",
    "name": "Prime Segment",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 64,
    "index": "D",
    "name": "Presents",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "*special",
        "greedy"
    ]
},
{
    "contestId": 62,
    "index": "B",
    "name": "Tyndex.Brome",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "implementation"
    ]
},
{
    "contestId": 61,
    "index": "D",
    "name": "Eternal Victory",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 58,
    "index": "C",
    "name": "Trees",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 54,
    "index": "B",
    "name": "Cutting Jigsaw Puzzle",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 51,
    "index": "C",
    "name": "Three Base Stations",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 49,
    "index": "D",
    "name": "Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1800,
    "tags": [
        "brute force",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 48,
    "index": "C",
    "name": "The Race",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "math"
    ]
},
{
    "contestId": 46,
    "index": "D",
    "name": "Parking Lot",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 45,
    "index": "J",
    "name": "Planting Trees",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 44,
    "index": "D",
    "name": "Hyperdrive",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "math"
    ]
},
{
    "contestId": 38,
    "index": "E",
    "name": "Let's Go Rolling!",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "dp",
        "sortings"
    ]
},
{
    "contestId": 37,
    "index": "B",
    "name": "Computer Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 33,
    "index": "C",
    "name": "Wonderful Randomized Sum",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 33,
    "index": "B",
    "name": "String Problem",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1800,
    "tags": [
        "shortest paths"
    ]
},
{
    "contestId": 30,
    "index": "C",
    "name": "Shooting Gallery",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1800,
    "tags": [
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 24,
    "index": "C",
    "name": "Sequence of points",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "geometry",
        "implementation",
        "math"
    ]
},
{
    "contestId": 16,
    "index": "C",
    "name": "Monitor",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "binary search",
        "number theory"
    ]
},
{
    "contestId": 15,
    "index": "B",
    "name": "Laser",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "math"
    ]
},
{
    "contestId": 7,
    "index": "C",
    "name": "Line",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 3,
    "index": "C",
    "name": "Tic-tac-toe",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "brute force",
        "games",
        "implementation"
    ]
}
]
