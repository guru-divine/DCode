[
{
    "contestId": 1946,
    "index": "D",
    "name": "Birthday Gift",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1945,
    "index": "F",
    "name": "Kirill and Mushrooms",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1938,
    "index": "C",
    "name": "Bit Counting Sequence",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": []
},
{
    "contestId": 1932,
    "index": "F",
    "name": "Feed Cats",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 1929,
    "index": "D",
    "name": "Sasha and a Walk in the City",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 1928,
    "index": "D",
    "name": "Lonely Mountain Dungeons",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1927,
    "index": "F",
    "name": "Microcycle",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1926,
    "index": "G",
    "name": "Vlad and Trouble at MIT",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1925,
    "index": "D",
    "name": "Good Trip",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1922,
    "index": "D",
    "name": "Berserk Monsters",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dsu",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1921,
    "index": "F",
    "name": "Sum of Progression",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1920,
    "index": "D",
    "name": "Array Repetition",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "dsu",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1918,
    "index": "D",
    "name": "Blocking Elements",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1914,
    "index": "F",
    "name": "Programming Competition",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1912,
    "index": "D",
    "name": "Divisibility Test",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1912,
    "index": "A",
    "name": "Accumulator Apex",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1909,
    "index": "I",
    "name": "Short Permutation Problem",
    "type": "PROGRAMMING",
    "points": 6000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1909,
    "index": "D",
    "name": "Split Plus K",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1906,
    "index": "E",
    "name": "Merge Not Sort",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 1902,
    "index": "E",
    "name": "Collapsing Strings",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1902,
    "index": "D",
    "name": "Robot Queries",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1899,
    "index": "G",
    "name": "Unusual Entertainment",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "shortest paths",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1898,
    "index": "D",
    "name": "Absolute Beauty",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1895,
    "index": "D",
    "name": "XOR Construction",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "math",
        "string suffix structures",
        "trees"
    ]
},
{
    "contestId": 1891,
    "index": "D",
    "name": "Suspicious logarithms",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1887,
    "index": "B",
    "name": "Time Travel",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1883,
    "index": "G2",
    "name": "Dances (Hard Version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1882,
    "index": "D",
    "name": "Tree XOR",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1878,
    "index": "F",
    "name": "Vasilije Loves Number Theory",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1866,
    "index": "C",
    "name": "Completely Searching for Inversions",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1854,
    "index": "A2",
    "name": "Dual (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1847,
    "index": "D",
    "name": "Professor Higashikata",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dsu",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1846,
    "index": "G",
    "name": "Rudolf and CodeVid-23",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1842,
    "index": "D",
    "name": "Tenzing and His Animal Friends ",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1834,
    "index": "D",
    "name": "Survey in Class",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1823,
    "index": "D",
    "name": "Unique Palindromes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "math",
        "strings"
    ]
},
{
    "contestId": 1821,
    "index": "D",
    "name": "Black Cells",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1819,
    "index": "B",
    "name": "The Butcher",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "geometry",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1817,
    "index": "B",
    "name": "Fish Graph",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1808,
    "index": "C",
    "name": "Unlucky Numbers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1801,
    "index": "C",
    "name": "Music Festival",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1800,
    "index": "F",
    "name": "Dasha and Nightmares",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "hashing",
        "meet-in-the-middle",
        "strings"
    ]
},
{
    "contestId": 1799,
    "index": "D1",
    "name": "Hot Start Up (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1797,
    "index": "D",
    "name": "Li Hua and Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1794,
    "index": "D",
    "name": "Counting Factorizations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1791,
    "index": "G2",
    "name": "Teleporters (Hard Version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1787,
    "index": "D",
    "name": "Game on Axis",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1784,
    "index": "B",
    "name": "Letter Exchange",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1777,
    "index": "D",
    "name": "Score of a Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1774,
    "index": "E",
    "name": "Two Chess Pieces",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1773,
    "index": "K",
    "name": "King's Puzzle",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1773,
    "index": "A",
    "name": "Amazing Trick",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "graph matchings",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1759,
    "index": "G",
    "name": "Restore the Permutation",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1749,
    "index": "D",
    "name": "Counting Arrays",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1747,
    "index": "D",
    "name": "Yet Another Problem",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 1746,
    "index": "D",
    "name": "Paths on the Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1744,
    "index": "E2",
    "name": "Divisible Numbers (hard version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1739,
    "index": "D",
    "name": "Reset K Edges",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1738,
    "index": "D",
    "name": "Permutation Addicts",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1729,
    "index": "F",
    "name": "Kirei and the Linear Function",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "hashing",
        "math"
    ]
},
{
    "contestId": 1718,
    "index": "A2",
    "name": "Burenka and Traditions (hard version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1717,
    "index": "D",
    "name": "Madoka and The Corruption Scheme",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1715,
    "index": "D",
    "name": "2+ doors",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "2-sat",
        "bitmasks",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1714,
    "index": "F",
    "name": "Build a Tree and That Is It",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1707,
    "index": "B",
    "name": "Difference Array",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1704,
    "index": "D",
    "name": "Magical Array",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1702,
    "index": "G1",
    "name": "Passable Paths (easy version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1701,
    "index": "D",
    "name": "Permutation Restoration",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1700,
    "index": "D",
    "name": "River Locks",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1697,
    "index": "D",
    "name": "Guess The String",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1696,
    "index": "D",
    "name": "Permutation Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "divide and conquer",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1689,
    "index": "D",
    "name": "Lena and Matrix",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "geometry",
        "shortest paths"
    ]
},
{
    "contestId": 1679,
    "index": "D",
    "name": "Toss a Coin to Your Graph...",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1677,
    "index": "C",
    "name": "Tokitsukaze and Two Colorful Tapes",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1673,
    "index": "D",
    "name": "Lost Arithmetic Progression",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1661,
    "index": "D",
    "name": "Progressions Covering",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1659,
    "index": "D",
    "name": "Reverse Sort Sum",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1656,
    "index": "D",
    "name": "K-good",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1651,
    "index": "D",
    "name": "Nearest Excluded Points",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1650,
    "index": "E",
    "name": "Rescheduling the Exam",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1648,
    "index": "C",
    "name": "Tyler and Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1647,
    "index": "D",
    "name": "Madoka and the Best School in Russia",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1644,
    "index": "E",
    "name": "Expand the Path",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1627,
    "index": "D",
    "name": "Not Adding",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1624,
    "index": "G",
    "name": "MinOr Tree",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1620,
    "index": "E",
    "name": "Replace the Numbers",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dsu",
        "implementation"
    ]
},
{
    "contestId": 1613,
    "index": "D",
    "name": "MEX Sequences",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1611,
    "index": "E2",
    "name": "Escape The Maze (hard version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1601,
    "index": "B",
    "name": "Frog Traveler",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "two pointers"
    ]
},
{
    "contestId": 1600,
    "index": "E",
    "name": "Array Game",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "games",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1593,
    "index": "D2",
    "name": "Half of Same",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1585,
    "index": "D",
    "name": "Yet Another Sorting Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 1569,
    "index": "D",
    "name": "Inconvenient Pairs",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1560,
    "index": "F1",
    "name": "Nearest Beautiful Number (easy version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy"
    ]
},
{
    "contestId": 1558,
    "index": "B",
    "name": "Up the Strip",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1547,
    "index": "F",
    "name": "Array Stabilization (GCD version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "divide and conquer",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1545,
    "index": "B",
    "name": "AquaMoon and Chess",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1543,
    "index": "C",
    "name": "Need for Pink Slips",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "implementation",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1527,
    "index": "B2",
    "name": "Palindrome Game (hard version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "games"
    ]
},
{
    "contestId": 1512,
    "index": "F",
    "name": "Education",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1508,
    "index": "A",
    "name": "Binary Literature",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1495,
    "index": "B",
    "name": "Let's Go Hiking",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "games",
        "greedy"
    ]
},
{
    "contestId": 1494,
    "index": "C",
    "name": "1D Sokoban",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1492,
    "index": "D",
    "name": "Genius's Gambit",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1490,
    "index": "G",
    "name": "Old Floppy Drive ",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "math"
    ]
},
{
    "contestId": 1488,
    "index": "D",
    "name": "Problemsolving Marathon",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special",
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1488,
    "index": "C",
    "name": "Two Policemen",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special",
        "binary search",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1486,
    "index": "C2",
    "name": "Guessing the Greatest (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1482,
    "index": "D",
    "name": "Playlist",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dsu",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1479,
    "index": "B1",
    "name": "Painting the Array I",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1477,
    "index": "B",
    "name": "Nezzar and Binary String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1475,
    "index": "G",
    "name": "Strange Beauty",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1475,
    "index": "F",
    "name": "Unusual Matrix",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "2-sat",
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1470,
    "index": "B",
    "name": "Strange Definition",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "graphs",
        "hashing",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1467,
    "index": "C",
    "name": "Three Bags",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1463,
    "index": "D",
    "name": "Pairs",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1453,
    "index": "D",
    "name": "Checkpoints",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1444,
    "index": "B",
    "name": "Divide and Sum",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1439,
    "index": "A2",
    "name": "Binary Table (Hard Version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1436,
    "index": "D",
    "name": "Bandit in a City",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1430,
    "index": "E",
    "name": "String Reversal",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1428,
    "index": "D",
    "name": "Bouncing Boomerangs",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1423,
    "index": "B",
    "name": "Valuable Paper",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "flows",
        "graph matchings",
        "graphs"
    ]
},
{
    "contestId": 1421,
    "index": "D",
    "name": "Hexagons",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "shortest paths"
    ]
},
{
    "contestId": 1413,
    "index": "C",
    "name": "Perform Easily",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1404,
    "index": "B",
    "name": "Tree Tag",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "games",
        "trees"
    ]
},
{
    "contestId": 1400,
    "index": "D",
    "name": "Zigzags",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1384,
    "index": "B1",
    "name": "Koa and the Beach (Easy Version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1383,
    "index": "B",
    "name": "GameGame",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "games",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1375,
    "index": "D",
    "name": "Replace by MEX",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "sortings"
    ]
},
{
    "contestId": 1371,
    "index": "E1",
    "name": "Asterism (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1369,
    "index": "D",
    "name": "TediousLee",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "graphs",
        "greedy",
        "math",
        "trees"
    ]
},
{
    "contestId": 1367,
    "index": "E",
    "name": "Necklace Assembly",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 1365,
    "index": "E",
    "name": "Maximum Subsequence Value",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1361,
    "index": "B",
    "name": "Johnny and Grandmaster",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1360,
    "index": "G",
    "name": "A/B Matrix",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1358,
    "index": "D",
    "name": "The Best Vacation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1354,
    "index": "D",
    "name": "Multiset",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1353,
    "index": "E",
    "name": "K-periodic Garland",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1348,
    "index": "D",
    "name": "Phoenix and Science",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1342,
    "index": "D",
    "name": "Multiple Testcases",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1328,
    "index": "E",
    "name": "Tree Queries",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1313,
    "index": "C2",
    "name": "Skyscrapers (hard version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1311,
    "index": "F",
    "name": "Moving Points",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "divide and conquer",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1307,
    "index": "D",
    "name": "Cow and Fields",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1305,
    "index": "D",
    "name": "Kuroni and the Celebration",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1303,
    "index": "D",
    "name": "Fill The Bag",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "greedy"
    ]
},
{
    "contestId": 1294,
    "index": "E",
    "name": "Obtain a Permutation",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1285,
    "index": "D",
    "name": "Dr. Evil Underscores",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1277,
    "index": "D",
    "name": "Let's Play the Words?",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1276,
    "index": "B",
    "name": "Two Fairs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1272,
    "index": "E",
    "name": "Nearest Opposite Parity",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1270,
    "index": "D",
    "name": "Strange Device",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1264,
    "index": "B",
    "name": "Beautiful Sequence",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1260,
    "index": "D",
    "name": "A Game with Traps",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1251,
    "index": "D",
    "name": "Salary Changing",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1245,
    "index": "D",
    "name": "Shichikuji and Power Grid",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "dsu",
        "graphs",
        "greedy",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1242,
    "index": "B",
    "name": "0-1 MST",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 1238,
    "index": "D",
    "name": "AB-string",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "strings"
    ]
},
{
    "contestId": 1237,
    "index": "C2",
    "name": "Balanced Removals (Harder)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "divide and conquer",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1228,
    "index": "D",
    "name": "Complete Tripartite",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 1220,
    "index": "D",
    "name": "Alex and Julian",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1216,
    "index": "E1",
    "name": "Numerical Sequence (easy version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "math"
    ]
},
{
    "contestId": 1214,
    "index": "D",
    "name": "Treasure Island",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "flows",
        "hashing"
    ]
},
{
    "contestId": 1213,
    "index": "E",
    "name": "Two Small Strings",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1208,
    "index": "D",
    "name": "Restore Permutation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1207,
    "index": "E",
    "name": "XOR Guessing",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1205,
    "index": "B",
    "name": "Shortest Cycle",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1202,
    "index": "D",
    "name": "Print a 1337-string...",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "strings"
    ]
},
{
    "contestId": 1200,
    "index": "D",
    "name": "White Lines",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1197,
    "index": "D",
    "name": "Yet Another Subarray Problem",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1184,
    "index": "E1",
    "name": "Daleks' Invasion (easy)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1183,
    "index": "H",
    "name": "Subsequences (hard version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1181,
    "index": "C",
    "name": "Flag",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1178,
    "index": "E",
    "name": "Archaeology",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1175,
    "index": "D",
    "name": "Array Splitting",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1174,
    "index": "D",
    "name": "Ehab and the Expected XOR Problem",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ]
},
{
    "contestId": 1172,
    "index": "B",
    "name": "Nauuo and Circle",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1168,
    "index": "B",
    "name": "Good Triple",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "two pointers"
    ]
},
{
    "contestId": 1163,
    "index": "C2",
    "name": "Power Transmission (Hard Edition)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "geometry",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1163,
    "index": "C1",
    "name": "Power Transmission (Easy Edition)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 1157,
    "index": "D",
    "name": "N Problems During K Days",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1155,
    "index": "D",
    "name": "Beautiful Array",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1153,
    "index": "D",
    "name": "Serval and Rooted Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1147,
    "index": "B",
    "name": "Chladni Figure",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "strings"
    ]
},
{
    "contestId": 1144,
    "index": "E",
    "name": "Median String",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "math",
        "number theory",
        "strings"
    ]
},
{
    "contestId": 1141,
    "index": "G",
    "name": "Privatization of Roads in Treeland",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1141,
    "index": "F2",
    "name": "Same Sum Blocks (Hard)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1141,
    "index": "F1",
    "name": "Same Sum Blocks (Easy)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1133,
    "index": "F2",
    "name": "Spanning Tree with One Fixed Degree",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1120,
    "index": "A",
    "name": "Diana and Liana",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1119,
    "index": "E",
    "name": "Pavel and Triangles",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "fft",
        "greedy",
        "ternary search"
    ]
},
{
    "contestId": 1117,
    "index": "C",
    "name": "Magic Ship",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 1114,
    "index": "D",
    "name": "Flood Fill",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1105,
    "index": "D",
    "name": "Kilani and the Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1095,
    "index": "F",
    "name": "Make It Connected",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1095,
    "index": "E",
    "name": "Almost Regular Bracket Sequence",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1092,
    "index": "F",
    "name": "Tree with Maximum Cost",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1090,
    "index": "B",
    "name": "LaTeX Expert",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": []
},
{
    "contestId": 1089,
    "index": "F",
    "name": "Fractions",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1081,
    "index": "E",
    "name": "Missing Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1077,
    "index": "F1",
    "name": "Pictures with Kittens (easy version)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1076,
    "index": "E",
    "name": "Vasya and a Tree",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1067,
    "index": "A",
    "name": "Array Without Local Maximums ",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1063,
    "index": "C",
    "name": "Dwarves, Hats and Extrasensory Abilities",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "geometry",
        "interactive"
    ]
},
{
    "contestId": 1060,
    "index": "D",
    "name": "Social Circles",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1055,
    "index": "C",
    "name": "Lucky Days",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1054,
    "index": "D",
    "name": "Changing Array",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1044,
    "index": "B",
    "name": "Intersecting Subtrees",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1043,
    "index": "E",
    "name": "Train Hard, Win Easy",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1041,
    "index": "E",
    "name": "Tree Reconstruction",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1036,
    "index": "C",
    "name": "Classy Numbers",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1032,
    "index": "D",
    "name": "Barcelonian Distance",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 1031,
    "index": "D",
    "name": "Minimum path",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1029,
    "index": "D",
    "name": "Concatenated Multiples",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1017,
    "index": "D",
    "name": "The Wu",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 1015,
    "index": "E2",
    "name": "Stars Drawing (Hard Edition)",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1012,
    "index": "C",
    "name": "Hills",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1012,
    "index": "B",
    "name": "Chemical table",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "matrices"
    ]
},
{
    "contestId": 1002,
    "index": "E2",
    "name": "Another array reconstruction algorithm",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": []
},
{
    "contestId": 1002,
    "index": "A4",
    "name": "Generate W state",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": []
},
{
    "contestId": 1000,
    "index": "D",
    "name": "Yet Another Problem On a Subsequence",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 999,
    "index": "D",
    "name": "Equalize the Remainders",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 993,
    "index": "B",
    "name": "Open Communication",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force"
    ]
},
{
    "contestId": 982,
    "index": "D",
    "name": "Shark",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dsu",
        "trees"
    ]
},
{
    "contestId": 981,
    "index": "D",
    "name": "Bookshelves",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 965,
    "index": "D",
    "name": "Single-use Stones",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "flows",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 961,
    "index": "E",
    "name": "Tufurama",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 959,
    "index": "E",
    "name": "Mahmoud and Ehab and the xor-MST",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 959,
    "index": "D",
    "name": "Mahmoud and Ehab and another array construction task",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 952,
    "index": "B",
    "name": "A Map of the Cat",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "brute force",
        "interactive"
    ]
},
{
    "contestId": 949,
    "index": "C",
    "name": "Data Center Maintenance",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 935,
    "index": "D",
    "name": "Fafa and Ancient Alphabet",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 1900,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 930,
    "index": "C",
    "name": "Teodor is not a liar!",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 928,
    "index": "D",
    "name": "Autocompletion",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "*special",
        "strings",
        "trees"
    ]
},
{
    "contestId": 928,
    "index": "C",
    "name": "Dependency management",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "*special",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 926,
    "index": "E",
    "name": "Merge Equal Elements",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 914,
    "index": "D",
    "name": "Bash and a Tough Math Puzzle",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "number theory"
    ]
},
{
    "contestId": 909,
    "index": "E",
    "name": "Coprocessor",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 894,
    "index": "C",
    "name": "Marco and GCD Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 893,
    "index": "D",
    "name": "Credit Card",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 883,
    "index": "I",
    "name": "Photo Processing",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 883,
    "index": "G",
    "name": "Orientation of Edges",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 865,
    "index": "B",
    "name": "Ordering Pizza",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "sortings",
        "ternary search"
    ]
},
{
    "contestId": 862,
    "index": "C",
    "name": "Mahmoud and Ehab and the xor",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 848,
    "index": "B",
    "name": "Rooter's Song",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "geometry",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 847,
    "index": "I",
    "name": "Noise Level",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "implementation",
        "math"
    ]
},
{
    "contestId": 846,
    "index": "D",
    "name": "Monitor",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 839,
    "index": "B",
    "name": "Game of the Rows",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 835,
    "index": "D",
    "name": "Palindromic characteristics",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 832,
    "index": "D",
    "name": "Misha, Grisha and Underground",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 819,
    "index": "B",
    "name": "Mister B and PR Shifts",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "implementation",
        "math"
    ]
},
{
    "contestId": 818,
    "index": "E",
    "name": "Card Game Again",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 817,
    "index": "D",
    "name": "Imbalanced Array",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "sortings"
    ]
},
{
    "contestId": 811,
    "index": "C",
    "name": "Vladik and Memorable Trip",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 808,
    "index": "D",
    "name": "Array Division",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 803,
    "index": "D",
    "name": "Magazine Ad",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 803,
    "index": "C",
    "name": "Maximal GCD",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 796,
    "index": "C",
    "name": "Bank Hacking",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "trees"
    ]
},
{
    "contestId": 792,
    "index": "D",
    "name": "Paths in a Complete Binary Tree",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "trees"
    ]
},
{
    "contestId": 784,
    "index": "F",
    "name": "Crunching Numbers Just for You",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 784,
    "index": "D",
    "name": "Touchy-Feely Palindromes",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 780,
    "index": "D",
    "name": "Innokenty and a Football League",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "2-sat",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths",
        "strings"
    ]
},
{
    "contestId": 757,
    "index": "C",
    "name": "Felicity is Coming!",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "hashing",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 750,
    "index": "D",
    "name": "New Year and Fireworks",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 746,
    "index": "E",
    "name": "Numbers Exchange",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 744,
    "index": "B",
    "name": "Hongcow's Game",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "interactive"
    ]
},
{
    "contestId": 739,
    "index": "B",
    "name": "Alyona and a tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 731,
    "index": "F",
    "name": "Video Cards",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 730,
    "index": "J",
    "name": "Bottles",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 729,
    "index": "E",
    "name": "Subordinates",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 724,
    "index": "D",
    "name": "Dense Subsequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 722,
    "index": "D",
    "name": "Generating Sets",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 717,
    "index": "E",
    "name": "Paint it really, really dark gray",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 717,
    "index": "D",
    "name": "Dexterina\u2019s Lab",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "games",
        "matrices",
        "probabilities"
    ]
},
{
    "contestId": 711,
    "index": "D",
    "name": "Directed Roads",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
    ]
},
{
    "contestId": 708,
    "index": "B",
    "name": "Recover the String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 702,
    "index": "D",
    "name": "Road to Post Office",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "math"
    ]
},
{
    "contestId": 700,
    "index": "A",
    "name": "As Fast As Possible",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 691,
    "index": "E",
    "name": "Xor-sequences",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "matrices"
    ]
},
{
    "contestId": 687,
    "index": "C",
    "name": "The Values You Can Make",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 685,
    "index": "B",
    "name": "Kay and Snowflake",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 683,
    "index": "H",
    "name": "Exchange of Books",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 683,
    "index": "G",
    "name": "The Fraction",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 682,
    "index": "D",
    "name": "Alyona and Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 661,
    "index": "F",
    "name": "Primes in Interval",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 661,
    "index": "B",
    "name": "Seasons",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 660,
    "index": "D",
    "name": "Number of Parallelograms",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 656,
    "index": "G",
    "name": "You're a Professional",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 656,
    "index": "F",
    "name": "Ace It!",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 656,
    "index": "A",
    "name": "Da Vinci Powers",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 653,
    "index": "C",
    "name": "Bear and Up-Down",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 650,
    "index": "B",
    "name": "Image Preview",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 648,
    "index": "D",
    "name": "\u0421\u043e\u0431\u0430\u0447\u043a\u0438 \u0438 \u043c\u0438\u0441\u043a\u0438",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 633,
    "index": "C",
    "name": "Spy Syndrome 2",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "hashing",
        "implementation",
        "sortings",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 630,
    "index": "E",
    "name": "A rectangle",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "math"
    ]
},
{
    "contestId": 622,
    "index": "D",
    "name": "Optimal Number Permutation",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 613,
    "index": "B",
    "name": "Skills",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 613,
    "index": "A",
    "name": "Peter and Snow Blower",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 607,
    "index": "B",
    "name": "Zuma",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 599,
    "index": "D",
    "name": "Spongebob and Squares",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 597,
    "index": "C",
    "name": "Subsequences",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 582,
    "index": "B",
    "name": "Once Again...",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dp",
        "matrices"
    ]
},
{
    "contestId": 577,
    "index": "B",
    "name": "Modulo Sum",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 568,
    "index": "B",
    "name": "Symmetric and Transitive",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 566,
    "index": "D",
    "name": "Restructuring Company",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dsu"
    ]
},
{
    "contestId": 558,
    "index": "C",
    "name": "Amr and Chemistry",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "math",
        "shortest paths"
    ]
},
{
    "contestId": 557,
    "index": "C",
    "name": "Arthur and Table",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 553,
    "index": "B",
    "name": "Kyoya and Permutation",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 552,
    "index": "D",
    "name": "Vanya and Triangles",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "geometry",
        "math",
        "sortings"
    ]
},
{
    "contestId": 552,
    "index": "C",
    "name": "Vanya and Scales",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "math",
        "meet-in-the-middle",
        "number theory"
    ]
},
{
    "contestId": 550,
    "index": "D",
    "name": "Regular Bridge",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 549,
    "index": "D",
    "name": "Haar Features",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 547,
    "index": "B",
    "name": "Mike and Feet",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu"
    ]
},
{
    "contestId": 540,
    "index": "D",
    "name": "Bad Luck Island",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 535,
    "index": "D",
    "name": "Tavas and Malekas",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "hashing",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 535,
    "index": "C",
    "name": "Tavas and Karafs",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "math"
    ]
},
{
    "contestId": 534,
    "index": "D",
    "name": "Handshakes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 529,
    "index": "B",
    "name": "Group Photo 2 (online mirror version)",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 524,
    "index": "C",
    "name": "The Art of Dealing with ATM",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "sortings"
    ]
},
{
    "contestId": 510,
    "index": "D",
    "name": "Fox And Jumping",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 505,
    "index": "C",
    "name": "Mr. Kitayuta, the Treasure Hunter",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 500,
    "index": "D",
    "name": "New Year Santa Network",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 496,
    "index": "D",
    "name": "Tennis Game",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 1900,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 490,
    "index": "D",
    "name": "Chocolate",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "meet-in-the-middle",
        "number theory"
    ]
},
{
    "contestId": 488,
    "index": "B",
    "name": "Candy Boxes",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 479,
    "index": "E",
    "name": "Riding in a Lift",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 476,
    "index": "D",
    "name": "Dreamoon and Sets",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 472,
    "index": "D",
    "name": "Design Tutorial: Inverse the Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dsu",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 470,
    "index": "E",
    "name": "Chessboard",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 470,
    "index": "D",
    "name": "Caesar Cipher",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 470,
    "index": "C",
    "name": "Eval",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 463,
    "index": "D",
    "name": "Gargari and Permutations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 463,
    "index": "C",
    "name": "Gargari and Bishops",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 459,
    "index": "E",
    "name": "Pashmak and Graph",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "sortings"
    ]
},
{
    "contestId": 459,
    "index": "C",
    "name": "Pashmak and Buses",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 457,
    "index": "B",
    "name": "Distributed Join",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 455,
    "index": "B",
    "name": "A Lot of Games",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "games",
        "implementation",
        "strings",
        "trees"
    ]
},
{
    "contestId": 452,
    "index": "D",
    "name": "Washer, Dryer, Folder",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 448,
    "index": "C",
    "name": "Painting Fence",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "divide and conquer",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 437,
    "index": "D",
    "name": "The Child and Zoo",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dsu",
        "sortings"
    ]
},
{
    "contestId": 421,
    "index": "D",
    "name": "Bug in Code",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 420,
    "index": "C",
    "name": "Bug in Code",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "graphs",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 417,
    "index": "D",
    "name": "Cunning Gena",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 412,
    "index": "E",
    "name": "E-mail Addresses",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 409,
    "index": "F",
    "name": "000001",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 404,
    "index": "D",
    "name": "Minesweeper 1D",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 388,
    "index": "B",
    "name": "Fox and Minimal path",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 377,
    "index": "B",
    "name": "Preparing for the Contest",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 374,
    "index": "C",
    "name": "Inna and Dima",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 372,
    "index": "B",
    "name": "Counting Rectangles is Fun",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 367,
    "index": "B",
    "name": "Sereja ans Anagrams",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 366,
    "index": "C",
    "name": "Dima and Salad",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 362,
    "index": "C",
    "name": "Insertion Sort",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 359,
    "index": "C",
    "name": "Prime Number",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 356,
    "index": "B",
    "name": "Xenia and Hamming",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 353,
    "index": "B",
    "name": "Two Heaps",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 351,
    "index": "B",
    "name": "Jeff and Furik",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 343,
    "index": "C",
    "name": "Read Time",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 342,
    "index": "C",
    "name": "Cupboard and Balloons",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 336,
    "index": "B",
    "name": "Vasily the Bear and Fly",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "math"
    ]
},
{
    "contestId": 335,
    "index": "B",
    "name": "Palindrome",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 331,
    "index": "B2",
    "name": "Shave Beaver!",
    "type": "PROGRAMMING",
    "points": 70.0,
    "rating": 1900,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 327,
    "index": "D",
    "name": "Block Tower",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 321,
    "index": "B",
    "name": "Ciel and Duel",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "flows",
        "greedy"
    ]
},
{
    "contestId": 319,
    "index": "B",
    "name": "Psychos in a Line",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 309,
    "index": "C",
    "name": "Memory for Arrays",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "bitmasks",
        "greedy"
    ]
},
{
    "contestId": 294,
    "index": "C",
    "name": "Shaass and Lights",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 292,
    "index": "E",
    "name": "Copying Data",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 292,
    "index": "D",
    "name": "Connected Components",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu"
    ]
},
{
    "contestId": 285,
    "index": "D",
    "name": "Permutation Sum",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "implementation",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 279,
    "index": "E",
    "name": "Beautiful Decomposition",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "games",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 261,
    "index": "B",
    "name": "Maxim and Restaurant",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 258,
    "index": "B",
    "name": "Little Elephant and Elections",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 257,
    "index": "D",
    "name": "Sum",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 250,
    "index": "D",
    "name": "Building Bridge",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "geometry",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 241,
    "index": "G",
    "name": "Challenging Balloons",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 232,
    "index": "B",
    "name": "Table",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 229,
    "index": "C",
    "name": "Triangles",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "graphs",
        "math"
    ]
},
{
    "contestId": 228,
    "index": "E",
    "name": "The Road to Berland is Paved With Good Intentions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 226,
    "index": "B",
    "name": "Naughty Stone Piles",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 223,
    "index": "C",
    "name": "Partial Sums",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 223,
    "index": "B",
    "name": "Two Strings",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dp",
        "strings"
    ]
},
{
    "contestId": 222,
    "index": "E",
    "name": "Decoding Genome",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 222,
    "index": "D",
    "name": "Olympiad",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 215,
    "index": "D",
    "name": "Hot Days",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 213,
    "index": "B",
    "name": "Numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 208,
    "index": "C",
    "name": "Police Station",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 208,
    "index": "B",
    "name": "Solitaire",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 207,
    "index": "B2",
    "name": "Military Trainings",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1900,
    "tags": []
},
{
    "contestId": 199,
    "index": "B",
    "name": "Special Olympics",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 195,
    "index": "D",
    "name": "Analyzing Polyline",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "geometry",
        "math",
        "sortings"
    ]
},
{
    "contestId": 191,
    "index": "C",
    "name": "Fools and Roads",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 190,
    "index": "D",
    "name": "Non-Secret Cypher",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "two pointers"
    ]
},
{
    "contestId": 180,
    "index": "D",
    "name": "Name",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "strings"
    ]
},
{
    "contestId": 178,
    "index": "E1",
    "name": "The Beaver's Problem - 2",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 1900,
    "tags": []
},
{
    "contestId": 178,
    "index": "D2",
    "name": "Magic Squares",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1900,
    "tags": []
},
{
    "contestId": 178,
    "index": "C2",
    "name": "Smart Beaver and Resolving Collisions",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 1900,
    "tags": []
},
{
    "contestId": 177,
    "index": "E2",
    "name": "Space Voyage",
    "type": "PROGRAMMING",
    "points": 70.0,
    "rating": 1900,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 173,
    "index": "C",
    "name": "Spiral Maximum",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 162,
    "index": "D",
    "name": "Remove digits",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 158,
    "index": "E",
    "name": "Phone Talks",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "*special",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 149,
    "index": "D",
    "name": "Coloring Brackets",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 148,
    "index": "E",
    "name": "Porcelain",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 144,
    "index": "D",
    "name": "Missile Silos",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 138,
    "index": "B",
    "name": "Digits Permutations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 137,
    "index": "D",
    "name": "Palindromes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 135,
    "index": "C",
    "name": "Zero-One",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "games",
        "greedy"
    ]
},
{
    "contestId": 134,
    "index": "B",
    "name": "Pairs of Numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "number theory"
    ]
},
{
    "contestId": 126,
    "index": "A",
    "name": "Hot Bath",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "brute force",
        "math"
    ]
},
{
    "contestId": 121,
    "index": "C",
    "name": "Lucky Permutation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 120,
    "index": "J",
    "name": "Minimum Sum",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "divide and conquer",
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 119,
    "index": "B",
    "name": "Before Exam",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 118,
    "index": "C",
    "name": "Fancy Number",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "greedy",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 111,
    "index": "B",
    "name": "Petya and Divisors",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "number theory"
    ]
},
{
    "contestId": 109,
    "index": "C",
    "name": "Lucky Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "dp",
        "dsu",
        "trees"
    ]
},
{
    "contestId": 109,
    "index": "B",
    "name": "Lucky Probability",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "brute force",
        "probabilities"
    ]
},
{
    "contestId": 103,
    "index": "C",
    "name": "Russian Roulette",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 95,
    "index": "C",
    "name": "Volleyball",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "shortest paths"
    ]
},
{
    "contestId": 93,
    "index": "B",
    "name": "End of Exams",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1900,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 72,
    "index": "F",
    "name": "Oil",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "*special",
        "greedy",
        "math"
    ]
},
{
    "contestId": 69,
    "index": "D",
    "name": "Dot",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 67,
    "index": "D",
    "name": "Optical Experiment",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 63,
    "index": "D",
    "name": "Dividing Island",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 61,
    "index": "E",
    "name": "Enemy is weak",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 57,
    "index": "C",
    "name": "Array",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 55,
    "index": "C",
    "name": "Pie or die",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "games"
    ]
},
{
    "contestId": 46,
    "index": "E",
    "name": "Comb",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 45,
    "index": "D",
    "name": "Event Dates",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "meet-in-the-middle",
        "sortings"
    ]
},
{
    "contestId": 45,
    "index": "C",
    "name": "Dancing Lessons",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 41,
    "index": "E",
    "name": "3-cycles",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 41,
    "index": "D",
    "name": "Pawn",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 38,
    "index": "D",
    "name": "Vasya the Architect",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 37,
    "index": "C",
    "name": "Old Berland Language",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "data structures",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 27,
    "index": "C",
    "name": "Unordered Subsequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 25,
    "index": "D",
    "name": "Roads not only in Berland",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 25,
    "index": "C",
    "name": "Roads in Berland",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 22,
    "index": "D",
    "name": "Segments",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 21,
    "index": "A",
    "name": "Jabber ID",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1900,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 20,
    "index": "C",
    "name": "Dijkstra?",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 1900,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 19,
    "index": "B",
    "name": "Checkout Assistant",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 16,
    "index": "E",
    "name": "Fish",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "bitmasks",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 16,
    "index": "D",
    "name": "Logging",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "implementation",
        "strings"
    ]
},
{
    "contestId": 14,
    "index": "E",
    "name": "Camels",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 14,
    "index": "D",
    "name": "Two Paths",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 9,
    "index": "D",
    "name": "How many trees?",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 6,
    "index": "E",
    "name": "Exposition",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "binary search",
        "data structures",
        "dsu",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 5,
    "index": "C",
    "name": "Longest Regular Bracket Sequence",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 3,
    "index": "B",
    "name": "Lorry",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "greedy",
        "sortings"
    ]
}
]
