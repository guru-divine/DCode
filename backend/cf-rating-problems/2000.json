[
{
    "contestId": 1943,
    "index": "B",
    "name": "Non-Palindromic Substring",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "hashing",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1941,
    "index": "G",
    "name": "Rudolf and Subway",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1936,
    "index": "B",
    "name": "Pinball",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1931,
    "index": "G",
    "name": "One-Dimensional Puzzle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1923,
    "index": "E",
    "name": "Count Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1919,
    "index": "H",
    "name": "Tree Diameter",
    "type": "PROGRAMMING",
    "points": 5000.0,
    "rating": 2000,
    "tags": [
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1910,
    "index": "F",
    "name": "Build Railway Stations",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1905,
    "index": "D",
    "name": "Cyclic MEX",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1903,
    "index": "E",
    "name": "Geo Game",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1900,
    "index": "D",
    "name": "Small GCD",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1893,
    "index": "C",
    "name": "Freedom of Choice",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1891,
    "index": "F",
    "name": "A Growing Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1889,
    "index": "C1",
    "name": "Doremy's Drying Plan (Easy Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1881,
    "index": "G",
    "name": "Anya and the Mysterious String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1872,
    "index": "G",
    "name": "Replace With Product",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1867,
    "index": "E1",
    "name": "Salyg1n and Array (simple version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1862,
    "index": "G",
    "name": "The Great Equalizer",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1857,
    "index": "G",
    "name": "Counting Graphs",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dsu",
        "graphs",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1851,
    "index": "G",
    "name": "Vlad and the Mountains",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1841,
    "index": "D",
    "name": "Pairs of Segments",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1830,
    "index": "B",
    "name": "The BOSS Can Count Pairs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1827,
    "index": "B1",
    "name": "Range Sorting (Easy Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dp",
        "dsu",
        "greedy",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1815,
    "index": "B",
    "name": "Sum Graph",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "implementation",
        "interactive",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1804,
    "index": "D",
    "name": "Accommodation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1796,
    "index": "D",
    "name": "Maximum Subarray",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1788,
    "index": "D",
    "name": "Moving Dots",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1783,
    "index": "D",
    "name": "Different Arrays",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1772,
    "index": "F",
    "name": "Copy of a Copy of a Copy",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1770,
    "index": "D",
    "name": "Koxia and Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dsu",
        "flows",
        "games",
        "graph matchings",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1764,
    "index": "D",
    "name": "Doremy's Pegging Game",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1763,
    "index": "C",
    "name": "Another Array Problem",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1753,
    "index": "C",
    "name": "Wish I Knew How to Sort",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1744,
    "index": "F",
    "name": "MEX vs MED",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1741,
    "index": "F",
    "name": "Multi-Colored Segments",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1733,
    "index": "D2",
    "name": "Zero-One (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1731,
    "index": "E",
    "name": "Graph Cost",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1726,
    "index": "D",
    "name": "Edge Split",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1725,
    "index": "C",
    "name": "Circular Mirror",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "combinatorics",
        "geometry",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1718,
    "index": "B",
    "name": "Fibonacci Strings",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1716,
    "index": "D",
    "name": "Chip Move",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 1716,
    "index": "C",
    "name": "Robot in a Hallway",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "ternary search"
    ]
},
{
    "contestId": 1712,
    "index": "D",
    "name": "Empty Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1702,
    "index": "G2",
    "name": "Passable Paths (hard version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1696,
    "index": "E",
    "name": "Placing Jinas",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1690,
    "index": "G",
    "name": "Count the Trains",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1685,
    "index": "B",
    "name": "Linguistics",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1682,
    "index": "D",
    "name": "Circular Spanning Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1680,
    "index": "E",
    "name": "Moving Chips",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1674,
    "index": "G",
    "name": "Remove Directed Edges",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1674,
    "index": "E",
    "name": "Breaking the Wall",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1672,
    "index": "F1",
    "name": "Array Shuffling",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1665,
    "index": "D",
    "name": "GCD Guess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "constructive algorithms",
        "games",
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1657,
    "index": "D",
    "name": "For Gamers. By Gamers.",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1646,
    "index": "D",
    "name": "Weight the Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1641,
    "index": "B",
    "name": "Repetitions Decoding",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1638,
    "index": "D",
    "name": "Big Brush",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1634,
    "index": "D",
    "name": "Finding Zero",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1632,
    "index": "D",
    "name": "New Year Concert",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1624,
    "index": "F",
    "name": "Interacdive Problem",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1624,
    "index": "E",
    "name": "Masha-forgetful",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "hashing",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1622,
    "index": "D",
    "name": "Shuffle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1620,
    "index": "D",
    "name": "Exact Change",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1619,
    "index": "G",
    "name": "Unusual Minesweeper",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "dfs and similar",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1619,
    "index": "F",
    "name": "Let's Play the Hat?",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1618,
    "index": "F",
    "name": "Reverse",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1616,
    "index": "D",
    "name": "Keep the Average High",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1613,
    "index": "E",
    "name": "Crazy Robot",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1612,
    "index": "E",
    "name": "Messages",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 1610,
    "index": "D",
    "name": "Not Quite Lee",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1599,
    "index": "C",
    "name": "Bubble Strike",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "probabilities",
        "ternary search"
    ]
},
{
    "contestId": 1584,
    "index": "D",
    "name": "Guess the Permutation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "combinatorics",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1582,
    "index": "E",
    "name": "Pchelyonok and Segments",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1574,
    "index": "D",
    "name": "The Strongest Build",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "hashing",
        "implementation"
    ]
},
{
    "contestId": 1571,
    "index": "F",
    "name": "Kotlinforces",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 1567,
    "index": "D",
    "name": "Expression Evaluation Error",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1566,
    "index": "E",
    "name": "Buds Re-hanging",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1558,
    "index": "C",
    "name": "Bottom-Tier Reversals",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1551,
    "index": "E",
    "name": "Fixed Points",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1536,
    "index": "D",
    "name": "Omkar and Medians",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1525,
    "index": "C",
    "name": "Robot Collisions",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1521,
    "index": "C",
    "name": "Nastia and a Hidden Permutation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1514,
    "index": "D",
    "name": "Cut and Stick",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1513,
    "index": "D",
    "name": "GCD and MST",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1506,
    "index": "G",
    "name": "Maximize the Remaining String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1506,
    "index": "F",
    "name": "Triangular Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1493,
    "index": "C",
    "name": "K-beautiful Strings",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1487,
    "index": "E",
    "name": "Cheap Dinner",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1481,
    "index": "D",
    "name": "AB Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1458,
    "index": "B",
    "name": "Glass Half Spilled",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1454,
    "index": "E",
    "name": "Number of Simple Paths",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1451,
    "index": "E1",
    "name": "Bitwise Queries (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1438,
    "index": "C",
    "name": "Engineer Artem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "2-sat",
        "chinese remainder theorem",
        "constructive algorithms",
        "fft",
        "flows"
    ]
},
{
    "contestId": 1431,
    "index": "E",
    "name": "Chess Match",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1427,
    "index": "D",
    "name": "Unshuffling a Deck",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1427,
    "index": "C",
    "name": "The Hard Work of Paparazzi",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1426,
    "index": "F",
    "name": "Number of Subsequences",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "strings"
    ]
},
{
    "contestId": 1416,
    "index": "C",
    "name": "XOR Inverse",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "math",
        "sortings",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1416,
    "index": "B",
    "name": "Make Them Equal",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1415,
    "index": "D",
    "name": "XOR-gun",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1408,
    "index": "D",
    "name": "Searchlights",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1399,
    "index": "E1",
    "name": "Weights Division (easy version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1391,
    "index": "D",
    "name": "505",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1388,
    "index": "D",
    "name": "Captain Flint and Treasure",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1385,
    "index": "E",
    "name": "Directing Edges",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1380,
    "index": "D",
    "name": "Berserk And Fireball",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1379,
    "index": "C",
    "name": "Choosing flowers",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1370,
    "index": "D",
    "name": "Odd-Even Subsequence",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dp",
        "dsu",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1366,
    "index": "D",
    "name": "Two Divisors",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1363,
    "index": "E",
    "name": "Tree Shuffling",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1359,
    "index": "E",
    "name": "Modular Stability",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1359,
    "index": "D",
    "name": "Yet Another Yet Another Task",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1354,
    "index": "C2",
    "name": "Not So Simple Polygon Embedding",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "geometry",
        "math"
    ]
},
{
    "contestId": 1349,
    "index": "C",
    "name": "Orac and Game of Life",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1349,
    "index": "B",
    "name": "Orac and Medians",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1346,
    "index": "F",
    "name": "Dune II: Battle For Arrakis",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1344,
    "index": "B",
    "name": "Monopole Magnets",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1320,
    "index": "C",
    "name": "World of Darkraft: Battle for Azathoth",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1316,
    "index": "D",
    "name": "Nash Matrix",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1311,
    "index": "D",
    "name": "Three Integers",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1304,
    "index": "E",
    "name": "1-Trees and Queries",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1301,
    "index": "D",
    "name": "Time to Run",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1296,
    "index": "E2",
    "name": "String Coloring (hard version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1294,
    "index": "F",
    "name": "Three Paths on a Tree",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1288,
    "index": "E",
    "name": "Messenger Simulator",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1288,
    "index": "D",
    "name": "Minimax Problem",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1280,
    "index": "C",
    "name": "Jeremy Bearimy",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1268,
    "index": "B",
    "name": "Domino for Young",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1266,
    "index": "D",
    "name": "Decreasing Debts",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "graphs",
        "greedy",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1257,
    "index": "E",
    "name": "The Contest",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1256,
    "index": "F",
    "name": "Equalizing Two Strings",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1256,
    "index": "E",
    "name": "Yet Another Division Into Teams",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1250,
    "index": "N",
    "name": "Wires",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1248,
    "index": "D1",
    "name": "The World Is Just a Programming Task (Easy Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1244,
    "index": "E",
    "name": "Minimizing Difference",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "sortings",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 1244,
    "index": "C",
    "name": "The Football Season",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1237,
    "index": "D",
    "name": "Balanced Playlist",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1234,
    "index": "E",
    "name": "Special Permutations",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1223,
    "index": "D",
    "name": "Sequence Sorting",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1219,
    "index": "G",
    "name": "Harvester",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1214,
    "index": "E",
    "name": "Petya and Construction Set",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1211,
    "index": "E",
    "name": "Double Permutation Inc.",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1211,
    "index": "D",
    "name": "Teams",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "binary search",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1210,
    "index": "C",
    "name": "Kamil and Making a Stream",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1209,
    "index": "G1",
    "name": "Into Blocks (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dsu",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1209,
    "index": "E1",
    "name": "Rotate Columns (easy version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1204,
    "index": "D1",
    "name": "Kirk and a Binary String (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1200,
    "index": "E",
    "name": "Compress Words",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1198,
    "index": "C",
    "name": "Matching vs  Independent Set",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1190,
    "index": "D",
    "name": "Tokitsukaze and Strange Rectangle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "divide and conquer",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1185,
    "index": "E",
    "name": "Polycarp and Snakes",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1183,
    "index": "G",
    "name": "Candy Box (hard version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1183,
    "index": "E",
    "name": "Subsequences (easy version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1165,
    "index": "F2",
    "name": "Microtransactions (hard version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1165,
    "index": "F1",
    "name": "Microtransactions (easy version)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1157,
    "index": "F",
    "name": "Maximum Balanced Circle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1156,
    "index": "C",
    "name": "Match Points",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy",
        "sortings",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 1147,
    "index": "C",
    "name": "Thanos Nim",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1142,
    "index": "B",
    "name": "Lynyrd Skynyrd",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 1132,
    "index": "F",
    "name": "Clear the String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1131,
    "index": "D",
    "name": "Gourmet choice",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1129,
    "index": "B",
    "name": "Wrong Answer",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1103,
    "index": "B",
    "name": "Game with modulo",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1102,
    "index": "F",
    "name": "Elongated Matrix",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1101,
    "index": "D",
    "name": "GCD Counting",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1092,
    "index": "E",
    "name": "Minimal Diameter Forest",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1090,
    "index": "L",
    "name": "Berland University",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 1090,
    "index": "K",
    "name": "Right Expansion Of The Mind",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 1090,
    "index": "I",
    "name": "Minimal Product",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": []
},
{
    "contestId": 1088,
    "index": "D",
    "name": "Ehab and another another xor problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1083,
    "index": "B",
    "name": "The Fair Nut and Strings",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1082,
    "index": "E",
    "name": "Increasing Frequency",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1080,
    "index": "D",
    "name": "Olya and magical square",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1070,
    "index": "C",
    "name": "Cloud Computing",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1061,
    "index": "D",
    "name": "TV Shows",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1060,
    "index": "E",
    "name": "Sergey and Subway",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1057,
    "index": "C",
    "name": "Tanya and Colored Candies",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "*special",
        "dp"
    ]
},
{
    "contestId": 1033,
    "index": "D",
    "name": "Divisors",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1030,
    "index": "E",
    "name": "Vasya and Good Sequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1029,
    "index": "F",
    "name": "Multicolored Markers",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1019,
    "index": "B",
    "name": "The hat",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1010,
    "index": "D",
    "name": "Mars rover",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1009,
    "index": "E",
    "name": "Intercity Travelling",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 999,
    "index": "F",
    "name": "Cards and Joy",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 999,
    "index": "E",
    "name": "Reachability from the Capital",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 997,
    "index": "B",
    "name": "Roman Digits",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 975,
    "index": "D",
    "name": "Ghosts",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "geometry",
        "math"
    ]
},
{
    "contestId": 965,
    "index": "C",
    "name": "Greedy Arkady",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 963,
    "index": "B",
    "name": "Destruction of a Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 961,
    "index": "D",
    "name": "Pair Of Lines",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 958,
    "index": "C2",
    "name": "Encryption (medium)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 958,
    "index": "A2",
    "name": "Death Stars (medium)",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "hashing",
        "strings"
    ]
},
{
    "contestId": 954,
    "index": "G",
    "name": "Castle Defense",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 954,
    "index": "E",
    "name": "Water Taps",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 952,
    "index": "E",
    "name": "Cheese Board",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": []
},
{
    "contestId": 940,
    "index": "E",
    "name": "Cashback",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 938,
    "index": "D",
    "name": "Buy a Ticket",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 933,
    "index": "B",
    "name": "A Determined Cleanup",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 926,
    "index": "F",
    "name": "Mobile Communications",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": []
},
{
    "contestId": 920,
    "index": "F",
    "name": "SUM and REPLACE",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dsu",
        "number theory"
    ]
},
{
    "contestId": 916,
    "index": "B",
    "name": "Jamie and Binary Sequence (changed after round)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "greedy",
        "math"
    ]
},
{
    "contestId": 911,
    "index": "E",
    "name": "Stack Sorting",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 900,
    "index": "D",
    "name": "Unusual Sequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 899,
    "index": "E",
    "name": "Segments Removal",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dsu",
        "flows",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 896,
    "index": "B",
    "name": "Ithea Plays With Chtholly",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "constructive algorithms",
        "games",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 895,
    "index": "C",
    "name": "Square Subsets",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 893,
    "index": "E",
    "name": "Counting Arrays",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 891,
    "index": "B",
    "name": "Gluttony",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 886,
    "index": "D",
    "name": "Restoration of string",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 877,
    "index": "E",
    "name": "Danil and a Part-time Job",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 870,
    "index": "D",
    "name": "Something with XOR Queries",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 864,
    "index": "E",
    "name": "Fire",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "sortings"
    ]
},
{
    "contestId": 863,
    "index": "E",
    "name": "Turn Off The TV",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 862,
    "index": "D",
    "name": "Mahmoud and Ehab and the binary string",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "divide and conquer",
        "interactive"
    ]
},
{
    "contestId": 855,
    "index": "C",
    "name": "Helga Hufflepuff's Cup",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 852,
    "index": "B",
    "name": "Neural Network country",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 843,
    "index": "B",
    "name": "Interactive LowerBound",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 842,
    "index": "D",
    "name": "Vitya and Strange Lesson",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 842,
    "index": "C",
    "name": "Ilya And The Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 818,
    "index": "C",
    "name": "Sofa Thief",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 817,
    "index": "E",
    "name": "Choosing The Commander",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 814,
    "index": "D",
    "name": "An overnight dance in discotheque",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "geometry",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 803,
    "index": "F",
    "name": "Coprime Subsequences",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 803,
    "index": "E",
    "name": "Roma and Poker",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 797,
    "index": "E",
    "name": "Array Queries",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 792,
    "index": "C",
    "name": "Divide by Three",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 786,
    "index": "A",
    "name": "Berzerk",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "games"
    ]
},
{
    "contestId": 784,
    "index": "G",
    "name": "BF Calculator",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 784,
    "index": "E",
    "name": "Twisted Circuit",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 784,
    "index": "B",
    "name": "Kids' Riddle",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 777,
    "index": "E",
    "name": "Hanoi Factory",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 776,
    "index": "D",
    "name": "The Door Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 774,
    "index": "L",
    "name": "Bars",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "binary search"
    ]
},
{
    "contestId": 774,
    "index": "J",
    "name": "Stepan's Series",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "dp"
    ]
},
{
    "contestId": 773,
    "index": "B",
    "name": "Dynamic Problem Scoring",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 767,
    "index": "C",
    "name": "Garland",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 766,
    "index": "D",
    "name": "Mahmoud and a Dictionary",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 761,
    "index": "E",
    "name": "Dasha and Puzzle",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 758,
    "index": "D",
    "name": "Ability To Convert",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 755,
    "index": "D",
    "name": "PolandBall and Polygon",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 749,
    "index": "D",
    "name": "Leaving Auction",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 730,
    "index": "I",
    "name": "Olympiad in Programming and Sports",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "flows",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 721,
    "index": "D",
    "name": "Maxim and Array",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 720,
    "index": "A",
    "name": "Closing ceremony",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 710,
    "index": "E",
    "name": "Generate a String",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 696,
    "index": "C",
    "name": "PLEASE",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "matrices"
    ]
},
{
    "contestId": 689,
    "index": "E",
    "name": "Mike and Geometry Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 681,
    "index": "D",
    "name": "Gifts by the List",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 676,
    "index": "D",
    "name": "Theseus and labyrinth",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 671,
    "index": "B",
    "name": "Robin Hood",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 666,
    "index": "B",
    "name": "World Tour",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 662,
    "index": "D",
    "name": "International Olympiad",
    "type": "PROGRAMMING",
    "points": 250.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 661,
    "index": "E",
    "name": "Divisibility Check",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 661,
    "index": "C",
    "name": "Array Sum",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 659,
    "index": "F",
    "name": "Polycarp and Hay",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 656,
    "index": "E",
    "name": "Out of Controls",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 656,
    "index": "C",
    "name": "Without Text",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 641,
    "index": "E",
    "name": "Little Artem and Time Machine",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 633,
    "index": "D",
    "name": "Fibonacci-ish",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 630,
    "index": "O",
    "name": "Arrow",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 629,
    "index": "D",
    "name": "Babaei and Birthday Cake",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 629,
    "index": "C",
    "name": "Famil Door and Brackets",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 621,
    "index": "E",
    "name": "Wet Shark and Blocks",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 615,
    "index": "D",
    "name": "Multipliers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 615,
    "index": "C",
    "name": "Running Track",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 611,
    "index": "D",
    "name": "New Year and Ancient Prophecy",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2000,
    "tags": [
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 609,
    "index": "D",
    "name": "Gadgets for dollars and pounds",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 600,
    "index": "D",
    "name": "Area of Two Circles' Intersection",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 598,
    "index": "E",
    "name": "Chocolate Bar",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 578,
    "index": "C",
    "name": "Weakness and Poorness",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "ternary search"
    ]
},
{
    "contestId": 571,
    "index": "B",
    "name": "Minimization",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 557,
    "index": "D",
    "name": "Vitaly and Cycle",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math"
    ]
},
{
    "contestId": 555,
    "index": "B",
    "name": "Case of Fugitive",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 545,
    "index": "E",
    "name": "Paths and Trees",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 542,
    "index": "C",
    "name": "Idempotent functions",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math"
    ]
},
{
    "contestId": 540,
    "index": "C",
    "name": "Ice Cave",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 533,
    "index": "B",
    "name": "Work Group",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "strings",
        "trees"
    ]
},
{
    "contestId": 526,
    "index": "C",
    "name": "Om Nom and Candies",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 522,
    "index": "D",
    "name": "Closest Equals",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "*special",
        "data structures"
    ]
},
{
    "contestId": 515,
    "index": "D",
    "name": "Drazil and Tiles",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 514,
    "index": "D",
    "name": "R2D2 and Droid Army",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 514,
    "index": "C",
    "name": "Watto and Mechanism",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "hashing",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 513,
    "index": "C",
    "name": "Second price auction",
    "type": "PROGRAMMING",
    "points": 8.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "probabilities"
    ]
},
{
    "contestId": 509,
    "index": "E",
    "name": "Pretty Song",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "math",
        "strings"
    ]
},
{
    "contestId": 509,
    "index": "C",
    "name": "Sums of Digits",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 501,
    "index": "D",
    "name": "Misha and Permutations Summation",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 494,
    "index": "B",
    "name": "Obsessive String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 492,
    "index": "E",
    "name": "Vanya and Field",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 490,
    "index": "E",
    "name": "Restoring Increasing Sequence",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 487,
    "index": "B",
    "name": "Strip",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 478,
    "index": "D",
    "name": "Red-Green Towers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 475,
    "index": "D",
    "name": "CGCDSSQ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "math"
    ]
},
{
    "contestId": 474,
    "index": "E",
    "name": "Pillars",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 474,
    "index": "C",
    "name": "Captain Marmot",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 468,
    "index": "B",
    "name": "Two Sets",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 466,
    "index": "B",
    "name": "Wonder Room",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 464,
    "index": "B",
    "name": "Restore Cube ",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 461,
    "index": "B",
    "name": "Appleman and Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 453,
    "index": "B",
    "name": "Little Pony and Harmony Chest",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 451,
    "index": "D",
    "name": "Count Good Substrings",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 449,
    "index": "B",
    "name": "Jzzhu and Cities",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 446,
    "index": "B",
    "name": "DZY Loves Modification",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 435,
    "index": "D",
    "name": "Special Grid",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 433,
    "index": "D",
    "name": "Nanami's Digital Board",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dsu",
        "implementation"
    ]
},
{
    "contestId": 432,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "string suffix structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 427,
    "index": "E",
    "name": "Police Patrol",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 413,
    "index": "D",
    "name": "2048",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 412,
    "index": "D",
    "name": "Giving Awards",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 401,
    "index": "D",
    "name": "Roman and Numbers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 400,
    "index": "D",
    "name": "Dima and Bacteria",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dsu",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 388,
    "index": "C",
    "name": "Fox and Card Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "games",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 386,
    "index": "C",
    "name": "Diverse Substrings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 383,
    "index": "C",
    "name": "Propagating tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 382,
    "index": "B",
    "name": "Number Busters",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 380,
    "index": "C",
    "name": "Sereja and Brackets",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "schedules"
    ]
},
{
    "contestId": 379,
    "index": "D",
    "name": "New Year Letter",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 374,
    "index": "D",
    "name": "Inna and Sequence ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "trees"
    ]
},
{
    "contestId": 374,
    "index": "A",
    "name": "Inna and Pink Pony",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 371,
    "index": "E",
    "name": "Subway Innovation",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 367,
    "index": "C",
    "name": "Sereja and the Arrangement of Numbers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 366,
    "index": "D",
    "name": "Dima and Trap Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dsu",
        "shortest paths",
        "two pointers"
    ]
},
{
    "contestId": 360,
    "index": "B",
    "name": "Levko and Array",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 359,
    "index": "D",
    "name": "Pair of Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 358,
    "index": "C",
    "name": "Dima and Containers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 353,
    "index": "D",
    "name": "Queue",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dp"
    ]
},
{
    "contestId": 346,
    "index": "B",
    "name": "Lucky Common Subsequence",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 345,
    "index": "C",
    "name": "Counting Fridays",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 340,
    "index": "E",
    "name": "Iahub and Permutations",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 337,
    "index": "D",
    "name": "Book of Evil",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "trees"
    ]
},
{
    "contestId": 317,
    "index": "B",
    "name": "Ants",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 314,
    "index": "C",
    "name": "Sereja and Subsequences",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 314,
    "index": "B",
    "name": "Sereja and Periods",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dfs and similar",
        "strings"
    ]
},
{
    "contestId": 309,
    "index": "A",
    "name": "Morning run",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 296,
    "index": "B",
    "name": "Yaroslav and Two Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 292,
    "index": "C",
    "name": "Beautiful IP Addresses",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 291,
    "index": "E",
    "name": "Tree-String Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "*special",
        "dfs and similar",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 280,
    "index": "A",
    "name": "Rectangle Puzzle",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2000,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 267,
    "index": "B",
    "name": "Dominoes",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 264,
    "index": "C",
    "name": "Choosing Balls",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 263,
    "index": "C",
    "name": "Circle of Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 261,
    "index": "C",
    "name": "Maxim and Matrix",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dp",
        "math"
    ]
},
{
    "contestId": 258,
    "index": "C",
    "name": "Little Elephant and LCM",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 253,
    "index": "D",
    "name": "Table with Letters - 2",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "two pointers"
    ]
},
{
    "contestId": 251,
    "index": "C",
    "name": "Number Transformation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 250,
    "index": "E",
    "name": "Mad Joe",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 248,
    "index": "C",
    "name": "Robo-Footballer",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "geometry"
    ]
},
{
    "contestId": 245,
    "index": "F",
    "name": "Log Stream Analysis",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "binary search",
        "brute force",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 243,
    "index": "B",
    "name": "Hydra",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 242,
    "index": "E",
    "name": "XOR on Segment",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "data structures"
    ]
},
{
    "contestId": 241,
    "index": "C",
    "name": "Mirror Box",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 237,
    "index": "E",
    "name": "Build String",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 237,
    "index": "D",
    "name": "T-decomposition",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 235,
    "index": "B",
    "name": "Let's Play Osu!",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 234,
    "index": "H",
    "name": "Merging Two Decks",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 228,
    "index": "C",
    "name": "Fractal Detector",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "hashing"
    ]
},
{
    "contestId": 216,
    "index": "E",
    "name": "Martian Luck",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 213,
    "index": "C",
    "name": "Relay Race",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 207,
    "index": "D3",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 2000,
    "tags": []
},
{
    "contestId": 207,
    "index": "D2",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 2000,
    "tags": []
},
{
    "contestId": 207,
    "index": "A3",
    "name": "Beaver's Calculator 1.0",
    "type": "PROGRAMMING",
    "points": 50.0,
    "rating": 2000,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 204,
    "index": "C",
    "name": "Little Elephant and Furik and Rubik",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "math",
        "probabilities"
    ]
},
{
    "contestId": 201,
    "index": "C",
    "name": "Fragile Bridges",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 196,
    "index": "B",
    "name": "Infinite Maze",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 195,
    "index": "E",
    "name": "Building Forest",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 193,
    "index": "B",
    "name": "Xor",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 187,
    "index": "C",
    "name": "Weak Memory",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "dsu"
    ]
},
{
    "contestId": 182,
    "index": "C",
    "name": "Optimal Sum",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 178,
    "index": "E2",
    "name": "The Beaver's Problem - 2",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2000,
    "tags": []
},
{
    "contestId": 178,
    "index": "C3",
    "name": "Smart Beaver and Resolving Collisions",
    "type": "PROGRAMMING",
    "points": 50.0,
    "rating": 2000,
    "tags": []
},
{
    "contestId": 176,
    "index": "C",
    "name": "Playing with Superglue",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "constructive algorithms"
    ]
},
{
    "contestId": 171,
    "index": "E",
    "name": "MYSTERIOUS LANGUAGE",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 171,
    "index": "C",
    "name": "A Piece of Cake",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 164,
    "index": "B",
    "name": "Ancient Berland Hieroglyphs",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "two pointers"
    ]
},
{
    "contestId": 163,
    "index": "B",
    "name": "Lemmings",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search"
    ]
},
{
    "contestId": 162,
    "index": "I",
    "name": "Truncatable primes",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 162,
    "index": "G",
    "name": "Non-decimal sum",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 156,
    "index": "C",
    "name": "Cipher",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 153,
    "index": "D",
    "name": "Date Change",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 137,
    "index": "E",
    "name": "Last Chance",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 131,
    "index": "F",
    "name": "Present to Mom",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 128,
    "index": "D",
    "name": "Numbers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 128,
    "index": "C",
    "name": "Games with Rectangle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 126,
    "index": "C",
    "name": "E-reader Display",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 119,
    "index": "C",
    "name": "Education Reform",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 118,
    "index": "E",
    "name": "Bertown roads",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 117,
    "index": "C",
    "name": "Cycle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 113,
    "index": "B",
    "name": "Petr#",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "data structures",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 109,
    "index": "D",
    "name": "Lucky Sorting",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "sortings"
    ]
},
{
    "contestId": 101,
    "index": "C",
    "name": "Vectors",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 87,
    "index": "C",
    "name": "Interesting Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "games",
        "math"
    ]
},
{
    "contestId": 82,
    "index": "D",
    "name": "Two out of Three",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 82,
    "index": "C",
    "name": "General Mobilization",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dfs and similar",
        "sortings"
    ]
},
{
    "contestId": 78,
    "index": "C",
    "name": "Beaver Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "games",
        "number theory"
    ]
},
{
    "contestId": 75,
    "index": "D",
    "name": "Big Maximum Sum",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "trees"
    ]
},
{
    "contestId": 73,
    "index": "B",
    "name": "Need For Brake",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 69,
    "index": "C",
    "name": "Game",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 66,
    "index": "E",
    "name": "Petya and Post",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 64,
    "index": "F",
    "name": "Domain",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "*special",
        "expression parsing"
    ]
},
{
    "contestId": 63,
    "index": "E",
    "name": "Sweets Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "games",
        "implementation"
    ]
},
{
    "contestId": 61,
    "index": "C",
    "name": "Capture Valerian",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 59,
    "index": "E",
    "name": "Shortest Path",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 59,
    "index": "D",
    "name": "Team Arrangement",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 58,
    "index": "D",
    "name": "Calendar",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "greedy",
        "strings"
    ]
},
{
    "contestId": 54,
    "index": "C",
    "name": "First Digit Law",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 50,
    "index": "C",
    "name": "Happy Farm 5",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 47,
    "index": "C",
    "name": "Crossword",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 45,
    "index": "E",
    "name": "Director",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 44,
    "index": "J",
    "name": "Triminoes",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 43,
    "index": "D",
    "name": "Journey",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 39,
    "index": "E",
    "name": "What Has Dirichlet Got to Do with That?",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 39,
    "index": "A",
    "name": "C*++ Calculations",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "expression parsing",
        "greedy"
    ]
},
{
    "contestId": 34,
    "index": "E",
    "name": "Collisions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 33,
    "index": "D",
    "name": "Knights",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "geometry",
        "graphs",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 31,
    "index": "D",
    "name": "Chocolate",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 29,
    "index": "D",
    "name": "Ant on the Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 27,
    "index": "E",
    "name": "Number With The Given Amount Of Divisors",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 26,
    "index": "C",
    "name": "Parquet",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 21,
    "index": "C",
    "name": "Stripe 2",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2000,
    "tags": [
        "binary search",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 21,
    "index": "B",
    "name": "Intersection",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 20,
    "index": "B",
    "name": "Equation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2000,
    "tags": [
        "math"
    ]
},
{
    "contestId": 18,
    "index": "E",
    "name": "Flag 2",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 18,
    "index": "D",
    "name": "Seller Bob",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "brute force",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 15,
    "index": "C",
    "name": "Industrial Nim",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "games"
    ]
},
{
    "contestId": 13,
    "index": "B",
    "name": "Letter A",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 10,
    "index": "C",
    "name": "Digital Root",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 8,
    "index": "C",
    "name": "Looking for Order",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 2,
    "index": "B",
    "name": "The least round way",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "dp",
        "math"
    ]
}
]
