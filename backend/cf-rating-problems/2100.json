[
{
    "contestId": 1948,
    "index": "E",
    "name": "Clique Partition",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1938,
    "index": "J",
    "name": "There and Back Again",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": []
},
{
    "contestId": 1934,
    "index": "D1",
    "name": "XOR Break --- Solo Version",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1933,
    "index": "F",
    "name": "Turtle Mission: Robot and the Earthquake",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1930,
    "index": "D2",
    "name": "Sum over all Substrings (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1924,
    "index": "B",
    "name": "Space Harbour",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1920,
    "index": "E",
    "name": "Counting Binary Strings",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1919,
    "index": "D",
    "name": "01 Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dsu",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1914,
    "index": "G1",
    "name": "Light Bulbs (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "combinatorics",
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "math",
        "trees"
    ]
},
{
    "contestId": 1913,
    "index": "D",
    "name": "Array Collapse",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1912,
    "index": "B",
    "name": "Blueprint for Seating",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 1910,
    "index": "E",
    "name": "Maximum Sum Subarrays",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "dp"
    ]
},
{
    "contestId": 1906,
    "index": "J",
    "name": "Count BFS Graph",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1906,
    "index": "F",
    "name": "Maximize The Value",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1900,
    "index": "E",
    "name": "Transitive Graph",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1896,
    "index": "E",
    "name": "Permutation Sorting",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1886,
    "index": "D",
    "name": "Monocarp and the Set",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "data structures",
        "math"
    ]
},
{
    "contestId": 1884,
    "index": "D",
    "name": "Counting Rhyme",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1876,
    "index": "C",
    "name": "Autosynthesis",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1868,
    "index": "B2",
    "name": "Candy Party (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1866,
    "index": "H",
    "name": "Happy Sets",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 1866,
    "index": "G",
    "name": "Grouped Carriages",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "flows",
        "greedy"
    ]
},
{
    "contestId": 1864,
    "index": "E",
    "name": "Guess Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "data structures",
        "games",
        "math",
        "probabilities",
        "sortings",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1863,
    "index": "E",
    "name": "Speedrun",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1856,
    "index": "D",
    "name": "More Wrong",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "divide and conquer",
        "interactive"
    ]
},
{
    "contestId": 1839,
    "index": "D",
    "name": "Ball Sorting",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 1838,
    "index": "D",
    "name": "Bracket Walk",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1832,
    "index": "D1",
    "name": "Red-Blue Operations (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1821,
    "index": "E",
    "name": "Rearrange Brackets",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 1811,
    "index": "G1",
    "name": "Vlad and the Nice Paths (easy version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1811,
    "index": "F",
    "name": "Is It Flower?",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1810,
    "index": "E",
    "name": "Monsters",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1808,
    "index": "D",
    "name": "Petya, Petya, Petr, and Palindromes",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1801,
    "index": "D",
    "name": "The way home",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1799,
    "index": "D2",
    "name": "Hot Start Up (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1790,
    "index": "F",
    "name": "Timofey and Black-White Tree",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "graphs",
        "greedy",
        "math",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1787,
    "index": "E",
    "name": "The Harmonization of XOR",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1778,
    "index": "D",
    "name": "Flexible String Revisit",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1776,
    "index": "G",
    "name": "Another Wine Tasting Event",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "strings"
    ]
},
{
    "contestId": 1775,
    "index": "E",
    "name": "The Human Equation",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1771,
    "index": "D",
    "name": "Hossam and (sub-)palindromic tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "dp",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1767,
    "index": "C",
    "name": "Count Binary Strings",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1762,
    "index": "D",
    "name": "GCD Queries ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "interactive",
        "number theory"
    ]
},
{
    "contestId": 1761,
    "index": "D",
    "name": "Carry Bit",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1748,
    "index": "D",
    "name": "ConstructOR ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "combinatorics",
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1734,
    "index": "E",
    "name": "Rectangular Congruence",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "number theory"
    ]
},
{
    "contestId": 1732,
    "index": "C2",
    "name": "Sheikh (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1729,
    "index": "G",
    "name": "Cut Substrings",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "hashing",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1725,
    "index": "F",
    "name": "Field Photography",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "bitmasks",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1710,
    "index": "B",
    "name": "Rain",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "geometry",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1684,
    "index": "E",
    "name": "MEX vs DIFF",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1671,
    "index": "E",
    "name": "Preorder",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "dsu",
        "hashing",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1667,
    "index": "B",
    "name": "Optimal Partition",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1666,
    "index": "J",
    "name": "Job Lookup",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dp",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1660,
    "index": "F2",
    "name": "Promising String (hard version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1654,
    "index": "D",
    "name": "Potion Brewing Class",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1650,
    "index": "G",
    "name": "Counting Shortcuts",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1637,
    "index": "E",
    "name": "Best Pair",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 1628,
    "index": "D1",
    "name": "Game on Sum (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "games",
        "math"
    ]
},
{
    "contestId": 1626,
    "index": "D",
    "name": "Martial Arts Tournament",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1621,
    "index": "D",
    "name": "The Winter Hike",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1614,
    "index": "D1",
    "name": "Divan and Kostomuksha (easy version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "number theory"
    ]
},
{
    "contestId": 1606,
    "index": "E",
    "name": "Arena",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1605,
    "index": "D",
    "name": "Treelabeling",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "games",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1599,
    "index": "H",
    "name": "Hidden Fortress",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "interactive",
        "math"
    ]
},
{
    "contestId": 1598,
    "index": "E",
    "name": "Staircases",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "combinatorics",
        "data structures",
        "dfs and similar",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1593,
    "index": "F",
    "name": "Red-Black Number",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "math",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1575,
    "index": "L",
    "name": "Longest Array Deconstruction",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 1560,
    "index": "F2",
    "name": "Nearest Beautiful Number (hard version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1555,
    "index": "E",
    "name": "Boring Segments",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1553,
    "index": "E",
    "name": "Permutation Shift",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1551,
    "index": "D2",
    "name": "Domino (hard version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1547,
    "index": "G",
    "name": "How Many Paths?",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1538,
    "index": "G",
    "name": "Gift Set",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1538,
    "index": "E",
    "name": "Funny Substrings",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "hashing",
        "implementation",
        "matrices",
        "strings"
    ]
},
{
    "contestId": 1530,
    "index": "E",
    "name": "Minimax",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1525,
    "index": "E",
    "name": "Assimilation IV",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities",
        "two pointers"
    ]
},
{
    "contestId": 1516,
    "index": "D",
    "name": "Cut",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "graphs",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1511,
    "index": "E",
    "name": "Colorings and Dominoes",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1510,
    "index": "G",
    "name": "Guide",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": []
},
{
    "contestId": 1510,
    "index": "D",
    "name": "Digits",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1499,
    "index": "D",
    "name": "The Number of Pairs",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1493,
    "index": "D",
    "name": "GCD of an Array",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1486,
    "index": "D",
    "name": "Max Median",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1482,
    "index": "E",
    "name": "Skyline Photo",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1479,
    "index": "B2",
    "name": "Painting the Array II",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1472,
    "index": "G",
    "name": "Moving to the Capital",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1472,
    "index": "F",
    "name": "New Year's Puzzle",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "graph matchings",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1466,
    "index": "F",
    "name": "Euclid's nightmare",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1454,
    "index": "F",
    "name": "Array Partition",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1450,
    "index": "C1",
    "name": "Errich-Tac-Toe (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1446,
    "index": "C",
    "name": "Xor Tree",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1433,
    "index": "G",
    "name": "Reducing Delivery Cost",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1433,
    "index": "F",
    "name": "Zero Remainder Sum ",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1431,
    "index": "G",
    "name": "Number Deletion Game",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "dp",
        "games",
        "greedy"
    ]
},
{
    "contestId": 1431,
    "index": "F",
    "name": "Neural Network Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1420,
    "index": "C2",
    "name": "Pok\u00e9mon Army (hard version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1419,
    "index": "E",
    "name": "Decryption",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1418,
    "index": "D",
    "name": "Trash Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1413,
    "index": "E",
    "name": "Solo mid Oracle",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1411,
    "index": "D",
    "name": "Grime Zoo",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1409,
    "index": "F",
    "name": "Subsequences of Length Two",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1393,
    "index": "D",
    "name": "Rarity and New Dress",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1392,
    "index": "E",
    "name": "Omkar and Duck",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1389,
    "index": "D",
    "name": "Segment Intersections",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1387,
    "index": "B1",
    "name": "Village (Minimum)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1387,
    "index": "A",
    "name": "Graph",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "binary search",
        "dfs and similar",
        "dp",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1372,
    "index": "D",
    "name": "Omkar and Circle",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "games",
        "greedy"
    ]
},
{
    "contestId": 1370,
    "index": "E",
    "name": "Binary Subsequence Rotation",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1367,
    "index": "F1",
    "name": "Flying Sort (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1366,
    "index": "E",
    "name": "Two Arrays",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 1365,
    "index": "F",
    "name": "Swaps Again",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1364,
    "index": "D",
    "name": "Ehab's Last Corollary",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1363,
    "index": "D",
    "name": "Guess The Maximums",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "implementation",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1360,
    "index": "H",
    "name": "Binary Median",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1355,
    "index": "E",
    "name": "Restorer Distance",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "greedy",
        "math",
        "sortings",
        "ternary search"
    ]
},
{
    "contestId": 1354,
    "index": "E",
    "name": "Graph Coloring",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1343,
    "index": "E",
    "name": "Weights Distributing",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1333,
    "index": "D",
    "name": "Challenges in school \u211641",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "games",
        "graphs",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1332,
    "index": "E",
    "name": "Height All the Same",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1322,
    "index": "B",
    "name": "Present",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1312,
    "index": "E",
    "name": "Array Shrinking",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1299,
    "index": "C",
    "name": "Water Balance",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "geometry",
        "greedy"
    ]
},
{
    "contestId": 1296,
    "index": "F",
    "name": "Berland Beauty",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1284,
    "index": "D",
    "name": "New Year and Conference",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "hashing",
        "sortings"
    ]
},
{
    "contestId": 1278,
    "index": "D",
    "name": "Segment Tree",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1271,
    "index": "E",
    "name": "Common Number",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1271,
    "index": "D",
    "name": "Portals",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1267,
    "index": "K",
    "name": "Key Storage",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 1266,
    "index": "E",
    "name": "Spaceship Solitaire",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1265,
    "index": "E",
    "name": "Beautiful Mirrors",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1263,
    "index": "E",
    "name": "Editor",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1254,
    "index": "B2",
    "name": "Send Boxes to Alice (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math",
        "number theory",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 1252,
    "index": "K",
    "name": "Addition Robot",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1252,
    "index": "G",
    "name": "Performance Review",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1250,
    "index": "C",
    "name": "Trip to Saint Petersburg",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1223,
    "index": "E",
    "name": "Paint the Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "dp",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1218,
    "index": "I",
    "name": "The Light Square",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "2-sat",
        "dfs and similar",
        "greedy"
    ]
},
{
    "contestId": 1217,
    "index": "D",
    "name": "Coloring Edges",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1216,
    "index": "F",
    "name": "Wi-Fi",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1213,
    "index": "F",
    "name": "Unstable String Sort",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1207,
    "index": "F",
    "name": "Remainder Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1204,
    "index": "D2",
    "name": "Kirk and a Binary String (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "greedy",
        "math",
        "strings"
    ]
},
{
    "contestId": 1203,
    "index": "F1",
    "name": "Complete the Projects (easy version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1202,
    "index": "C",
    "name": "You Are Given a WASD-string...",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "math",
        "strings"
    ]
},
{
    "contestId": 1201,
    "index": "D",
    "name": "Treasure Hunting",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1195,
    "index": "E",
    "name": "OpenStreetMap",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1187,
    "index": "E",
    "name": "Tree Painting",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1185,
    "index": "G1",
    "name": "Playlist for Polycarp (easy version)",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1185,
    "index": "F",
    "name": "Two Pizzas",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "brute force"
    ]
},
{
    "contestId": 1184,
    "index": "E2",
    "name": "Daleks' Invasion (medium)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1184,
    "index": "A2",
    "name": "Heidi Learns Hashing (Medium)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "number theory"
    ]
},
{
    "contestId": 1183,
    "index": "F",
    "name": "Topforces Strikes Back",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1176,
    "index": "F",
    "name": "Destroy it!",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1167,
    "index": "E",
    "name": "Range Deleting",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1166,
    "index": "E",
    "name": "The LCMs Must be Large",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1163,
    "index": "D",
    "name": "Mysterious Code",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1158,
    "index": "C",
    "name": "Permutation recovery",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1154,
    "index": "F",
    "name": "Shovels Shop",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1152,
    "index": "D",
    "name": "Neko and Aki's Prank",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1151,
    "index": "E",
    "name": "Number of Components",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "math"
    ]
},
{
    "contestId": 1146,
    "index": "D",
    "name": "Frog Jumping",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1120,
    "index": "C",
    "name": "Compress String",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1117,
    "index": "D",
    "name": "Magic Gems",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1108,
    "index": "F",
    "name": "MST Unification",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1108,
    "index": "E2",
    "name": "Array and Segments (Hard version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1106,
    "index": "E",
    "name": "Lunar New Year and Red Envelopes",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1098,
    "index": "B",
    "name": "Nice table",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1077,
    "index": "F2",
    "name": "Pictures with Kittens (hard version)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1070,
    "index": "E",
    "name": "Getting Deals Done",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1066,
    "index": "F",
    "name": "Yet another 2D Walking",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1056,
    "index": "E",
    "name": "Check Transcription",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1044,
    "index": "C",
    "name": "Optimal Polygon Perimeter",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 1039,
    "index": "B",
    "name": "Subway Pursuit",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 1032,
    "index": "E",
    "name": "The Unbearable Lightness of Weights",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1029,
    "index": "E",
    "name": "Tree with Small Distances",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1028,
    "index": "D",
    "name": "Order book",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1027,
    "index": "E",
    "name": "Inverse Coloring",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1025,
    "index": "D",
    "name": "Recovering BST",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1023,
    "index": "E",
    "name": "Down or Right",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "interactive",
        "matrices"
    ]
},
{
    "contestId": 1006,
    "index": "F",
    "name": "Xor-Paths",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1005,
    "index": "F",
    "name": "Berland and the Shortest Paths",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1003,
    "index": "E",
    "name": "Tree Constructing",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 1000,
    "index": "E",
    "name": "We Need More Bosses",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 995,
    "index": "A",
    "name": "Tesla",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 993,
    "index": "C",
    "name": "Careful Maneuvering",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 992,
    "index": "D",
    "name": "Nastya and a Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 990,
    "index": "E",
    "name": "Post Lamps",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 988,
    "index": "F",
    "name": "Rain and Umbrellas",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 988,
    "index": "E",
    "name": "Divisibility by 25",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 985,
    "index": "E",
    "name": "Pencils and Boxes",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 985,
    "index": "D",
    "name": "Sand Fortress",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 980,
    "index": "D",
    "name": "Perfect Groups",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 976,
    "index": "E",
    "name": "Well played!",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 960,
    "index": "F",
    "name": "Pathwalks",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 960,
    "index": "D",
    "name": "Full Binary Tree Queries",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 955,
    "index": "C",
    "name": "Sad powers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "math",
        "number theory"
    ]
},
{
    "contestId": 954,
    "index": "F",
    "name": "Runner's Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "matrices",
        "sortings"
    ]
},
{
    "contestId": 936,
    "index": "B",
    "name": "Sleepy Game",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "games",
        "graphs"
    ]
},
{
    "contestId": 926,
    "index": "J",
    "name": "Segments",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 920,
    "index": "E",
    "name": "Connected Components?",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 919,
    "index": "E",
    "name": "Congruence Equation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "chinese remainder theorem",
        "math",
        "number theory"
    ]
},
{
    "contestId": 912,
    "index": "D",
    "name": "Fishes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "graphs",
        "greedy",
        "probabilities",
        "shortest paths"
    ]
},
{
    "contestId": 909,
    "index": "D",
    "name": "Colorful Points",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 900,
    "index": "E",
    "name": "Maximum Questions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "strings"
    ]
},
{
    "contestId": 899,
    "index": "F",
    "name": "Letters Removing",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 895,
    "index": "D",
    "name": "String Mark",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "math",
        "strings"
    ]
},
{
    "contestId": 894,
    "index": "E",
    "name": "Ralph and Mushrooms",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 877,
    "index": "D",
    "name": "Olya and Energy Drinks",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 875,
    "index": "C",
    "name": "National Property",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "2-sat",
        "dfs and similar",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 862,
    "index": "E",
    "name": "Mahmoud and Ehab and the function",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 859,
    "index": "E",
    "name": "Desk Disorder",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 859,
    "index": "D",
    "name": "Third Month Insanity",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 853,
    "index": "C",
    "name": "Boredom",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 852,
    "index": "E",
    "name": "Casinos and travel",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 852,
    "index": "D",
    "name": "Exploration plan",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "flows",
        "graph matchings",
        "shortest paths"
    ]
},
{
    "contestId": 852,
    "index": "C",
    "name": "Property",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 850,
    "index": "B",
    "name": "Arpa and a list of numbers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 847,
    "index": "F",
    "name": "Berland Elections",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 840,
    "index": "B",
    "name": "Leha and another game about graph",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 838,
    "index": "B",
    "name": "Diverging Directions",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 837,
    "index": "E",
    "name": "Vasya's Function",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 837,
    "index": "D",
    "name": "Round Subset",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 827,
    "index": "C",
    "name": "DNA Evolution",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 821,
    "index": "E",
    "name": "Okabe and El Psy Kongroo",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 818,
    "index": "F",
    "name": "Level Generation",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 811,
    "index": "D",
    "name": "Vladik and Favorite Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "interactive"
    ]
},
{
    "contestId": 802,
    "index": "K",
    "name": "Send the Fool Further! (medium)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 802,
    "index": "D",
    "name": "Marmots (easy)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "math"
    ]
},
{
    "contestId": 799,
    "index": "D",
    "name": "Field expansion",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 797,
    "index": "D",
    "name": "Broken BST",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar"
    ]
},
{
    "contestId": 796,
    "index": "D",
    "name": "Police Stations",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 793,
    "index": "D",
    "name": "Presents in Bankopolis",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 788,
    "index": "B",
    "name": "Weird journey",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 780,
    "index": "E",
    "name": "Underground Lab",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 776,
    "index": "E",
    "name": "The Holmes Children",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 774,
    "index": "B",
    "name": "Significant Cups",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "binary search",
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 774,
    "index": "A",
    "name": "Amusement Park",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "ternary search"
    ]
},
{
    "contestId": 771,
    "index": "C",
    "name": "Bear and Tree Jumps",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 768,
    "index": "E",
    "name": "Game of Stones",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "dp",
        "games"
    ]
},
{
    "contestId": 767,
    "index": "D",
    "name": "Cartons of milk",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 767,
    "index": "B",
    "name": "The Queue",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 766,
    "index": "E",
    "name": "Mahmoud and a xor trip",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 763,
    "index": "B",
    "name": "Timofey and rectangles",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "geometry"
    ]
},
{
    "contestId": 762,
    "index": "C",
    "name": "Two strings",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "hashing",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 754,
    "index": "D",
    "name": "Fedor and coupons",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 748,
    "index": "E",
    "name": "Santa Claus and Tangerines",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 748,
    "index": "D",
    "name": "Santa Claus and a Palindrome",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 746,
    "index": "G",
    "name": "New Roads",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 734,
    "index": "E",
    "name": "Anton and Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 732,
    "index": "E",
    "name": "Sockets",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 730,
    "index": "C",
    "name": "Bulmart",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "dfs and similar"
    ]
},
{
    "contestId": 703,
    "index": "D",
    "name": "Mishka and Interesting sum",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 703,
    "index": "C",
    "name": "Chris and Road",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2100,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 702,
    "index": "E",
    "name": "Analysis of Pathes in Functional Graph",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "graphs"
    ]
},
{
    "contestId": 690,
    "index": "D3",
    "name": "The Wall (hard)",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 689,
    "index": "D",
    "name": "Friends and Subsequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 675,
    "index": "C",
    "name": "Money Transfers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 665,
    "index": "E",
    "name": "Beautiful Subarrays",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "divide and conquer",
        "strings",
        "trees"
    ]
},
{
    "contestId": 661,
    "index": "D",
    "name": "Maximal Difference",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 656,
    "index": "D",
    "name": "Rosetta Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 649,
    "index": "E",
    "name": "\u0410\u0432\u0442\u043e\u0431\u0443\u0441",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 644,
    "index": "C",
    "name": "Hostname Aliases",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "*special",
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 632,
    "index": "D",
    "name": "Longest Subsequence",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 631,
    "index": "D",
    "name": "Messenger",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 630,
    "index": "P",
    "name": "Area of a Star",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 620,
    "index": "E",
    "name": "New Year Tree",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "bitmasks",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 615,
    "index": "E",
    "name": "Hexagons",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 609,
    "index": "E",
    "name": "Minimum spanning tree for each edge",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 601,
    "index": "B",
    "name": "Lipshitz Sequence",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 590,
    "index": "B",
    "name": "Chip 'n Dale Rescue Rangers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "geometry",
        "math"
    ]
},
{
    "contestId": 587,
    "index": "B",
    "name": "Duff in Beach",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 576,
    "index": "C",
    "name": "Points on Plane",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "geometry",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 576,
    "index": "B",
    "name": "Invariance of Tree",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 575,
    "index": "F",
    "name": "Bulbo",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 571,
    "index": "A",
    "name": "Lengthening Sticks",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "implementation",
        "math"
    ]
},
{
    "contestId": 552,
    "index": "E",
    "name": "Vanya and Brackets",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "expression parsing",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 551,
    "index": "D",
    "name": "GukiZ and Binary Operations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "implementation",
        "math",
        "matrices",
        "number theory"
    ]
},
{
    "contestId": 549,
    "index": "H",
    "name": "Degenerate Matrix",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 546,
    "index": "E",
    "name": "Soldier and Traveling",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "flows",
        "graphs",
        "math"
    ]
},
{
    "contestId": 543,
    "index": "B",
    "name": "Destroying Roads",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 542,
    "index": "F",
    "name": "Quest",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 540,
    "index": "E",
    "name": "Infinite Inversions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 530,
    "index": "H",
    "name": "Points in triangle",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "geometry"
    ]
},
{
    "contestId": 530,
    "index": "G",
    "name": "Levenshtein distance",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 530,
    "index": "F",
    "name": "Jumping frogs",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 525,
    "index": "E",
    "name": "Anya and Cubes",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "math",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 524,
    "index": "D",
    "name": "Social Network",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 522,
    "index": "C",
    "name": "Chicken or Fish?",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 520,
    "index": "D",
    "name": "Cubes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "games",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 519,
    "index": "E",
    "name": "A and B and Lecture Rooms",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 507,
    "index": "E",
    "name": "Breaking Good",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 498,
    "index": "C",
    "name": "Array and Operations",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "flows",
        "graph matchings",
        "number theory"
    ]
},
{
    "contestId": 496,
    "index": "E",
    "name": "Distributing Parts ",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 491,
    "index": "B",
    "name": "New York Hotel",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 489,
    "index": "F",
    "name": "Special Matrices",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 486,
    "index": "D",
    "name": "Valid Sets",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 484,
    "index": "B",
    "name": "Maximum Value",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 475,
    "index": "C",
    "name": "Kamal-ol-molk's Painting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 474,
    "index": "F",
    "name": "Ant colony",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 466,
    "index": "E",
    "name": "Information Graph",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 466,
    "index": "D",
    "name": "Increase Sequence",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 464,
    "index": "C",
    "name": "Substitutes in Number",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 463,
    "index": "E",
    "name": "Caisa and Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dfs and similar",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 457,
    "index": "C",
    "name": "Elections",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 455,
    "index": "C",
    "name": "Civilization",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "ternary search",
        "trees"
    ]
},
{
    "contestId": 452,
    "index": "C",
    "name": "Magic Trick",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 441,
    "index": "D",
    "name": "Valera and Swaps",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "implementation",
        "math",
        "string suffix structures"
    ]
},
{
    "contestId": 439,
    "index": "E",
    "name": "Devu and Birthday Celebration",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 431,
    "index": "D",
    "name": "Random Task",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 414,
    "index": "C",
    "name": "Mashmokh and Reverse Operation",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "divide and conquer"
    ]
},
{
    "contestId": 400,
    "index": "E",
    "name": "Inna and Binary Logic",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures"
    ]
},
{
    "contestId": 386,
    "index": "D",
    "name": "Game with Points",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 372,
    "index": "C",
    "name": "Watching Fireworks is Fun",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dp",
        "math"
    ]
},
{
    "contestId": 370,
    "index": "D",
    "name": "Broken Monitor",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 362,
    "index": "D",
    "name": "Fools and Foolproof Roads",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 356,
    "index": "C",
    "name": "Compartments",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 354,
    "index": "C",
    "name": "Vasya and Beautiful Arrays",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 348,
    "index": "B",
    "name": "Apple Tree",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 345,
    "index": "B",
    "name": "Triskaidekaphobia",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 343,
    "index": "D",
    "name": "Water Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 342,
    "index": "D",
    "name": "Xenia and Dominoes",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 340,
    "index": "B",
    "name": "Maximal Area Quadrilateral",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 336,
    "index": "D",
    "name": "Vasily the Bear and Beautiful Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 335,
    "index": "C",
    "name": "More Reclamation",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "games"
    ]
},
{
    "contestId": 333,
    "index": "D",
    "name": "Characteristics of Rectangles",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 321,
    "index": "C",
    "name": "Ciel the Commander",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 319,
    "index": "C",
    "name": "Kalila and Dimna in the Logging Industry",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 313,
    "index": "D",
    "name": "Ilya and Roads",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 309,
    "index": "B",
    "name": "Context Advertising",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 306,
    "index": "C",
    "name": "White, Black and White Again",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 306,
    "index": "B",
    "name": "Optimizer",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 301,
    "index": "B",
    "name": "Yaroslav and Time",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 295,
    "index": "C",
    "name": "Greg and Friends",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 286,
    "index": "C",
    "name": "Main Sequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 283,
    "index": "C",
    "name": "Coin Troubles",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 282,
    "index": "D",
    "name": "Yet Another Number Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 276,
    "index": "E",
    "name": "Little Girl and Problem on Trees",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 269,
    "index": "C",
    "name": "Flawed Flow",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "flows",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 268,
    "index": "E",
    "name": "Playlist",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "math",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 266,
    "index": "C",
    "name": "Below the Diagonal",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 260,
    "index": "D",
    "name": "Black and White Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 254,
    "index": "E",
    "name": "Dormitory",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 242,
    "index": "D",
    "name": "Dispute",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 238,
    "index": "C",
    "name": "World Eater Brothers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 231,
    "index": "E",
    "name": "Cactus",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 229,
    "index": "D",
    "name": "Towers",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 228,
    "index": "D",
    "name": "Zigzag",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 226,
    "index": "D",
    "name": "The table",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 225,
    "index": "E",
    "name": "Unsolvable",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 220,
    "index": "C",
    "name": "Little Elephant and Shifts",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 217,
    "index": "B",
    "name": "Blackboard Fibonacci",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 215,
    "index": "E",
    "name": "Periodical Numbers",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 215,
    "index": "C",
    "name": "Crosses",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 212,
    "index": "C",
    "name": "Cowboys",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 209,
    "index": "B",
    "name": "Pixels",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 208,
    "index": "E",
    "name": "Blood Cousins",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 207,
    "index": "D6",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 2100,
    "tags": []
},
{
    "contestId": 207,
    "index": "D4",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 2100,
    "tags": []
},
{
    "contestId": 207,
    "index": "D10",
    "name": "The Beaver's Problem - 3",
    "type": "PROGRAMMING",
    "points": 10.0,
    "rating": 2100,
    "tags": []
},
{
    "contestId": 207,
    "index": "C1",
    "name": "Game with Two Trees",
    "type": "PROGRAMMING",
    "points": 20.0,
    "rating": 2100,
    "tags": []
},
{
    "contestId": 190,
    "index": "E",
    "name": "Counter Attack",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "hashing",
        "sortings"
    ]
},
{
    "contestId": 178,
    "index": "D3",
    "name": "Magic Squares",
    "type": "PROGRAMMING",
    "points": 50.0,
    "rating": 2100,
    "tags": []
},
{
    "contestId": 166,
    "index": "B",
    "name": "Polygons",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2100,
    "tags": [
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 165,
    "index": "D",
    "name": "Beard Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "dsu",
        "trees"
    ]
},
{
    "contestId": 163,
    "index": "C",
    "name": "Conveyor",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 153,
    "index": "E",
    "name": "Euclidean Distance",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 145,
    "index": "C",
    "name": "Lucky Subsequence",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 132,
    "index": "D",
    "name": "Constants in the language of Shakespeare",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 132,
    "index": "B",
    "name": "Piet",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 128,
    "index": "B",
    "name": "String",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "constructive algorithms",
        "hashing",
        "implementation",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 111,
    "index": "C",
    "name": "Petya and Spiders",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "bitmasks",
        "dp",
        "dsu"
    ]
},
{
    "contestId": 106,
    "index": "E",
    "name": "Space Rescuers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 103,
    "index": "D",
    "name": "Time to Raid Cowavans",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 100,
    "index": "H",
    "name": "Battleship",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "*special",
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 81,
    "index": "D",
    "name": "Polycarp's Picture Gallery",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 77,
    "index": "C",
    "name": "Beavermuncher-0xFF",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 76,
    "index": "B",
    "name": "Mice",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 74,
    "index": "C",
    "name": "Chessboard Billiard",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "number theory"
    ]
},
{
    "contestId": 65,
    "index": "C",
    "name": "Harry Potter and the Golden Snitch",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "geometry"
    ]
},
{
    "contestId": 60,
    "index": "C",
    "name": "Mushroom Strife",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dfs and similar"
    ]
},
{
    "contestId": 56,
    "index": "D",
    "name": "Changing a String",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 54,
    "index": "D",
    "name": "Writing a Song",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "brute force",
        "dp",
        "strings"
    ]
},
{
    "contestId": 50,
    "index": "D",
    "name": "Bombing",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "binary search",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 48,
    "index": "E",
    "name": "Ivan the Fool VS Gorynych the Dragon",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "games",
        "graphs"
    ]
},
{
    "contestId": 45,
    "index": "H",
    "name": "Road Problem",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 39,
    "index": "C",
    "name": "Moon Craters",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "sortings"
    ]
},
{
    "contestId": 38,
    "index": "F",
    "name": "Smart Boy",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "dp",
        "games",
        "strings"
    ]
},
{
    "contestId": 35,
    "index": "E",
    "name": "Parade",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 12,
    "index": "E",
    "name": "Start of the session",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 5,
    "index": "D",
    "name": "Follow Traffic Rules",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1,
    "index": "C",
    "name": "Ancient Berland Circus",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "geometry",
        "math"
    ]
}
]
