[
{
    "contestId": 1946,
    "index": "E",
    "name": "Girl Permutation",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1938,
    "index": "E",
    "name": "Duplicates",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": []
},
{
    "contestId": 1926,
    "index": "F",
    "name": "Vlad and Avoiding X",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1921,
    "index": "G",
    "name": "Mischievous Shooter",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1918,
    "index": "E",
    "name": "ace5 and Task Order",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "implementation",
        "interactive",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 1912,
    "index": "E",
    "name": "Evaluate It and Back Again",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1909,
    "index": "F1",
    "name": "Small Permutation Problem (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1907,
    "index": "G",
    "name": "Lights",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1906,
    "index": "H",
    "name": "Twin Friends",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1901,
    "index": "E",
    "name": "Compressed Tree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1898,
    "index": "E",
    "name": "Sofia and Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1867,
    "index": "E2",
    "name": "Salyg1n and Array (hard version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1860,
    "index": "D",
    "name": "Balanced String",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1858,
    "index": "D",
    "name": "Trees and Segments",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1854,
    "index": "B",
    "name": "Earn or Unlock",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1848,
    "index": "D",
    "name": "Vika and Bonuses",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1841,
    "index": "E",
    "name": "Fill the Matrix",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1840,
    "index": "G1",
    "name": "In Search of Truth (Easy Version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "meet-in-the-middle",
        "probabilities"
    ]
},
{
    "contestId": 1840,
    "index": "F",
    "name": "Railguns",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1837,
    "index": "E",
    "name": "Playoff Fixing",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "trees"
    ]
},
{
    "contestId": 1832,
    "index": "E",
    "name": "Combinatorics Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1822,
    "index": "G2",
    "name": "Magic Triples (Hard Version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1815,
    "index": "C",
    "name": "Between",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1811,
    "index": "G2",
    "name": "Vlad and the Nice Paths (hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "combinatorics",
        "data structures",
        "dp",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1808,
    "index": "E1",
    "name": "Minibuses on Venus (easy version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1806,
    "index": "E",
    "name": "Tree Master",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1800,
    "index": "G",
    "name": "Symmetree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "hashing",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1795,
    "index": "E",
    "name": "Explosions?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1789,
    "index": "D",
    "name": "Serval and Shift-Shift-Shift",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "implementation"
    ]
},
{
    "contestId": 1788,
    "index": "E",
    "name": "Sum Over Zero",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1784,
    "index": "C",
    "name": "Monsters (hard version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1777,
    "index": "E",
    "name": "Edge Reverse",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1776,
    "index": "B",
    "name": "Vittorio Plays with LEGO Bricks",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 1773,
    "index": "B",
    "name": "BinCoin",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "divide and conquer",
        "hashing",
        "implementation",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1772,
    "index": "G",
    "name": "Gaining Rating",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "greedy",
        "implementation",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1769,
    "index": "D2",
    "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 II",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "brute force"
    ]
},
{
    "contestId": 1765,
    "index": "H",
    "name": "Hospital Queue",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1765,
    "index": "F",
    "name": "Chemistry Lab",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "geometry",
        "probabilities"
    ]
},
{
    "contestId": 1763,
    "index": "E",
    "name": "Node Pairs",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "graphs",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1763,
    "index": "D",
    "name": "Valid Bitonic Permutations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1741,
    "index": "G",
    "name": "Kirill and Company",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1737,
    "index": "D",
    "name": "Ela and the Wiring Wizard",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dp",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1736,
    "index": "D",
    "name": "Equal Binary Subsequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1730,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1721,
    "index": "E",
    "name": "Prefix Function Queries",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "hashing",
        "string suffix structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1717,
    "index": "E",
    "name": "Madoka and The Best University",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1704,
    "index": "E",
    "name": "Count Seconds",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "graphs",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1695,
    "index": "D1",
    "name": "Tree Queries (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1672,
    "index": "E",
    "name": "notepad.exe",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1670,
    "index": "E",
    "name": "Hemose on the Tree",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1666,
    "index": "I",
    "name": "Interactive Treasure Hunt",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "geometry",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1666,
    "index": "F",
    "name": "Fancy Stack",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1659,
    "index": "E",
    "name": "AND-MEX Walk",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1657,
    "index": "E",
    "name": "Star MST",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "graph matchings",
        "math"
    ]
},
{
    "contestId": 1656,
    "index": "E",
    "name": "Equal Tree Sums",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "math",
        "trees"
    ]
},
{
    "contestId": 1650,
    "index": "F",
    "name": "Vitaly and Advanced Useless Algorithms",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1646,
    "index": "E",
    "name": "Power Board",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1641,
    "index": "C",
    "name": "Anonymity Is Important",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1635,
    "index": "E",
    "name": "Cars ",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "2-sat",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1630,
    "index": "C",
    "name": "Paint the Middle",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1627,
    "index": "E",
    "name": "Not Escaping",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "implementation",
        "shortest paths",
        "two pointers"
    ]
},
{
    "contestId": 1622,
    "index": "E",
    "name": "Math Test",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1618,
    "index": "G",
    "name": "Trader Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1616,
    "index": "E",
    "name": "Lexicographically Small Enough",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1615,
    "index": "D",
    "name": "X(or)-mas Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1607,
    "index": "H",
    "name": "Banquet Preparations 2",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1607,
    "index": "G",
    "name": "Banquet Preparations 1",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1593,
    "index": "G",
    "name": "Changing Brackets",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1583,
    "index": "E",
    "name": "Moment of Bloom",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1580,
    "index": "C",
    "name": "Train Maintenance",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1579,
    "index": "G",
    "name": "Minimal Coverage",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1575,
    "index": "K",
    "name": "Knitting Batik",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 1575,
    "index": "H",
    "name": "Holiday Wall Ornaments",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1575,
    "index": "G",
    "name": "GCD Festival",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1567,
    "index": "E",
    "name": "Non-Decreasing Dilemma",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 1562,
    "index": "D2",
    "name": "Two Hundred Twenty One (hard version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 1559,
    "index": "E",
    "name": "Mocha and Stars",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1557,
    "index": "D",
    "name": "Ezzat and Grid",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1556,
    "index": "E",
    "name": "Equilibrium",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1552,
    "index": "F",
    "name": "Telepanting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "sortings"
    ]
},
{
    "contestId": 1551,
    "index": "F",
    "name": "Equidistant Vertices",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1543,
    "index": "D2",
    "name": "RPD and Rap Sheet (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1542,
    "index": "D",
    "name": "Priority Queue",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 1537,
    "index": "F",
    "name": "Figure Fixing",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1537,
    "index": "E2",
    "name": "Erase and Extend (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "hashing",
        "string suffix structures",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1535,
    "index": "E",
    "name": "Gold Transfer",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1526,
    "index": "D",
    "name": "Kill Anton",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "math",
        "strings"
    ]
},
{
    "contestId": 1520,
    "index": "G",
    "name": "To Go Or Not To Go?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1520,
    "index": "F2",
    "name": "Guess the K-th Zero (Hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "interactive"
    ]
},
{
    "contestId": 1515,
    "index": "E",
    "name": "Phoenix and Computers",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1505,
    "index": "I",
    "name": "Mysterious language again, seriously?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1505,
    "index": "F",
    "name": "Math",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "math"
    ]
},
{
    "contestId": 1503,
    "index": "C",
    "name": "Travelling Salesman Problem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "shortest paths",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1500,
    "index": "B",
    "name": "Two chandeliers",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "chinese remainder theorem",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1498,
    "index": "E",
    "name": "Two Houses",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "interactive",
        "sortings"
    ]
},
{
    "contestId": 1498,
    "index": "D",
    "name": "Bananas in a Microwave",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1488,
    "index": "E",
    "name": "Palindromic Doubles",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1486,
    "index": "E",
    "name": "Paired Payment",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "dp",
        "flows",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1485,
    "index": "D",
    "name": "Multiples and Power Differences",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1477,
    "index": "C",
    "name": "Nezzar and Nice Beatmap",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1474,
    "index": "D",
    "name": "Cleaning",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1470,
    "index": "D",
    "name": "Strange Housing",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1468,
    "index": "H",
    "name": "K and Medians",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1468,
    "index": "A",
    "name": "LaIS",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1467,
    "index": "D",
    "name": "Sum of Paths",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1461,
    "index": "E",
    "name": "Water Level",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "graphs",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1438,
    "index": "D",
    "name": "Powerful Ksenia",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1437,
    "index": "E",
    "name": "Make It Increasing",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1428,
    "index": "E",
    "name": "Carrots for Rabbits",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1425,
    "index": "E",
    "name": "Excitation of Atoms",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1424,
    "index": "M",
    "name": "Ancient Language",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 1415,
    "index": "E",
    "name": "New Game Plus!",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1407,
    "index": "D",
    "name": "Discrete Centrifugal Jumps",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 1406,
    "index": "D",
    "name": "Three Sequences",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1400,
    "index": "E",
    "name": "Clear the Multiset",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1399,
    "index": "E2",
    "name": "Weights Division (hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "dfs and similar",
        "greedy",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1398,
    "index": "E",
    "name": "Two Types of Spells",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1389,
    "index": "E",
    "name": "Calendar Ambiguity",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 1384,
    "index": "B2",
    "name": "Koa and the Beach (Hard Version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1373,
    "index": "E",
    "name": "Sum of Digits",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1353,
    "index": "F",
    "name": "Decreasing Heights",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 1338,
    "index": "C",
    "name": "Perfect Triples",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 1336,
    "index": "C",
    "name": "Kaavi and Magic Spell",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1335,
    "index": "F",
    "name": "Robots on a Grid",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "matrices"
    ]
},
{
    "contestId": 1334,
    "index": "E",
    "name": "Divisor Paths",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "graphs",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1333,
    "index": "F",
    "name": "Kate and imperfection",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "number theory",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1328,
    "index": "F",
    "name": "Make k Equal",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 1327,
    "index": "D",
    "name": "Infinite Path",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1311,
    "index": "E",
    "name": "Construct the Binary Tree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "trees"
    ]
},
{
    "contestId": 1305,
    "index": "E",
    "name": "Kuroni and the Score Distribution",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1303,
    "index": "E",
    "name": "Erase Subsequences",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1295,
    "index": "E",
    "name": "Permutation Separation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 1283,
    "index": "F",
    "name": "DIY Garland",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1278,
    "index": "E",
    "name": "Tests for problem D",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "divide and conquer",
        "trees"
    ]
},
{
    "contestId": 1272,
    "index": "F",
    "name": "Two Bracket Sequences",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1253,
    "index": "E",
    "name": "Antenna Coverage",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1252,
    "index": "E",
    "name": "Songwriter",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1249,
    "index": "F",
    "name": "Maximum Weight Subset",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 1238,
    "index": "F",
    "name": "The Maximum Subtree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1238,
    "index": "E",
    "name": "Keyboard Purchase",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1234,
    "index": "F",
    "name": "Yet Another Substring Reverse",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1231,
    "index": "E",
    "name": "Middle-Out",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1227,
    "index": "F1",
    "name": "Wrong Answer on test 233 (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1227,
    "index": "E",
    "name": "Arson In Berland Forest",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "graphs",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1225,
    "index": "E",
    "name": "Rock Is Push",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 1220,
    "index": "E",
    "name": "Tourism",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1216,
    "index": "E2",
    "name": "Numerical Sequence (hard version)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "math"
    ]
},
{
    "contestId": 1215,
    "index": "E",
    "name": "Marbles",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1208,
    "index": "E",
    "name": "Let Them Slide",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1196,
    "index": "F",
    "name": "K-th Path",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1194,
    "index": "E",
    "name": "Count The Rectangles",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 1184,
    "index": "C2",
    "name": "Heidi and the Turing Test (Medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1184,
    "index": "B2",
    "name": "The Doctor Meets Vader (Medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "flows",
        "graph matchings",
        "graphs",
        "shortest paths",
        "sortings"
    ]
},
{
    "contestId": 1181,
    "index": "D",
    "name": "Irrigation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1179,
    "index": "C",
    "name": "Serge and Dining Room",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "graph matchings",
        "greedy",
        "implementation",
        "math",
        "trees"
    ]
},
{
    "contestId": 1178,
    "index": "F1",
    "name": "Short Colorful Strip",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1175,
    "index": "E",
    "name": "Minimal Segment Cover",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1168,
    "index": "C",
    "name": "And Reachability",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1166,
    "index": "D",
    "name": "Cute Sequences",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1158,
    "index": "B",
    "name": "The minimal unique substring",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math",
        "strings"
    ]
},
{
    "contestId": 1157,
    "index": "G",
    "name": "Inverse of Rows and Columns",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1156,
    "index": "E",
    "name": "Special Segments of Permutation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "two pointers"
    ]
},
{
    "contestId": 1156,
    "index": "D",
    "name": "0-1-Tree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "dp",
        "dsu",
        "trees"
    ]
},
{
    "contestId": 1155,
    "index": "E",
    "name": "Guess the Root",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1154,
    "index": "G",
    "name": "Minimum Possible LCM",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1153,
    "index": "E",
    "name": "Serval and Snake",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "brute force",
        "interactive"
    ]
},
{
    "contestId": 1149,
    "index": "B",
    "name": "Three Religions",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "dp",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 1140,
    "index": "E",
    "name": "Palindrome-less Arrays",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1136,
    "index": "E",
    "name": "Nastya Hasn't Written a Legend",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1117,
    "index": "E",
    "name": "Decypher the String",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "chinese remainder theorem",
        "constructive algorithms",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1114,
    "index": "E",
    "name": "Arithmetic Progression",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "interactive",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1110,
    "index": "E",
    "name": "Magic Stones",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1110,
    "index": "D",
    "name": "Jongmah",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1105,
    "index": "E",
    "name": "Helping Hiasat ",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1100,
    "index": "E",
    "name": "Andrew and Taxi",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 1097,
    "index": "D",
    "name": "Makoto and a Blackboard",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "math",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1092,
    "index": "D2",
    "name": "Great Vova Wall (Version 2)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1092,
    "index": "D1",
    "name": "Great Vova Wall (Version 1)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1089,
    "index": "A",
    "name": "Alice the Fan",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1070,
    "index": "A",
    "name": "Find a Number",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "graphs",
        "number theory",
        "shortest paths"
    ]
},
{
    "contestId": 1065,
    "index": "D",
    "name": "Three Pieces",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "shortest paths"
    ]
},
{
    "contestId": 1059,
    "index": "D",
    "name": "Nature Reserve",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 1045,
    "index": "G",
    "name": "AI robots",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1045,
    "index": "D",
    "name": "Interstellar battle",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1039,
    "index": "C",
    "name": "Network Safety",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1037,
    "index": "E",
    "name": "Trips",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 1034,
    "index": "B",
    "name": "Little C Loves 3 II",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "flows",
        "graph matchings"
    ]
},
{
    "contestId": 1003,
    "index": "F",
    "name": "Abbreviation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 981,
    "index": "E",
    "name": "Addition on Segments",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 980,
    "index": "E",
    "name": "The Number Games",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 979,
    "index": "D",
    "name": "Kuro and GCD and XOR and SUM",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "greedy",
        "math",
        "number theory",
        "strings",
        "trees"
    ]
},
{
    "contestId": 965,
    "index": "E",
    "name": "Short Code",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 962,
    "index": "E",
    "name": "Byteland, Berland and Disputed Cities",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 958,
    "index": "E2",
    "name": "Guard Duty (medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 958,
    "index": "B2",
    "name": "Maximum Control (medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 954,
    "index": "I",
    "name": "Yet Another String Matching Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "fft",
        "math"
    ]
},
{
    "contestId": 952,
    "index": "G",
    "name": "Puzzling Language",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 946,
    "index": "E",
    "name": "Largest Beautiful Number",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 932,
    "index": "D",
    "name": "Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dp",
        "trees"
    ]
},
{
    "contestId": 926,
    "index": "H",
    "name": "Endless Roses Most Beautiful",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": []
},
{
    "contestId": 925,
    "index": "C",
    "name": "Big Secret",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 922,
    "index": "E",
    "name": "Birds",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 920,
    "index": "G",
    "name": "List Of Integers",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 916,
    "index": "D",
    "name": "Jamie and To-do List",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 915,
    "index": "D",
    "name": "Almost Acyclic Graph",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 908,
    "index": "D",
    "name": "New Year and Arbitrary Arrangement",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 906,
    "index": "B",
    "name": "Seating of Students",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 903,
    "index": "F",
    "name": "Clear The Matrix",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 903,
    "index": "E",
    "name": "Swapping Characters",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "hashing",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 903,
    "index": "D",
    "name": "Almost Difference",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 901,
    "index": "B",
    "name": "GCD of Polynomials",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 894,
    "index": "D",
    "name": "Ralph And His Tour in Binary Country",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 883,
    "index": "A",
    "name": "Automatic Door",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 875,
    "index": "D",
    "name": "High Cry",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "bitmasks",
        "combinatorics",
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 868,
    "index": "D",
    "name": "Huge Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 863,
    "index": "F",
    "name": "Almost Permutation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "flows"
    ]
},
{
    "contestId": 858,
    "index": "E",
    "name": "Tests Renumeration",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 855,
    "index": "E",
    "name": "Salazar Slytherin's Locket",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 852,
    "index": "F",
    "name": "Product transformation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 850,
    "index": "C",
    "name": "Arpa and a game with Mojtaba",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp",
        "games"
    ]
},
{
    "contestId": 847,
    "index": "D",
    "name": "Dog Show",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 839,
    "index": "D",
    "name": "Winter is here",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 833,
    "index": "B",
    "name": "The Bakery",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 821,
    "index": "D",
    "name": "Okabe and City",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 819,
    "index": "A",
    "name": "Mister B and Boring Game",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 2200,
    "tags": [
        "games",
        "greedy"
    ]
},
{
    "contestId": 815,
    "index": "B",
    "name": "Karen and Test",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 813,
    "index": "E",
    "name": "Army Creation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 809,
    "index": "B",
    "name": "Glad to see you!",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 804,
    "index": "C",
    "name": "Ice cream coloring",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "greedy"
    ]
},
{
    "contestId": 802,
    "index": "H",
    "name": "Fake News (medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "strings"
    ]
},
{
    "contestId": 802,
    "index": "E",
    "name": "Marmots (medium)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "math"
    ]
},
{
    "contestId": 785,
    "index": "E",
    "name": "Anton and Permutation",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 774,
    "index": "H",
    "name": "Repairing Of String",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "constructive algorithms"
    ]
},
{
    "contestId": 773,
    "index": "C",
    "name": "Prairie Partition",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 768,
    "index": "D",
    "name": "Jon and Orbs",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 765,
    "index": "E",
    "name": "Tree Folding",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 762,
    "index": "E",
    "name": "Radio stations",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 757,
    "index": "D",
    "name": "Felicity's Big Secret Revealed",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 756,
    "index": "C",
    "name": "Nikita and stack",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 754,
    "index": "C",
    "name": "Vladik and chat",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dp",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 746,
    "index": "F",
    "name": "Music in Car",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 743,
    "index": "E",
    "name": "Vladik and cards",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 733,
    "index": "F",
    "name": "Drivers Dissatisfaction",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 731,
    "index": "E",
    "name": "Funny Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 731,
    "index": "D",
    "name": "80-th Level Archeology",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 730,
    "index": "E",
    "name": "Award Ceremony",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 730,
    "index": "D",
    "name": "Running Over The Bridges",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 723,
    "index": "E",
    "name": "One-Way Reform",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "flows",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 713,
    "index": "B",
    "name": "Searching Rectangles",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 712,
    "index": "D",
    "name": "Memory and Scores",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 707,
    "index": "D",
    "name": "Persistent Bookcase ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 691,
    "index": "F",
    "name": "Couple Cover",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 690,
    "index": "C3",
    "name": "Brain Network (hard)",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "trees"
    ]
},
{
    "contestId": 679,
    "index": "B",
    "name": "Bear and Tower of Cubes",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 678,
    "index": "E",
    "name": "Another Sith Tournament",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 662,
    "index": "B",
    "name": "Graph Coloring",
    "type": "PROGRAMMING",
    "points": 250.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 661,
    "index": "G",
    "name": "Hungarian Notation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 653,
    "index": "D",
    "name": "Delivery Bears",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "flows",
        "graphs"
    ]
},
{
    "contestId": 650,
    "index": "C",
    "name": "Table Compression",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 645,
    "index": "E",
    "name": "Intellectual Inquiry",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 639,
    "index": "C",
    "name": "Bear and Polynomials",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "hashing",
        "implementation",
        "math"
    ]
},
{
    "contestId": 628,
    "index": "D",
    "name": "Magic Numbers",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 627,
    "index": "C",
    "name": "Package Delivery",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "greedy"
    ]
},
{
    "contestId": 622,
    "index": "E",
    "name": "Ants in Leaves",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "greedy",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 620,
    "index": "D",
    "name": "Professor GukiZ and Two Arrays",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "binary search",
        "two pointers"
    ]
},
{
    "contestId": 618,
    "index": "D",
    "name": "Hamiltonian Spanning Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graph matchings",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 617,
    "index": "E",
    "name": "XOR and Favorite Number",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 616,
    "index": "E",
    "name": "Sum of Remainders",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 612,
    "index": "E",
    "name": "Square Root of Permutation",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math"
    ]
},
{
    "contestId": 603,
    "index": "C",
    "name": "Lieges of Legendre",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "games",
        "math"
    ]
},
{
    "contestId": 593,
    "index": "C",
    "name": "Beautiful Function",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 592,
    "index": "D",
    "name": "Super M",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 590,
    "index": "C",
    "name": "Three States",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 587,
    "index": "C",
    "name": "Duff in the Army",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 575,
    "index": "G",
    "name": "Run for beer",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "shortest paths"
    ]
},
{
    "contestId": 575,
    "index": "B",
    "name": "Bribes",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 570,
    "index": "D",
    "name": "Tree Requests",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 567,
    "index": "E",
    "name": "President and Roads",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "hashing",
        "shortest paths"
    ]
},
{
    "contestId": 559,
    "index": "C",
    "name": "Gerald and Giant Chess",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 555,
    "index": "C",
    "name": "Case of Chocolate",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 553,
    "index": "C",
    "name": "Love Triangles",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 551,
    "index": "C",
    "name": "GukiZ hates Boxes",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 550,
    "index": "E",
    "name": "Brackets in Implications",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 549,
    "index": "G",
    "name": "Happy Line",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 549,
    "index": "C",
    "name": "The Game Of Parity",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "games"
    ]
},
{
    "contestId": 547,
    "index": "A",
    "name": "Mike and Frog",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 538,
    "index": "F",
    "name": "A Heap of Heaps",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "data structures",
        "math",
        "sortings"
    ]
},
{
    "contestId": 538,
    "index": "E",
    "name": "Demiurges Play Again",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 526,
    "index": "D",
    "name": "Om Nom and Necklace",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2200,
    "tags": [
        "hashing",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 520,
    "index": "E",
    "name": "Pluses everywhere",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 518,
    "index": "E",
    "name": "Arthur and Questions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "greedy",
        "implementation",
        "math",
        "ternary search"
    ]
},
{
    "contestId": 514,
    "index": "E",
    "name": "Darth Vader and Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 509,
    "index": "D",
    "name": "Restoring Numbers",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 508,
    "index": "E",
    "name": "Arthur and Brackets",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 507,
    "index": "D",
    "name": "The Maths Lecture",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 505,
    "index": "D",
    "name": "Mr. Kitayuta's Technology",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 490,
    "index": "F",
    "name": "Treeland Tour",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 486,
    "index": "E",
    "name": "LIS of Sequence",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "hashing",
        "math"
    ]
},
{
    "contestId": 476,
    "index": "E",
    "name": "Dreamoon and Strings",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 461,
    "index": "C",
    "name": "Appleman and a Sheet of Paper",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 453,
    "index": "C",
    "name": "Little Pony and Summer Sun Celebration",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 448,
    "index": "E",
    "name": "Divisors",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 440,
    "index": "D",
    "name": "Berland Federalization",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 431,
    "index": "E",
    "name": "Chemistry Experiment",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "ternary search"
    ]
},
{
    "contestId": 429,
    "index": "D",
    "name": "Tricky Function",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer",
        "geometry"
    ]
},
{
    "contestId": 427,
    "index": "D",
    "name": "Match & Catch",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 425,
    "index": "B",
    "name": "Sereja and Table ",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "greedy"
    ]
},
{
    "contestId": 420,
    "index": "D",
    "name": "Cup Trick",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 413,
    "index": "E",
    "name": "Maze 2D",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 409,
    "index": "G",
    "name": "On a plane",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "geometry"
    ]
},
{
    "contestId": 406,
    "index": "D",
    "name": "Hill Climbing",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "geometry",
        "trees"
    ]
},
{
    "contestId": 404,
    "index": "E",
    "name": "Maze 1D",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 402,
    "index": "E",
    "name": "Strictly Positive Matrix",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "graphs",
        "math"
    ]
},
{
    "contestId": 387,
    "index": "E",
    "name": "George and Cards",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 387,
    "index": "D",
    "name": "George and Interesting Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "graph matchings"
    ]
},
{
    "contestId": 385,
    "index": "D",
    "name": "Bear and Floodlight",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp",
        "geometry"
    ]
},
{
    "contestId": 382,
    "index": "D",
    "name": "Ksenia and Pawns",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 377,
    "index": "C",
    "name": "Captains Mode",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp",
        "games"
    ]
},
{
    "contestId": 369,
    "index": "E",
    "name": "Valera and Queries",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 369,
    "index": "D",
    "name": "Valera and Fools",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 366,
    "index": "E",
    "name": "Dima and Magic Guitar",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 364,
    "index": "B",
    "name": "Free Market",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 354,
    "index": "E",
    "name": "Lucky Number Representation",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 353,
    "index": "E",
    "name": "Antichain",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "dp",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 351,
    "index": "E",
    "name": "Jeff and Permutation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 350,
    "index": "E",
    "name": "Wrong Floyd",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 346,
    "index": "C",
    "name": "Number Transformation II",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "greedy",
        "math"
    ]
},
{
    "contestId": 345,
    "index": "G",
    "name": "Suffix Subgroup",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "strings"
    ]
},
{
    "contestId": 345,
    "index": "D",
    "name": "Chain Letter",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 337,
    "index": "E",
    "name": "Divisor Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 332,
    "index": "C",
    "name": "Students' Revenge",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 323,
    "index": "B",
    "name": "Tournament-graph",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 316,
    "index": "G2",
    "name": "Good Substrings",
    "type": "PROGRAMMING",
    "points": 40.0,
    "rating": 2200,
    "tags": [
        "string suffix structures"
    ]
},
{
    "contestId": 316,
    "index": "F3",
    "name": "Suns and Rays",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 316,
    "index": "F1",
    "name": "Suns and Rays",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 316,
    "index": "C1",
    "name": "Tidying Up",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2200,
    "tags": [
        "flows"
    ]
},
{
    "contestId": 305,
    "index": "D",
    "name": "Olya and Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 301,
    "index": "D",
    "name": "Yaroslav and Divisors",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 286,
    "index": "B",
    "name": "Shifting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 282,
    "index": "E",
    "name": "Sausage Maximization",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 280,
    "index": "C",
    "name": "Game on Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "implementation",
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 279,
    "index": "D",
    "name": "The Minimum Number of Variables",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 274,
    "index": "D",
    "name": "Lovely Matrix",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 272,
    "index": "E",
    "name": "Dima and Horses",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "graphs"
    ]
},
{
    "contestId": 271,
    "index": "E",
    "name": "Three Horses",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "math",
        "number theory"
    ]
},
{
    "contestId": 257,
    "index": "E",
    "name": "Greedy Elevator",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 255,
    "index": "E",
    "name": "Furlo and Rublo and Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "games",
        "implementation",
        "math"
    ]
},
{
    "contestId": 253,
    "index": "E",
    "name": "Printer",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 245,
    "index": "G",
    "name": "Suggested Friends",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "brute force",
        "graphs"
    ]
},
{
    "contestId": 243,
    "index": "C",
    "name": "Colorado Potato Beetle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 225,
    "index": "D",
    "name": "Snake",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 219,
    "index": "E",
    "name": "Parking Lot",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 207,
    "index": "C2",
    "name": "Game with Two Trees",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2200,
    "tags": []
},
{
    "contestId": 196,
    "index": "C",
    "name": "Paint Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "geometry",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 191,
    "index": "E",
    "name": "Thwarting Demonstrations",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "trees"
    ]
},
{
    "contestId": 183,
    "index": "C",
    "name": "Cyclic Coloring",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar"
    ]
},
{
    "contestId": 182,
    "index": "A",
    "name": "Battlefield",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "geometry",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 178,
    "index": "F2",
    "name": "Representative Sampling",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2200,
    "tags": [
        "dp",
        "sortings",
        "strings"
    ]
},
{
    "contestId": 172,
    "index": "E",
    "name": "BHTML+BCSS",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "*special",
        "dfs and similar",
        "expression parsing"
    ]
},
{
    "contestId": 165,
    "index": "E",
    "name": "Compatible Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "brute force",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 153,
    "index": "C",
    "name": "Caesar Cipher",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 150,
    "index": "C",
    "name": "Smart Cheater",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 144,
    "index": "E",
    "name": "Competition",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 138,
    "index": "C",
    "name": "Mushroom Gnomes - 2",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "probabilities",
        "sortings"
    ]
},
{
    "contestId": 134,
    "index": "C",
    "name": "Swaps",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 125,
    "index": "D",
    "name": "Two progressions",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 120,
    "index": "I",
    "name": "Luck is in Numbers",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 115,
    "index": "C",
    "name": "Plumber",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "math"
    ]
},
{
    "contestId": 113,
    "index": "C",
    "name": "Double Happiness",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 105,
    "index": "C",
    "name": "Item World",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 98,
    "index": "B",
    "name": "Help King",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "implementation",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 97,
    "index": "E",
    "name": "Leaders",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 86,
    "index": "D",
    "name": "Powerful array",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "implementation",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 86,
    "index": "B",
    "name": "Tetris revisited",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2200,
    "tags": [
        "constructive algorithms",
        "graph matchings",
        "greedy",
        "math"
    ]
},
{
    "contestId": 85,
    "index": "C",
    "name": "Petya and Tree",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "dfs and similar",
        "probabilities",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 76,
    "index": "A",
    "name": "Gift",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dsu",
        "graphs",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 73,
    "index": "D",
    "name": "FreeDiv",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 72,
    "index": "B",
    "name": "INI-file",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 71,
    "index": "E",
    "name": "Nuclear Fusion",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 71,
    "index": "D",
    "name": "Solitaire",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 70,
    "index": "C",
    "name": "Lucky Tickets",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 68,
    "index": "C",
    "name": "Synchrophasotron",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 65,
    "index": "D",
    "name": "Harry Potter and the Sorting Hat",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "dfs and similar",
        "hashing"
    ]
},
{
    "contestId": 64,
    "index": "G",
    "name": "Path Canonization",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 56,
    "index": "E",
    "name": "Domino Principle",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "binary search",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 52,
    "index": "C",
    "name": "Circular RMQ",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 51,
    "index": "D",
    "name": "Geometrical problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 47,
    "index": "E",
    "name": "Cannon",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2200,
    "tags": [
        "data structures",
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 47,
    "index": "D",
    "name": "Safe",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 45,
    "index": "G",
    "name": "Prime Problem",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 45,
    "index": "B",
    "name": "School",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "dsu"
    ]
},
{
    "contestId": 42,
    "index": "C",
    "name": "Safe cracking",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 36,
    "index": "C",
    "name": "Bowls",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 28,
    "index": "C",
    "name": "Bath Queue",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2200,
    "tags": [
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 27,
    "index": "D",
    "name": "Ring Road 2",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2200,
    "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 25,
    "index": "E",
    "name": "Test",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "hashing",
        "strings"
    ]
},
{
    "contestId": 19,
    "index": "C",
    "name": "Deletion of Repeats",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "greedy",
        "hashing",
        "string suffix structures"
    ]
},
{
    "contestId": 13,
    "index": "C",
    "name": "Sequence",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "dp",
        "sortings"
    ]
},
{
    "contestId": 11,
    "index": "D",
    "name": "A Simple Task",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "bitmasks",
        "dp",
        "graphs"
    ]
},
{
    "contestId": 11,
    "index": "C",
    "name": "How Many Squares?",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 7,
    "index": "D",
    "name": "Palindrome Degree",
    "type": "PROGRAMMING",
    "rating": 2200,
    "tags": [
        "hashing",
        "strings"
    ]
}
]
