[
{
    "contestId": 1948,
    "index": "F",
    "name": "Rare Coins",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1946,
    "index": "F",
    "name": "Nobody is needed",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "2-sat",
        "data structures",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1945,
    "index": "G",
    "name": "Cook and Porridge",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 1922,
    "index": "F",
    "name": "Replace on Segment",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "graph matchings"
    ]
},
{
    "contestId": 1920,
    "index": "F1",
    "name": "Smooth Sailing (Easy Version)",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1918,
    "index": "F",
    "name": "Caterpillar on a Tree",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy",
        "implementation",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1917,
    "index": "F",
    "name": "Construct Tree",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1917,
    "index": "E",
    "name": "Construct Matrix",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 1909,
    "index": "F2",
    "name": "Small Permutation Problem (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1906,
    "index": "L",
    "name": "Palindromic Parentheses",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1906,
    "index": "K",
    "name": "Deck-Building Game",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 1904,
    "index": "E",
    "name": "Tree Queries",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1903,
    "index": "F",
    "name": "Babysitting",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "2-sat",
        "binary search",
        "data structures",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1903,
    "index": "D2",
    "name": "Maximum And Queries (hard version)",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1891,
    "index": "E",
    "name": "Brukhovich and Exams",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "greedy",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1876,
    "index": "D",
    "name": "Lexichromatography",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs",
        "two pointers"
    ]
},
{
    "contestId": 1866,
    "index": "K",
    "name": "Keen Tree Calculation",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "geometry",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1859,
    "index": "E",
    "name": "Maximum Monogonosity",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "math"
    ]
},
{
    "contestId": 1858,
    "index": "E1",
    "name": "Rollbacks (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1854,
    "index": "C",
    "name": "Expected Destruction",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1847,
    "index": "F",
    "name": "The Boss's Identity",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "dfs and similar",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1845,
    "index": "E",
    "name": "Boxes and Balls",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1842,
    "index": "F",
    "name": "Tenzing and Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "greedy",
        "shortest paths",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1840,
    "index": "G2",
    "name": "In Search of Truth (Hard Version)",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "interactive",
        "math",
        "meet-in-the-middle",
        "probabilities"
    ]
},
{
    "contestId": 1838,
    "index": "E",
    "name": "Count Supersequences",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1835,
    "index": "B",
    "name": "Lottery",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "greedy",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1834,
    "index": "F",
    "name": "Typewriter",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1824,
    "index": "C",
    "name": "LuoTianyi and XOR-Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1823,
    "index": "E",
    "name": "Removing Graph",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "games",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1814,
    "index": "D",
    "name": "Balancing Weapons",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1809,
    "index": "F",
    "name": "Traveling in Berland",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1808,
    "index": "E2",
    "name": "Minibuses on Venus (medium version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp",
        "matrices"
    ]
},
{
    "contestId": 1806,
    "index": "D",
    "name": "DSU Master",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "dsu",
        "math"
    ]
},
{
    "contestId": 1798,
    "index": "F",
    "name": "Gifts from Grandfather Ahmed",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1796,
    "index": "E",
    "name": "Colored Subgraphs",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "games",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1789,
    "index": "E",
    "name": "Serval and Music Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1788,
    "index": "F",
    "name": "XOR, Tree, and Queries",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1787,
    "index": "F",
    "name": "Inverse Transformation",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1783,
    "index": "F",
    "name": "Double Sort II",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "flows",
        "graph matchings",
        "graphs"
    ]
},
{
    "contestId": 1779,
    "index": "F",
    "name": "Xorcerer's Stones",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1778,
    "index": "E",
    "name": "The Tree Has Fallen!",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "math",
        "trees"
    ]
},
{
    "contestId": 1776,
    "index": "J",
    "name": "Italian Data Centers",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1776,
    "index": "I",
    "name": "Spinach Pizza",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "games",
        "geometry",
        "greedy",
        "interactive"
    ]
},
{
    "contestId": 1776,
    "index": "C",
    "name": "Library game",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "games",
        "greedy",
        "interactive",
        "sortings"
    ]
},
{
    "contestId": 1775,
    "index": "F",
    "name": "Laboratory on Pluto",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1773,
    "index": "I",
    "name": "Interactive Factorial Guessing",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "games",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1771,
    "index": "F",
    "name": "Hossam and Range Minimum Query",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "data structures",
        "hashing",
        "probabilities",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1771,
    "index": "E",
    "name": "Hossam and a Letter",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1767,
    "index": "E",
    "name": "Algebra Flash",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "graphs",
        "math",
        "meet-in-the-middle",
        "trees"
    ]
},
{
    "contestId": 1764,
    "index": "F",
    "name": "Doremy's Experimental Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 1758,
    "index": "E",
    "name": "Tick, Tock",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1746,
    "index": "E1",
    "name": "Joking (Easy Version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "interactive",
        "ternary search"
    ]
},
{
    "contestId": 1737,
    "index": "E",
    "name": "Ela Goes Hiking",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1734,
    "index": "F",
    "name": "Zeros and Ones",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "math"
    ]
},
{
    "contestId": 1731,
    "index": "F",
    "name": "Function Sum",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1725,
    "index": "K",
    "name": "Kingdom of Criticism",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "dsu"
    ]
},
{
    "contestId": 1725,
    "index": "J",
    "name": "Journey",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 1725,
    "index": "E",
    "name": "Electrical Efficiency",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "data structures",
        "dp",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1717,
    "index": "F",
    "name": "Madoka and The First Session",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "flows",
        "graph matchings",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1716,
    "index": "F",
    "name": "Bags with Balls",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1716,
    "index": "E",
    "name": "Swap and Maximum Block",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1712,
    "index": "E2",
    "name": "LCM Sum (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1710,
    "index": "C",
    "name": "XOR Triangle",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dp",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1709,
    "index": "F",
    "name": "Multiset of Strings",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "fft",
        "flows",
        "graphs",
        "math",
        "meet-in-the-middle",
        "trees"
    ]
},
{
    "contestId": 1701,
    "index": "F",
    "name": "Points",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "data structures",
        "implementation",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1701,
    "index": "E",
    "name": "Text Editor",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1691,
    "index": "F",
    "name": "K-Set Tree",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "dp",
        "math",
        "trees"
    ]
},
{
    "contestId": 1689,
    "index": "E",
    "name": "ANDfinity",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1687,
    "index": "C",
    "name": "Sanae and Giant Robot",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dsu",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1677,
    "index": "D",
    "name": "Tokitsukaze and Permutations",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 1673,
    "index": "E",
    "name": "Power or XOR?",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1666,
    "index": "E",
    "name": "Even Split",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1665,
    "index": "E",
    "name": "MinimizOR",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "divide and conquer",
        "greedy",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1661,
    "index": "E",
    "name": "Narrow Components",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "dsu",
        "math",
        "trees"
    ]
},
{
    "contestId": 1658,
    "index": "E",
    "name": "Gojou and Matrix Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dp",
        "games",
        "hashing",
        "implementation",
        "math",
        "number theory",
        "sortings"
    ]
},
{
    "contestId": 1647,
    "index": "E",
    "name": "Madoka and the Sixth-graders",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "greedy"
    ]
},
{
    "contestId": 1637,
    "index": "F",
    "name": "Towers",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1625,
    "index": "E1",
    "name": "Cats on the Upgrade (easy version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "dfs and similar",
        "divide and conquer",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1623,
    "index": "E",
    "name": "Middle Duplication",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "greedy",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1612,
    "index": "G",
    "name": "Max Sum Array",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1611,
    "index": "G",
    "name": "Robot and Candies",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 1585,
    "index": "G",
    "name": "Poachers",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "games",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1583,
    "index": "F",
    "name": "Defender of Childhood Dreams",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "divide and conquer"
    ]
},
{
    "contestId": 1574,
    "index": "E",
    "name": "Coloring",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1572,
    "index": "B",
    "name": "Xor of 3",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1571,
    "index": "G",
    "name": "A Battle Against a Dragon",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1562,
    "index": "E",
    "name": "Rescue Niwen!",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "dp",
        "greedy",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1559,
    "index": "D2",
    "name": "Mocha and Diana (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 1556,
    "index": "F",
    "name": "Sports Betting",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "graphs",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1550,
    "index": "E",
    "name": "Stringforces",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "dp",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1548,
    "index": "C",
    "name": "The Three Little Pigs",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1539,
    "index": "E",
    "name": "Game with Cards",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures",
        "dp",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1534,
    "index": "F1",
    "name": "Falling Sand (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1528,
    "index": "D",
    "name": "It's a bird! No, it's a plane! No, it's AaParsa!",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 1527,
    "index": "E",
    "name": "Partition Game",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1521,
    "index": "D",
    "name": "Nastia Plays with a Tree",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "data structures",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1517,
    "index": "E",
    "name": "Group Photo",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 1516,
    "index": "E",
    "name": "Baby Ehab Plays with Permutations",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1513,
    "index": "F",
    "name": "Swapping Problem",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 1508,
    "index": "C",
    "name": "Complete the MST",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1505,
    "index": "H",
    "name": "L BREAK into program",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 1498,
    "index": "F",
    "name": "Christmas Game",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "data structures",
        "dfs and similar",
        "dp",
        "games",
        "math",
        "trees"
    ]
},
{
    "contestId": 1497,
    "index": "E2",
    "name": "Square-free division (hard version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1497,
    "index": "D",
    "name": "Genius",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "number theory"
    ]
},
{
    "contestId": 1492,
    "index": "E",
    "name": "Almost Fault-Tolerant Database",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1488,
    "index": "G",
    "name": "Painting Numbers",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "data structures",
        "greedy",
        "number theory"
    ]
},
{
    "contestId": 1485,
    "index": "E",
    "name": "Move and Swap",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1481,
    "index": "E",
    "name": "Sorting Books",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1479,
    "index": "C",
    "name": "Continuous City",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms"
    ]
},
{
    "contestId": 1474,
    "index": "E",
    "name": "What Is It?",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1470,
    "index": "C",
    "name": "Strange Shuffle",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1468,
    "index": "I",
    "name": "Plane Tiling",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "geometry",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1468,
    "index": "G",
    "name": "Hobbits",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "geometry"
    ]
},
{
    "contestId": 1467,
    "index": "E",
    "name": "Distinctive Roots in a Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1452,
    "index": "E",
    "name": "Two Editorials",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1444,
    "index": "C",
    "name": "Team-Building",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1438,
    "index": "E",
    "name": "Yurii Can Do Everything",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "divide and conquer",
        "two pointers"
    ]
},
{
    "contestId": 1427,
    "index": "E",
    "name": "Xum",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "math",
        "matrices",
        "number theory"
    ]
},
{
    "contestId": 1423,
    "index": "H",
    "name": "Virus",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1420,
    "index": "E",
    "name": "Battle Lemmings",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1418,
    "index": "G",
    "name": "Three Occurrences",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "hashing",
        "two pointers"
    ]
},
{
    "contestId": 1407,
    "index": "E",
    "name": "Egor in the Republic of Dagestan",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 1398,
    "index": "F",
    "name": "Controversial Rounds",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1387,
    "index": "B2",
    "name": "Village (Maximum)",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 1381,
    "index": "C",
    "name": "Mastermind",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "graph matchings",
        "greedy",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1375,
    "index": "E",
    "name": "Inversion SwapSort",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1374,
    "index": "E2",
    "name": "Reading Books (hard version)",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "greedy",
        "implementation",
        "sortings",
        "ternary search",
        "two pointers"
    ]
},
{
    "contestId": 1368,
    "index": "E",
    "name": "Ski Accidents",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1361,
    "index": "C",
    "name": "Johnny and Megan's Necklace",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 1354,
    "index": "F",
    "name": "Summoning Minions",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dp",
        "flows",
        "graph matchings",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1334,
    "index": "F",
    "name": "Strange Function",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1332,
    "index": "F",
    "name": "Independent Set",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1327,
    "index": "F",
    "name": "AND Segments",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "data structures",
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 1325,
    "index": "F",
    "name": "Ehab's Last Theorem",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1320,
    "index": "D",
    "name": "Reachable Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1313,
    "index": "D",
    "name": "Happy New Year",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1312,
    "index": "F",
    "name": "Attack on Red Kingdom",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "games",
        "two pointers"
    ]
},
{
    "contestId": 1310,
    "index": "B",
    "name": "Double Elimination",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1307,
    "index": "E",
    "name": "Cow and Treats",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "combinatorics",
        "dp",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1305,
    "index": "F",
    "name": "Kuroni and the Punishment",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "math",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1301,
    "index": "E",
    "name": "Nanosoft",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 1284,
    "index": "E",
    "name": "New Year and Castle Construction",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "geometry",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1280,
    "index": "D",
    "name": "Miss Punyverse",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1253,
    "index": "F",
    "name": "Cheap Robot",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "dsu",
        "graphs",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1251,
    "index": "F",
    "name": "Red-White Fence",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "fft"
    ]
},
{
    "contestId": 1250,
    "index": "M",
    "name": "SmartGarden",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "divide and conquer"
    ]
},
{
    "contestId": 1239,
    "index": "B",
    "name": "The World Is Just a Programming Task (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2500,
    "tags": [
        "implementation"
    ]
},
{
    "contestId": 1236,
    "index": "E",
    "name": "Alice and the Unfair Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "dsu"
    ]
},
{
    "contestId": 1228,
    "index": "F",
    "name": "One Node is Gone",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1225,
    "index": "F",
    "name": "Tree Factory",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1221,
    "index": "E",
    "name": "Game With String",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "games"
    ]
},
{
    "contestId": 1218,
    "index": "E",
    "name": "Product Tuples",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "fft"
    ]
},
{
    "contestId": 1211,
    "index": "G",
    "name": "King's Path",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "math",
        "trees"
    ]
},
{
    "contestId": 1209,
    "index": "E2",
    "name": "Rotate Columns (hard version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1198,
    "index": "E",
    "name": "Rectangle Painting 2",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "flows",
        "graph matchings",
        "graphs"
    ]
},
{
    "contestId": 1195,
    "index": "F",
    "name": "Geometers Anonymous Club",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "geometry",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1188,
    "index": "C",
    "name": "Array Beauty",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1188,
    "index": "A2",
    "name": "Add on a Tree: Revolution",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1187,
    "index": "G",
    "name": "Gang Up",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 1187,
    "index": "F",
    "name": "Expected Square Beauty",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1186,
    "index": "E",
    "name": "Vus the Cossack and a Field",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1181,
    "index": "E1",
    "name": "A Story of One Country (Easy)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "divide and conquer",
        "sortings"
    ]
},
{
    "contestId": 1175,
    "index": "F",
    "name": "The Number of Subpermutations",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "hashing",
        "math"
    ]
},
{
    "contestId": 1174,
    "index": "E",
    "name": "Ehab and the Expected GCD Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1146,
    "index": "F",
    "name": "Leaf Partition",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2500,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 1139,
    "index": "F",
    "name": "Dish Shopping",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 1137,
    "index": "C",
    "name": "Museums Tour",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 1120,
    "index": "D",
    "name": "Power Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1117,
    "index": "G",
    "name": "Recursive Queries",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1117,
    "index": "F",
    "name": "Crisp String",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 1111,
    "index": "E",
    "name": "Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1100,
    "index": "F",
    "name": "Ivan and Burgers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1100,
    "index": "D",
    "name": "Dasha and Chess",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "games",
        "interactive"
    ]
},
{
    "contestId": 1097,
    "index": "F",
    "name": "Alex and a TV Show",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "number theory"
    ]
},
{
    "contestId": 1096,
    "index": "E",
    "name": "The Top Scorer",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1090,
    "index": "G",
    "name": "Combostone",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "games",
        "implementation"
    ]
},
{
    "contestId": 1089,
    "index": "C",
    "name": "Cactus Search",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "interactive"
    ]
},
{
    "contestId": 1085,
    "index": "F",
    "name": "Rock-Paper-Scissors Champion",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": []
},
{
    "contestId": 1076,
    "index": "F",
    "name": "Summer Practice Report",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1073,
    "index": "F",
    "name": "Choosing Two Paths",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1065,
    "index": "F",
    "name": "Up and Down the Tree",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1056,
    "index": "F",
    "name": "Write The Contest",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "dp",
        "math"
    ]
},
{
    "contestId": 1055,
    "index": "E",
    "name": "Segments on the Line",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "dp"
    ]
},
{
    "contestId": 1045,
    "index": "A",
    "name": "Last chance",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "flows",
        "graph matchings",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1043,
    "index": "F",
    "name": "Make It One",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "shortest paths"
    ]
},
{
    "contestId": 1041,
    "index": "F",
    "name": "Ray in the tube",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "math"
    ]
},
{
    "contestId": 1037,
    "index": "F",
    "name": "Maximum Reduction",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "data structures",
        "math"
    ]
},
{
    "contestId": 1030,
    "index": "F",
    "name": "Putting Boxes Together",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 1017,
    "index": "F",
    "name": "The Neutral Zone",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 997,
    "index": "C",
    "name": "Sky Full of Stars",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 995,
    "index": "D",
    "name": "Game",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "math"
    ]
},
{
    "contestId": 993,
    "index": "D",
    "name": "Compute Power",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 992,
    "index": "E",
    "name": "Nastya and King-Shamans",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 989,
    "index": "D",
    "name": "A Shade of Moonlight",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "geometry",
        "math",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 986,
    "index": "C",
    "name": "AND Graph",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 981,
    "index": "G",
    "name": "Magic multisets",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 981,
    "index": "F",
    "name": "Round Marriage",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 976,
    "index": "F",
    "name": "Minimal k-covering",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 976,
    "index": "D",
    "name": "Degree Set",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 963,
    "index": "D",
    "name": "Frequency of String",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "hashing",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 958,
    "index": "C3",
    "name": "Encryption (hard)",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 954,
    "index": "H",
    "name": "Path Counting",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 946,
    "index": "G",
    "name": "Almost Increasing Array",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 930,
    "index": "D",
    "name": "Game with Tokens",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "games",
        "implementation"
    ]
},
{
    "contestId": 924,
    "index": "D",
    "name": "Contact ATC",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": []
},
{
    "contestId": 923,
    "index": "D",
    "name": "Picking Strings",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "implementation",
        "strings"
    ]
},
{
    "contestId": 912,
    "index": "C",
    "name": "Perun, Ult!",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 911,
    "index": "G",
    "name": "Mass Change Queries",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 909,
    "index": "F",
    "name": "AND-permutations",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 908,
    "index": "E",
    "name": "New Year and Entity Enumeration",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 888,
    "index": "F",
    "name": "Connecting Vertices",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 887,
    "index": "F",
    "name": "Row of Models",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 884,
    "index": "F",
    "name": "Anti-Palindromize",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "flows",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 884,
    "index": "E",
    "name": "Binary Matrix",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dsu"
    ]
},
{
    "contestId": 883,
    "index": "L",
    "name": "Berland.Taxi",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 883,
    "index": "D",
    "name": "Packmen Strike Back",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "dp",
        "math"
    ]
},
{
    "contestId": 875,
    "index": "F",
    "name": "Royal Questions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dsu",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 868,
    "index": "F",
    "name": "Yet Another Minimization Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 855,
    "index": "D",
    "name": "Rowena Ravenclaw's Diadem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "trees"
    ]
},
{
    "contestId": 852,
    "index": "A",
    "name": "Digits",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "brute force",
        "implementation",
        "math"
    ]
},
{
    "contestId": 845,
    "index": "F",
    "name": "Guards In The Storehouse",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 840,
    "index": "D",
    "name": "Destiny",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "probabilities"
    ]
},
{
    "contestId": 840,
    "index": "C",
    "name": "On the Bench",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 837,
    "index": "G",
    "name": "Functions On The Segments",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 835,
    "index": "F",
    "name": "Roads in the Kingdom",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 832,
    "index": "C",
    "name": "Strange Radiation",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 825,
    "index": "G",
    "name": "Tree Queries",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 822,
    "index": "F",
    "name": "Madness",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "trees"
    ]
},
{
    "contestId": 813,
    "index": "F",
    "name": "Bipartite Checking",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 804,
    "index": "D",
    "name": "Expected diameter of a tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "dfs and similar",
        "dp",
        "sortings",
        "trees"
    ]
},
{
    "contestId": 799,
    "index": "E",
    "name": "Aquarium decoration",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 792,
    "index": "E",
    "name": "Colored Balls",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 778,
    "index": "C",
    "name": "Peterson Polyglot",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dfs and similar",
        "dsu",
        "hashing",
        "strings",
        "trees"
    ]
},
{
    "contestId": 771,
    "index": "D",
    "name": "Bear and Company",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 757,
    "index": "E",
    "name": "Bash Plays with Functions",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "number theory"
    ]
},
{
    "contestId": 753,
    "index": "C",
    "name": "Interactive Bulls and Cows (Hard)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 747,
    "index": "F",
    "name": "Igor and Interesting Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 739,
    "index": "C",
    "name": "Alyona and towers",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 735,
    "index": "E",
    "name": "Ostap and Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 734,
    "index": "F",
    "name": "Anton and School",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "implementation",
        "math"
    ]
},
{
    "contestId": 729,
    "index": "F",
    "name": "Financiers Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 712,
    "index": "E",
    "name": "Memory and Casinos",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 710,
    "index": "D",
    "name": "Two Arithmetic Progressions",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 706,
    "index": "E",
    "name": "Working routine",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 704,
    "index": "B",
    "name": "Ant Man",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2500,
    "tags": [
        "dp",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 696,
    "index": "D",
    "name": "Legen...",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dp",
        "matrices",
        "strings"
    ]
},
{
    "contestId": 687,
    "index": "D",
    "name": "Dividing Kingdom II",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "dsu",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 683,
    "index": "I",
    "name": "Loader",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "graphs"
    ]
},
{
    "contestId": 681,
    "index": "E",
    "name": "Runaway to a Shadow",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 678,
    "index": "F",
    "name": "Lena and Queries",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "geometry"
    ]
},
{
    "contestId": 666,
    "index": "C",
    "name": "Codeword",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "strings"
    ]
},
{
    "contestId": 660,
    "index": "F",
    "name": "Bear and Bowling 4",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 645,
    "index": "F",
    "name": "Cowslip Collections",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ]
},
{
    "contestId": 628,
    "index": "F",
    "name": "Bear and Fair Set",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 618,
    "index": "E",
    "name": "Robot Arm",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "geometry"
    ]
},
{
    "contestId": 613,
    "index": "C",
    "name": "Necklace",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 611,
    "index": "F",
    "name": "New Year and Cleaning",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "implementation"
    ]
},
{
    "contestId": 610,
    "index": "E",
    "name": "Alphabet Permutations",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "strings"
    ]
},
{
    "contestId": 609,
    "index": "F",
    "name": "Frogs and mosquitoes",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 607,
    "index": "C",
    "name": "Marbles",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "hashing",
        "strings"
    ]
},
{
    "contestId": 605,
    "index": "D",
    "name": "Board Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "dfs and similar"
    ]
},
{
    "contestId": 596,
    "index": "E",
    "name": "Wilbur and Strings",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "strings"
    ]
},
{
    "contestId": 594,
    "index": "D",
    "name": "REQ",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "number theory"
    ]
},
{
    "contestId": 594,
    "index": "B",
    "name": "Max and Bike",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "geometry"
    ]
},
{
    "contestId": 580,
    "index": "E",
    "name": "Kefa and Watch",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 571,
    "index": "C",
    "name": "CNF 2",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 566,
    "index": "G",
    "name": "Max and Min",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 555,
    "index": "D",
    "name": "Case of a Top Secret",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "implementation",
        "math"
    ]
},
{
    "contestId": 551,
    "index": "E",
    "name": "GukiZ and GukiZiana",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 543,
    "index": "C",
    "name": "Remembering Strings",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 530,
    "index": "I",
    "name": "Different variables",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special"
    ]
},
{
    "contestId": 528,
    "index": "D",
    "name": "Fuzzy Search",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "brute force",
        "fft"
    ]
},
{
    "contestId": 508,
    "index": "D",
    "name": "Tanya and Password",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 501,
    "index": "E",
    "name": "Misha and Palindrome Degree",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "combinatorics",
        "implementation"
    ]
},
{
    "contestId": 484,
    "index": "E",
    "name": "Sign on Fence",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 468,
    "index": "C",
    "name": "Hack it!",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "constructive algorithms",
        "math"
    ]
},
{
    "contestId": 449,
    "index": "C",
    "name": "Jzzhu and Apples",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "number theory"
    ]
},
{
    "contestId": 444,
    "index": "D",
    "name": "DZY Loves Strings",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "hashing",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 442,
    "index": "C",
    "name": "Artem and Array ",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 437,
    "index": "E",
    "name": "The Child and Polygon",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 435,
    "index": "E",
    "name": "Special Graph",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": []
},
{
    "contestId": 433,
    "index": "E",
    "name": "Tachibana Kanade's Tofu",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 425,
    "index": "E",
    "name": "Sereja and Sets",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 424,
    "index": "E",
    "name": "Colored Jenga",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 416,
    "index": "E",
    "name": "President's Path",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 407,
    "index": "C",
    "name": "Curious Array",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "combinatorics",
        "implementation",
        "math"
    ]
},
{
    "contestId": 401,
    "index": "E",
    "name": "Olympic Games",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "math"
    ]
},
{
    "contestId": 383,
    "index": "B",
    "name": "Volcanoes",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "implementation",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 380,
    "index": "D",
    "name": "Sereja and Cinema",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "math"
    ]
},
{
    "contestId": 379,
    "index": "E",
    "name": "New Year Tree Decorations",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "geometry",
        "schedules",
        "sortings"
    ]
},
{
    "contestId": 370,
    "index": "E",
    "name": "Summer Reading",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 363,
    "index": "E",
    "name": "Two Circles",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 360,
    "index": "C",
    "name": "Levko and Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 351,
    "index": "C",
    "name": "Jeff and Brackets",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 348,
    "index": "D",
    "name": "Turtles",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "matrices"
    ]
},
{
    "contestId": 348,
    "index": "C",
    "name": "Subset Sums",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 341,
    "index": "D",
    "name": "Iahub and Xors",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 333,
    "index": "E",
    "name": "Summer Earnings",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force",
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 331,
    "index": "C3",
    "name": "The Great Julya Calendar",
    "type": "PROGRAMMING",
    "points": 60.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 329,
    "index": "D",
    "name": "The Evil Temple and the Moving Rocks",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 317,
    "index": "C",
    "name": "Balance",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 314,
    "index": "D",
    "name": "Sereja and Straight Lines",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "geometry",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 311,
    "index": "C",
    "name": "Fetch the Treasure",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 301,
    "index": "C",
    "name": "Yaroslav and Algorithm",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 297,
    "index": "D",
    "name": "Color the Carpet",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 295,
    "index": "E",
    "name": "Yaroslav and Points",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 294,
    "index": "D",
    "name": "Shaass and Painter Robot",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "implementation",
        "number theory"
    ]
},
{
    "contestId": 290,
    "index": "E",
    "name": "HQ",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "*special",
        "constructive algorithms"
    ]
},
{
    "contestId": 266,
    "index": "E",
    "name": "More Queries to Array...",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 264,
    "index": "D",
    "name": "Colorful Stones",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "two pointers"
    ]
},
{
    "contestId": 263,
    "index": "E",
    "name": "Rhombus",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 260,
    "index": "E",
    "name": "Dividing Kingdom",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 220,
    "index": "D",
    "name": "Little Elephant and Triangle",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "geometry",
        "math"
    ]
},
{
    "contestId": 212,
    "index": "D",
    "name": "Cutting a Fence",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "data structures",
        "dsu"
    ]
},
{
    "contestId": 185,
    "index": "C",
    "name": "Clever Fat Rat",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 178,
    "index": "F3",
    "name": "Representative Sampling",
    "type": "PROGRAMMING",
    "points": 50.0,
    "rating": 2500,
    "tags": []
},
{
    "contestId": 176,
    "index": "D",
    "name": "Hyper String",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 173,
    "index": "D",
    "name": "Deputies",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 166,
    "index": "D",
    "name": "Shoe Store",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "graph matchings",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 161,
    "index": "E",
    "name": "Polycarpus the Safecracker",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 156,
    "index": "D",
    "name": "Clues",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "combinatorics",
        "graphs"
    ]
},
{
    "contestId": 152,
    "index": "E",
    "name": "Garden",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 147,
    "index": "B",
    "name": "Smile House",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "graphs",
        "matrices"
    ]
},
{
    "contestId": 138,
    "index": "D",
    "name": "World of Darkraft",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 135,
    "index": "D",
    "name": "Cycle",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dfs and similar",
        "implementation"
    ]
},
{
    "contestId": 123,
    "index": "E",
    "name": "Maze",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dfs and similar",
        "dp",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 121,
    "index": "D",
    "name": "Lucky Segments",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "binary search",
        "implementation",
        "two pointers"
    ]
},
{
    "contestId": 119,
    "index": "D",
    "name": "String Transformation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "hashing",
        "strings"
    ]
},
{
    "contestId": 117,
    "index": "D",
    "name": "Not Quick Transformation",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "math"
    ]
},
{
    "contestId": 105,
    "index": "E",
    "name": "Lift and Throw",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 101,
    "index": "E",
    "name": "Candies and Stones",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 98,
    "index": "D",
    "name": "Help Monks",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 98,
    "index": "C",
    "name": "Help Greg the Dwarf",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 95,
    "index": "E",
    "name": "Lucky Country",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 95,
    "index": "D",
    "name": "Horse Races",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 93,
    "index": "D",
    "name": "Flags",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "math",
        "matrices"
    ]
},
{
    "contestId": 93,
    "index": "C",
    "name": "Azembler",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "implementation"
    ]
},
{
    "contestId": 91,
    "index": "E",
    "name": "Igloo Skyscraper",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "geometry"
    ]
},
{
    "contestId": 89,
    "index": "D",
    "name": "Space mines",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2500,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 86,
    "index": "C",
    "name": "Genetic engineering",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "string suffix structures",
        "trees"
    ]
},
{
    "contestId": 68,
    "index": "D",
    "name": "Half-decay tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 67,
    "index": "E",
    "name": "Save the City!",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 60,
    "index": "D",
    "name": "Savior",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "brute force",
        "dsu",
        "math"
    ]
},
{
    "contestId": 57,
    "index": "D",
    "name": "Journey",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "math"
    ]
},
{
    "contestId": 55,
    "index": "E",
    "name": "Very simple problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "geometry",
        "two pointers"
    ]
},
{
    "contestId": 55,
    "index": "D",
    "name": "Beautiful numbers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2500,
    "tags": [
        "dp",
        "number theory"
    ]
},
{
    "contestId": 53,
    "index": "E",
    "name": "Dead Ends",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "bitmasks",
        "dp"
    ]
},
{
    "contestId": 46,
    "index": "G",
    "name": "Emperor's Problem",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 45,
    "index": "F",
    "name": "Goats and Wolves",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 44,
    "index": "G",
    "name": "Shooting Gallery",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "implementation"
    ]
},
{
    "contestId": 40,
    "index": "E",
    "name": "Number Table",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2500,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 39,
    "index": "I",
    "name": "Tram",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": []
},
{
    "contestId": 23,
    "index": "E",
    "name": "Tree",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 23,
    "index": "C",
    "name": "Oranges and Apples",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "constructive algorithms",
        "sortings"
    ]
},
{
    "contestId": 17,
    "index": "C",
    "name": "Balance",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 15,
    "index": "D",
    "name": "Map",
    "type": "PROGRAMMING",
    "rating": 2500,
    "tags": [
        "data structures",
        "implementation",
        "sortings"
    ]
}
]
