[
{
    "contestId": 1945,
    "index": "H",
    "name": "GCD is Greater",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "brute force",
        "data structures",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1919,
    "index": "E",
    "name": "Counting Prefixes",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "constructive algorithms",
        "dp",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1906,
    "index": "B",
    "name": "Button Pressing",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "hashing"
    ]
},
{
    "contestId": 1905,
    "index": "F",
    "name": "Field Should Not Be Empty",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 1898,
    "index": "F",
    "name": "Vova Escapes the Matrix",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "dfs and similar",
        "divide and conquer",
        "shortest paths"
    ]
},
{
    "contestId": 1896,
    "index": "F",
    "name": "Bracket Xoring",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math"
    ]
},
{
    "contestId": 1895,
    "index": "F",
    "name": "Fancy Arrays",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "matrices"
    ]
},
{
    "contestId": 1893,
    "index": "D",
    "name": "Colorful Constructive",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1889,
    "index": "C2",
    "name": "Doremy's Drying Plan (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1863,
    "index": "F",
    "name": "Divide, XOR, and Conquer",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "math"
    ]
},
{
    "contestId": 1858,
    "index": "E2",
    "name": "Rollbacks (Hard Version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "interactive",
        "trees"
    ]
},
{
    "contestId": 1848,
    "index": "E",
    "name": "Vika and Stone Skipping",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1844,
    "index": "F1",
    "name": "Min Cost Permutation (Easy Version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1835,
    "index": "C",
    "name": "Twin Clusters",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1827,
    "index": "C",
    "name": "Palindrome Partition",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "brute force",
        "data structures",
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1823,
    "index": "F",
    "name": "Random Walk",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "graphs",
        "math",
        "probabilities",
        "trees"
    ]
},
{
    "contestId": 1821,
    "index": "F",
    "name": "Timber",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 1815,
    "index": "D",
    "name": "XOR Counting",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1805,
    "index": "F1",
    "name": "Survival of the Weakest (easy version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "brute force",
        "implementation",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1799,
    "index": "G",
    "name": "Count Voting",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1793,
    "index": "F",
    "name": "Rebrending",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "data structures",
        "divide and conquer",
        "implementation"
    ]
},
{
    "contestId": 1793,
    "index": "E",
    "name": "Velepin and Marketing",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1778,
    "index": "F",
    "name": "Maximizing Root",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 1773,
    "index": "H",
    "name": "Hot and Cold",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "interactive"
    ]
},
{
    "contestId": 1773,
    "index": "D",
    "name": "Dominoes",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "flows",
        "graph matchings",
        "greedy"
    ]
},
{
    "contestId": 1765,
    "index": "G",
    "name": "Guess the String",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 1765,
    "index": "C",
    "name": "Card Guessing",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 1762,
    "index": "F",
    "name": "Good Pairs ",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 1762,
    "index": "E",
    "name": "Tree Sum",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "math",
        "trees"
    ]
},
{
    "contestId": 1740,
    "index": "F",
    "name": "Conditional Mix",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1739,
    "index": "F",
    "name": "Keyboard Design",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "data structures",
        "dp",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1736,
    "index": "E",
    "name": "Swap and Take",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1704,
    "index": "F",
    "name": "Colouring Game",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dp",
        "games"
    ]
},
{
    "contestId": 1700,
    "index": "F",
    "name": "Puzzle",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1700,
    "index": "E",
    "name": "Serega the Pirate",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms"
    ]
},
{
    "contestId": 1699,
    "index": "E",
    "name": "Three Days Grace",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "math",
        "number theory",
        "two pointers"
    ]
},
{
    "contestId": 1696,
    "index": "F",
    "name": "Tree Recovery",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1685,
    "index": "C",
    "name": "Bring Balance",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1684,
    "index": "F",
    "name": "Diverse Segments",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "two pointers"
    ]
},
{
    "contestId": 1681,
    "index": "E",
    "name": "Labyrinth Adventures",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "matrices",
        "shortest paths"
    ]
},
{
    "contestId": 1680,
    "index": "F",
    "name": "Lenient Vertex Cover",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "divide and conquer",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1679,
    "index": "F",
    "name": "Formalism for Formalism",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "math"
    ]
},
{
    "contestId": 1661,
    "index": "F",
    "name": "Teleporters",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "greedy"
    ]
},
{
    "contestId": 1657,
    "index": "F",
    "name": "Words on Tree",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "2-sat",
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1656,
    "index": "F",
    "name": "Parametric MST",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "constructive algorithms",
        "graphs",
        "greedy",
        "math",
        "sortings"
    ]
},
{
    "contestId": 1651,
    "index": "E",
    "name": "Sum of Matchings",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "brute force",
        "combinatorics",
        "constructive algorithms",
        "dfs and similar",
        "graph matchings",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1614,
    "index": "E",
    "name": "Divan and a Cottage",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures"
    ]
},
{
    "contestId": 1613,
    "index": "F",
    "name": "Tree Coloring",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "fft"
    ]
},
{
    "contestId": 1599,
    "index": "J",
    "name": "Bob's Beautiful Array",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 1599,
    "index": "A",
    "name": "Weights",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1592,
    "index": "F1",
    "name": "Alice and Recoloring 1",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1584,
    "index": "F",
    "name": "Strange LCS",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "graphs",
        "greedy",
        "strings"
    ]
},
{
    "contestId": 1582,
    "index": "G",
    "name": "Kuzya and Homework",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "number theory"
    ]
},
{
    "contestId": 1580,
    "index": "B",
    "name": "Mathematics Curriculum",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "combinatorics",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1575,
    "index": "E",
    "name": "Eye-Pleasing City Park Tour",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1569,
    "index": "E",
    "name": "Playoff Restoration",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "hashing",
        "implementation",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1566,
    "index": "F",
    "name": "Points Movement",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 1558,
    "index": "D",
    "name": "Top-Notch Insertions",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "data structures"
    ]
},
{
    "contestId": 1554,
    "index": "E",
    "name": "You",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1539,
    "index": "F",
    "name": "Strange Array",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 1536,
    "index": "F",
    "name": "Omkar and Akmar",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "chinese remainder theorem",
        "combinatorics",
        "constructive algorithms",
        "fft",
        "games",
        "geometry",
        "math",
        "meet-in-the-middle",
        "string suffix structures"
    ]
},
{
    "contestId": 1530,
    "index": "F",
    "name": "Bingo",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1523,
    "index": "E",
    "name": "Crypto Lights",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1515,
    "index": "F",
    "name": "Phoenix and Earthquake",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dsu",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1510,
    "index": "B",
    "name": "Button Lock",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "flows",
        "graph matchings",
        "graphs"
    ]
},
{
    "contestId": 1505,
    "index": "G",
    "name": "Encoded message",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "*special",
        "implementation"
    ]
},
{
    "contestId": 1503,
    "index": "D",
    "name": "Flip the Cards",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "2-sat",
        "constructive algorithms",
        "data structures",
        "greedy",
        "sortings",
        "two pointers"
    ]
},
{
    "contestId": 1500,
    "index": "C",
    "name": "Matrix Sorting",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "constructive algorithms",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1495,
    "index": "D",
    "name": "BFS Trees",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dfs and similar",
        "graphs",
        "math",
        "shortest paths",
        "trees"
    ]
},
{
    "contestId": 1493,
    "index": "F",
    "name": "Enchanted Matrix",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "interactive",
        "number theory"
    ]
},
{
    "contestId": 1493,
    "index": "E",
    "name": "Enormous XOR",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "constructive algorithms",
        "greedy",
        "math",
        "strings",
        "two pointers"
    ]
},
{
    "contestId": 1486,
    "index": "F",
    "name": "Pairs of Paths",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "data structures",
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1469,
    "index": "F",
    "name": "Power Sockets",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1466,
    "index": "G",
    "name": "Song of the Sirens",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "hashing",
        "math",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 1446,
    "index": "D1",
    "name": "Frequency Problem (Easy Version)",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 1439,
    "index": "C",
    "name": "Greedy Shopping",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "greedy",
        "implementation"
    ]
},
{
    "contestId": 1439,
    "index": "B",
    "name": "Graph Subset Problem",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "data structures",
        "graphs"
    ]
},
{
    "contestId": 1437,
    "index": "G",
    "name": "Death DBMS",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "string suffix structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1437,
    "index": "F",
    "name": "Emotional Fishermen",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1431,
    "index": "H",
    "name": "Rogue-like Game",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "*special",
        "brute force",
        "greedy",
        "two pointers"
    ]
},
{
    "contestId": 1430,
    "index": "G",
    "name": "Yet Another DAG Problem",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "flows",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1430,
    "index": "F",
    "name": "Realistic Gameplay",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1425,
    "index": "B",
    "name": "Blue and Red of Our Faculty!",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 1423,
    "index": "L",
    "name": "Light switches",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1416,
    "index": "D",
    "name": "Graph and Queries",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dsu",
        "graphs",
        "implementation",
        "trees"
    ]
},
{
    "contestId": 1406,
    "index": "E",
    "name": "Deleting Numbers",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "interactive",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1402,
    "index": "C",
    "name": "Star Trek",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "*special",
        "combinatorics",
        "dfs and similar",
        "dp",
        "games",
        "graphs",
        "matrices",
        "trees"
    ]
},
{
    "contestId": 1400,
    "index": "G",
    "name": "Mercenaries",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "combinatorics",
        "dp",
        "dsu",
        "math",
        "two pointers"
    ]
},
{
    "contestId": 1398,
    "index": "G",
    "name": "Running Competition",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "fft",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1394,
    "index": "C",
    "name": "Boboniu and String",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "geometry",
        "ternary search"
    ]
},
{
    "contestId": 1391,
    "index": "E",
    "name": "Pairs of Pairs",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 1389,
    "index": "F",
    "name": "Bicolored Segments",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "graph matchings",
        "sortings"
    ]
},
{
    "contestId": 1380,
    "index": "G",
    "name": "Circular Dungeon",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "greedy",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1380,
    "index": "F",
    "name": "Strange Addition",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "matrices"
    ]
},
{
    "contestId": 1375,
    "index": "F",
    "name": "Integer Game",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "games",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1373,
    "index": "G",
    "name": "Pawns",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "greedy"
    ]
},
{
    "contestId": 1368,
    "index": "F",
    "name": "Lamps on a Circle",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "games",
        "implementation",
        "interactive",
        "math"
    ]
},
{
    "contestId": 1363,
    "index": "F",
    "name": "Rotating Substrings",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 1355,
    "index": "F",
    "name": "Guess Divisors Count",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "interactive",
        "number theory"
    ]
},
{
    "contestId": 1354,
    "index": "G",
    "name": "Find a Gift",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "interactive",
        "probabilities"
    ]
},
{
    "contestId": 1348,
    "index": "F",
    "name": "Phoenix and Memory",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 1344,
    "index": "C",
    "name": "Quantifier Question",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "math"
    ]
},
{
    "contestId": 1340,
    "index": "D",
    "name": "Nastya and Time Machine",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1326,
    "index": "F1",
    "name": "Wise Men (Easy Version)",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "dp",
        "meet-in-the-middle"
    ]
},
{
    "contestId": 1325,
    "index": "E",
    "name": "Ehab's REAL Number Theory Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "dfs and similar",
        "graphs",
        "number theory",
        "shortest paths"
    ]
},
{
    "contestId": 1312,
    "index": "G",
    "name": "Autocompletion",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "dfs and similar",
        "dp"
    ]
},
{
    "contestId": 1301,
    "index": "F",
    "name": "Super Jaber",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "graphs",
        "implementation",
        "shortest paths"
    ]
},
{
    "contestId": 1278,
    "index": "F",
    "name": "Cards",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "number theory",
        "probabilities"
    ]
},
{
    "contestId": 1270,
    "index": "F",
    "name": "Awesome Substrings",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "math",
        "strings"
    ]
},
{
    "contestId": 1267,
    "index": "I",
    "name": "Intriguing Selection",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "implementation",
        "interactive",
        "sortings"
    ]
},
{
    "contestId": 1267,
    "index": "F",
    "name": "Foolpr\u00fcf Security",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 1264,
    "index": "D1",
    "name": "Beautiful Bracket Sequence (easy version)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 1257,
    "index": "G",
    "name": "Divisor Set",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "divide and conquer",
        "fft",
        "greedy",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1237,
    "index": "F",
    "name": "Balanced Domino Placements",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1227,
    "index": "G",
    "name": "Not Same",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1223,
    "index": "F",
    "name": "Stack Exterminable Arrays",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "hashing"
    ]
},
{
    "contestId": 1218,
    "index": "C",
    "name": "Jumping Transformers",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1217,
    "index": "F",
    "name": "Forced Online Queries Problem",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1209,
    "index": "F",
    "name": "Koala and Notebook",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dfs and similar",
        "graphs",
        "shortest paths",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1208,
    "index": "F",
    "name": "Bits And Pieces",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dfs and similar",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 1185,
    "index": "G2",
    "name": "Playlist for Polycarp (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 1178,
    "index": "F2",
    "name": "Long Colorful Strip",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 1172,
    "index": "C2",
    "name": "Nauuo and Pictures (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2600,
    "tags": [
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 1158,
    "index": "D",
    "name": "Winding polygonal line",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "geometry",
        "greedy",
        "math"
    ]
},
{
    "contestId": 1153,
    "index": "F",
    "name": "Serval and Bonus Problem",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 1140,
    "index": "F",
    "name": "Extending Set of Points",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "dsu"
    ]
},
{
    "contestId": 1120,
    "index": "E",
    "name": "The very same Munchhausen",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 1111,
    "index": "D",
    "name": "Destroy the Colony",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 1110,
    "index": "F",
    "name": "Nearest Leaf",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 1107,
    "index": "F",
    "name": "Vasya and Endless Credits",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "flows",
        "graph matchings",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 1091,
    "index": "F",
    "name": "New Year and the Mallard Expedition",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 1090,
    "index": "J",
    "name": "Two Prefixes",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "strings"
    ]
},
{
    "contestId": 1090,
    "index": "F",
    "name": "How to Learn You Score",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "interactive"
    ]
},
{
    "contestId": 1089,
    "index": "I",
    "name": "Interval-Free Permutations",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics"
    ]
},
{
    "contestId": 1081,
    "index": "F",
    "name": "Tricky Interactor",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "implementation",
        "interactive"
    ]
},
{
    "contestId": 1073,
    "index": "G",
    "name": "Yet Another LCP Problem",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "string suffix structures"
    ]
},
{
    "contestId": 1070,
    "index": "L",
    "name": "Odd Federalization",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1067,
    "index": "C",
    "name": "Knights",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1063,
    "index": "D",
    "name": "Candies for Children",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "math"
    ]
},
{
    "contestId": 1061,
    "index": "E",
    "name": "Politics",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 1051,
    "index": "E",
    "name": "Vasya and Big Integers",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing",
        "strings"
    ]
},
{
    "contestId": 1045,
    "index": "J",
    "name": "Moonwalk challenge",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "strings",
        "trees"
    ]
},
{
    "contestId": 1031,
    "index": "E",
    "name": "Triple Flips",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 1027,
    "index": "G",
    "name": "X-mouse in the Campus",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "bitmasks",
        "math",
        "number theory"
    ]
},
{
    "contestId": 1023,
    "index": "F",
    "name": "Mobile Phone Network",
    "type": "PROGRAMMING",
    "points": 3250.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dsu",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 1016,
    "index": "F",
    "name": "Road Projects",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "trees"
    ]
},
{
    "contestId": 1004,
    "index": "F",
    "name": "Sonya and Bitwise OR",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 982,
    "index": "E",
    "name": "Billiard",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "geometry",
        "number theory"
    ]
},
{
    "contestId": 975,
    "index": "E",
    "name": "Hag's Khashba",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 963,
    "index": "C",
    "name": "Cutting Rectangle",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "math",
        "number theory"
    ]
},
{
    "contestId": 958,
    "index": "F3",
    "name": "Lightsabers (hard)",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "fft"
    ]
},
{
    "contestId": 955,
    "index": "F",
    "name": "Heaps",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "trees"
    ]
},
{
    "contestId": 955,
    "index": "D",
    "name": "Scissors",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "strings"
    ]
},
{
    "contestId": 940,
    "index": "F",
    "name": "Machine Learning",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "data structures"
    ]
},
{
    "contestId": 935,
    "index": "F",
    "name": "Fafa and Array",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 925,
    "index": "D",
    "name": "Aztec Catacombs",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 919,
    "index": "F",
    "name": "A Game With Numbers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "games",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 917,
    "index": "D",
    "name": "Stranger Trees",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "math",
        "matrices",
        "trees"
    ]
},
{
    "contestId": 914,
    "index": "G",
    "name": "Sum the Fibonacci",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "divide and conquer",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 896,
    "index": "C",
    "name": "Willem, Chtholly and Seniorious",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "probabilities"
    ]
},
{
    "contestId": 883,
    "index": "B",
    "name": "Berland Army",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 875,
    "index": "E",
    "name": "Delivery Club",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dp"
    ]
},
{
    "contestId": 848,
    "index": "C",
    "name": "Goodbye Souvenir",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer"
    ]
},
{
    "contestId": 843,
    "index": "C",
    "name": "Upgrading Tree",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "math",
        "trees"
    ]
},
{
    "contestId": 832,
    "index": "E",
    "name": "Vasya and Shifts",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "matrices"
    ]
},
{
    "contestId": 818,
    "index": "G",
    "name": "Four Melodies",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "flows",
        "graphs"
    ]
},
{
    "contestId": 814,
    "index": "E",
    "name": "An unavoidable detour for home",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 813,
    "index": "D",
    "name": "Two Melodies",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "flows"
    ]
},
{
    "contestId": 811,
    "index": "E",
    "name": "Vladik and Entertaining Flags",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dsu",
        "graphs"
    ]
},
{
    "contestId": 809,
    "index": "C",
    "name": "Find a car",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 802,
    "index": "C",
    "name": "Heidi and Library (hard)",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "flows"
    ]
},
{
    "contestId": 797,
    "index": "F",
    "name": "Mice and Holes",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "sortings"
    ]
},
{
    "contestId": 763,
    "index": "C",
    "name": "Timofey and remoduling",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 761,
    "index": "F",
    "name": "Dasha and Photos",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "data structures",
        "dp",
        "implementation"
    ]
},
{
    "contestId": 758,
    "index": "E",
    "name": "Broken Tree",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 755,
    "index": "F",
    "name": "PolandBall and Gifts",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "greedy"
    ]
},
{
    "contestId": 754,
    "index": "E",
    "name": "Dasha and cyclic table",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "fft",
        "strings",
        "trees"
    ]
},
{
    "contestId": 750,
    "index": "E",
    "name": "New Year and Old Subsequence",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "matrices"
    ]
},
{
    "contestId": 741,
    "index": "C",
    "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 725,
    "index": "E",
    "name": "Too Much Money",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "greedy"
    ]
},
{
    "contestId": 724,
    "index": "G",
    "name": "Xor-matic Number of the Graph",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "graphs",
        "math",
        "number theory",
        "trees"
    ]
},
{
    "contestId": 717,
    "index": "F",
    "name": "Heroes of Making Magic III",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 703,
    "index": "E",
    "name": "Mishka and Divisors",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "dp",
        "number theory"
    ]
},
{
    "contestId": 700,
    "index": "C",
    "name": "Break Up",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 698,
    "index": "D",
    "name": "Limak and Shooting Points",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "geometry",
        "math"
    ]
},
{
    "contestId": 690,
    "index": "E2",
    "name": "Photographs (II)",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": []
},
{
    "contestId": 690,
    "index": "B3",
    "name": "Recover Polygon (hard)",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 690,
    "index": "B2",
    "name": "Recover Polygon (medium)",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 685,
    "index": "D",
    "name": "Kay and Eternity",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "implementation",
        "sortings"
    ]
},
{
    "contestId": 682,
    "index": "E",
    "name": "Alyona and Triangles",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "geometry",
        "two pointers"
    ]
},
{
    "contestId": 662,
    "index": "C",
    "name": "Binary Table",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "divide and conquer",
        "dp",
        "fft",
        "math"
    ]
},
{
    "contestId": 653,
    "index": "F",
    "name": "Paper task",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "string suffix structures",
        "strings"
    ]
},
{
    "contestId": 650,
    "index": "D",
    "name": "Zip-line",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dp",
        "hashing"
    ]
},
{
    "contestId": 633,
    "index": "F",
    "name": "The Chocolate Spree",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "trees"
    ]
},
{
    "contestId": 631,
    "index": "E",
    "name": "Product Sum",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "geometry"
    ]
},
{
    "contestId": 627,
    "index": "D",
    "name": "Preorder Test",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "dfs and similar",
        "dp",
        "graphs",
        "greedy",
        "trees"
    ]
},
{
    "contestId": 622,
    "index": "F",
    "name": "The Sum of the k-th Powers",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 612,
    "index": "F",
    "name": "Simba on the Circle",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 607,
    "index": "D",
    "name": "Power Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 599,
    "index": "E",
    "name": "Sandy and Nuts",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "trees"
    ]
},
{
    "contestId": 568,
    "index": "C",
    "name": "New Language",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "2-sat",
        "greedy"
    ]
},
{
    "contestId": 566,
    "index": "B",
    "name": "Replicating Processes",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "greedy"
    ]
},
{
    "contestId": 547,
    "index": "D",
    "name": "Mike and Fish",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 542,
    "index": "E",
    "name": "Playing on Graph",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 542,
    "index": "D",
    "name": "Superhero's Job",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "dp",
        "hashing",
        "math",
        "number theory"
    ]
},
{
    "contestId": 535,
    "index": "E",
    "name": "Tavas and Pashmaks",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "geometry",
        "math"
    ]
},
{
    "contestId": 527,
    "index": "E",
    "name": "Data Center Drama",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "graphs"
    ]
},
{
    "contestId": 513,
    "index": "E1",
    "name": "Subarray Cuts",
    "type": "PROGRAMMING",
    "points": 9.0,
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 513,
    "index": "D2",
    "name": "Constrained Tree",
    "type": "PROGRAMMING",
    "points": 8.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "data structures"
    ]
},
{
    "contestId": 494,
    "index": "C",
    "name": "Helping People",
    "type": "PROGRAMMING",
    "points": 1750.0,
    "rating": 2600,
    "tags": [
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 484,
    "index": "C",
    "name": "Strange Sorting",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "implementation",
        "math"
    ]
},
{
    "contestId": 482,
    "index": "C",
    "name": "Game with Strings",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "dp",
        "probabilities"
    ]
},
{
    "contestId": 480,
    "index": "D",
    "name": "Parcels",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 442,
    "index": "D",
    "name": "Adam and Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "trees"
    ]
},
{
    "contestId": 436,
    "index": "E",
    "name": "Cardboard Box",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "greedy"
    ]
},
{
    "contestId": 420,
    "index": "E",
    "name": "Playing the ball",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 382,
    "index": "E",
    "name": "Ksenia and Combinatorics",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 380,
    "index": "E",
    "name": "Sereja and Dividing",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 375,
    "index": "C",
    "name": "Circling Round Treasures",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "shortest paths"
    ]
},
{
    "contestId": 374,
    "index": "E",
    "name": "Inna and Babies",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dsu",
        "geometry",
        "implementation"
    ]
},
{
    "contestId": 372,
    "index": "D",
    "name": "Choosing Subtree is Fun",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "data structures",
        "dfs and similar",
        "trees",
        "two pointers"
    ]
},
{
    "contestId": 360,
    "index": "D",
    "name": "Levko and Sets",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "number theory"
    ]
},
{
    "contestId": 346,
    "index": "D",
    "name": "Robot Control",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 338,
    "index": "E",
    "name": "Optimize!",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 331,
    "index": "D2",
    "name": "Escaping on Beaveractor",
    "type": "PROGRAMMING",
    "points": 30.0,
    "rating": 2600,
    "tags": [
        "graphs"
    ]
},
{
    "contestId": 325,
    "index": "C",
    "name": "Monsters and Diamonds",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dfs and similar",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 321,
    "index": "E",
    "name": "Ciel and Gondolas",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "divide and conquer",
        "dp"
    ]
},
{
    "contestId": 311,
    "index": "D",
    "name": "Interval Cubing",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "math"
    ]
},
{
    "contestId": 303,
    "index": "D",
    "name": "Rotatable Number",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 286,
    "index": "D",
    "name": "Tourists",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 285,
    "index": "E",
    "name": "Positions in Permutations",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ]
},
{
    "contestId": 274,
    "index": "C",
    "name": "The Last Hole!",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "geometry"
    ]
},
{
    "contestId": 273,
    "index": "E",
    "name": "Dima and Game",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "games"
    ]
},
{
    "contestId": 269,
    "index": "D",
    "name": "Maximum Waterfall",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "dp",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 261,
    "index": "D",
    "name": "Maxim and Increasing Subsequence",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 258,
    "index": "D",
    "name": "Little Elephant and Broken Sorting",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 249,
    "index": "E",
    "name": "Endless Matrix",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 248,
    "index": "E",
    "name": "Piglet's Birthday",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 241,
    "index": "E",
    "name": "Flights",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 240,
    "index": "F",
    "name": "TorCoder",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "data structures"
    ]
},
{
    "contestId": 238,
    "index": "E",
    "name": "Meeting Her",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 235,
    "index": "E",
    "name": "Number Challenge",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "implementation",
        "math",
        "number theory"
    ]
},
{
    "contestId": 232,
    "index": "C",
    "name": "Doe Graphs",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "divide and conquer",
        "dp",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 229,
    "index": "E",
    "name": "Gifts",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp",
        "math",
        "probabilities"
    ]
},
{
    "contestId": 217,
    "index": "C",
    "name": "Formurosa",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "divide and conquer",
        "dp",
        "expression parsing"
    ]
},
{
    "contestId": 201,
    "index": "E",
    "name": "Thoroughly Bureaucratic Organization",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "combinatorics"
    ]
},
{
    "contestId": 201,
    "index": "D",
    "name": "Brand New Problem",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "bitmasks",
        "brute force",
        "dp"
    ]
},
{
    "contestId": 196,
    "index": "E",
    "name": "Opening Portals",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dsu",
        "graphs",
        "shortest paths"
    ]
},
{
    "contestId": 185,
    "index": "D",
    "name": "Visit of the Great",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "math",
        "number theory"
    ]
},
{
    "contestId": 177,
    "index": "G2",
    "name": "Fibonacci Strings",
    "type": "PROGRAMMING",
    "points": 70.0,
    "rating": 2600,
    "tags": [
        "matrices",
        "strings"
    ]
},
{
    "contestId": 175,
    "index": "E",
    "name": "Power Defence",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "dp",
        "geometry",
        "greedy"
    ]
},
{
    "contestId": 173,
    "index": "E",
    "name": "Camping Groups",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "sortings"
    ]
},
{
    "contestId": 152,
    "index": "D",
    "name": "Frames",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "brute force"
    ]
},
{
    "contestId": 150,
    "index": "D",
    "name": "Mission Impassable",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "strings"
    ]
},
{
    "contestId": 142,
    "index": "D",
    "name": "Help Shrek and Donkey 2",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "games"
    ]
},
{
    "contestId": 140,
    "index": "F",
    "name": "New Year Snowflake",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "geometry",
        "sortings"
    ]
},
{
    "contestId": 140,
    "index": "E",
    "name": "New Year Garland",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 115,
    "index": "D",
    "name": "Unambiguous Arithmetic Expression",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "dp",
        "expression parsing"
    ]
},
{
    "contestId": 93,
    "index": "E",
    "name": "Lostborn",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "dp",
        "math",
        "number theory"
    ]
},
{
    "contestId": 91,
    "index": "D",
    "name": "Grocer's Problem",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "graphs",
        "greedy"
    ]
},
{
    "contestId": 87,
    "index": "E",
    "name": "Mogohu-Rea Idol",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 85,
    "index": "E",
    "name": "Guard Towers",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "binary search",
        "dsu",
        "geometry",
        "graphs",
        "sortings"
    ]
},
{
    "contestId": 82,
    "index": "E",
    "name": "Corridor",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "geometry"
    ]
},
{
    "contestId": 67,
    "index": "C",
    "name": "Sequence of Balls",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "dp"
    ]
},
{
    "contestId": 60,
    "index": "E",
    "name": "Mushroom Gnomes",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "math",
        "matrices"
    ]
},
{
    "contestId": 40,
    "index": "D",
    "name": "Interesting Sequence",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "math"
    ]
},
{
    "contestId": 39,
    "index": "K",
    "name": "Testing",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": []
},
{
    "contestId": 37,
    "index": "E",
    "name": "Trial for Chief",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "graphs",
        "greedy",
        "shortest paths"
    ]
},
{
    "contestId": 36,
    "index": "E",
    "name": "Two Paths",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": [
        "constructive algorithms",
        "dsu",
        "graphs",
        "implementation"
    ]
},
{
    "contestId": 33,
    "index": "E",
    "name": "Helper",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2600,
    "tags": []
},
{
    "contestId": 30,
    "index": "D",
    "name": "King's Problem?",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2600,
    "tags": [
        "geometry",
        "greedy"
    ]
},
{
    "contestId": 23,
    "index": "D",
    "name": "Tetragon",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "geometry",
        "math"
    ]
},
{
    "contestId": 15,
    "index": "E",
    "name": "Triangles",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "combinatorics",
        "dp"
    ]
},
{
    "contestId": 13,
    "index": "D",
    "name": "Triangles",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "geometry"
    ]
},
{
    "contestId": 10,
    "index": "E",
    "name": "Greedy Change",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "constructive algorithms"
    ]
},
{
    "contestId": 8,
    "index": "E",
    "name": "Beads",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "graphs"
    ]
},
{
    "contestId": 8,
    "index": "D",
    "name": "Two Friends",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "binary search",
        "geometry"
    ]
},
{
    "contestId": 7,
    "index": "E",
    "name": "Defining Macros",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "dp",
        "expression parsing",
        "implementation"
    ]
},
{
    "contestId": 6,
    "index": "D",
    "name": "Lizards and Basements 2",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "brute force",
        "dp"
    ]
},
{
    "contestId": 3,
    "index": "D",
    "name": "Least Cost Bracket Sequence",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "greedy"
    ]
},
{
    "contestId": 2,
    "index": "C",
    "name": "Commentator problem",
    "type": "PROGRAMMING",
    "rating": 2600,
    "tags": [
        "geometry"
    ]
}
]
